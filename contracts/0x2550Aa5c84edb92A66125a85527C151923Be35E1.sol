contract main {




// =====================  Runtime code  =====================


#
#  - buyToken(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4)
#  - workerExecuteMetaTransaction(address arg1, bytes32 arg2, bytes arg3, bytes32 arg4, bytes32 arg5, uint8 arg6)
#
const getChainId = chainid

const isMaster = 1

const isLocalContract = 1

const EIP712_DOMAIN_TYPEHASH = sha3(0x29454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e7472616374)

const CONTRACT_ERC712_NAME = Array(len=38, data=0x6e47414d4520437265646974732053696465636861696e204d617374657220436f6e74726163, mem[166 len 26], mem[218 len 6])

const CONTRACT_ERC712_VERSION = ''


uint256 domainSeperator;
uint256 workerDomainSeperator;
mapping of uint256 nonce;
address owner;
address cfoAddress;
address cooAddress;
address recoveryAddress;
address gameContractAddress;
address erc20ContractAddress;
address erc721ContractAddress;
mapping of uint8 stor11;
array of address activeLocalContracts;
address minionManagerAddress;
uint256 gasGrantAmount;
uint256 gasRefillLevel;
mapping of uint8 stor16;
mapping of uint8 stor17;
uint256 buyTokenFeePoints;
array of struct purchaseIdtoTokenIds;

function cfoAddress() {
    return cfoAddress
}

function getWorkerDomainSeperator() {
    return workerDomainSeperator
}

function getDomainSeperator() {
    return domainSeperator
}

function getNonce(address arg1) {
    require calldata.size - 4 >= 32
    return nonce[address(arg1)]
}

function collectibleIsOnSale(uint256 arg1, uint256 arg2) {
    require calldata.size - 4 >= 64
    return bool(stor17[arg1][arg2])
}

function buyCollectibleOracleHashes(bytes32 arg1) {
    require calldata.size - 4 >= 32
    return bool(stor16[arg1])
}

function recoveryAddress() {
    return recoveryAddress
}

function localContracts(address arg1) {
    require calldata.size - 4 >= 32
    return bool(stor11[arg1])
}

function purchaseIdtoTokenIds(uint256 arg1, bytes32 arg2, uint256 arg3) {
    require calldata.size - 4 >= 96
    require arg3 < purchaseIdtoTokenIds[arg1][arg2].field_0
    return purchaseIdtoTokenIds[arg1][arg2][arg3].field_0
}

function minionManager() {
    return minionManagerAddress
}

function owner() {
    return owner
}

function activeLocalContracts(uint256 arg1) {
    require calldata.size - 4 >= 32
    require arg1 < activeLocalContracts.length
    return activeLocalContracts[arg1]
}

function erc20Contract() {
    return erc20ContractAddress
}

function cooAddress() {
    return cooAddress
}

function gasGrantAmount() {
    return gasGrantAmount
}

function buyTokenFeePoints() {
    return buyTokenFeePoints
}

function gameContract() {
    return gameContractAddress
}

function erc721Contract() {
    return erc721ContractAddress
}

function gasRefillLevel() {
    return gasRefillLevel
}

function _fallback() payable {
  stop
}

function parseTokenId(uint256 arg1) {
    require calldata.size - 4 >= 32
    return arg1 << 192, arg1 << 192, 0, uint64(arg1) >> 192
}

function isOwner(address arg1) {
    require calldata.size - 4 >= 32
    if not arg1:
        return bool(arg1)
    return (arg1 == owner)
}

function isCOO(address arg1) {
    require calldata.size - 4 >= 32
    if not arg1:
        return bool(arg1)
    return (arg1 == cooAddress)
}

function isCFO(address arg1) {
    require calldata.size - 4 >= 32
    if not arg1:
        return bool(arg1)
    return (arg1 == cfoAddress)
}

function updateCollectibleSaleStatus(uint256 arg1, uint256 arg2, bool arg3) {
    require calldata.size - 4 >= 96
    if not stor11[msg.sender]:
        revert with 0, 'must be local'
    stor17[arg1][arg2] = uint8(arg3)
}

function isWorker(address arg1) {
    require calldata.size - 4 >= 32
    require ext_code.size(minionManagerAddress)
    staticcall minionManagerAddress.0xaa156645 with:
            gas gas_remaining wei
           args arg1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    return bool(ext_call.return_data[0])
}

function isMinion(address arg1) {
    require calldata.size - 4 >= 32
    require ext_code.size(minionManagerAddress)
    staticcall minionManagerAddress.0xdfafcf7e with:
            gas gas_remaining wei
           args arg1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    return bool(ext_call.return_data[0])
}

function isWorkerOrMinion(address arg1) {
    require calldata.size - 4 >= 32
    require ext_code.size(minionManagerAddress)
    staticcall minionManagerAddress.0xc2babfd7 with:
            gas gas_remaining wei
           args arg1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    return bool(ext_call.return_data[0])
}

function updateTokenFeePoints(uint256 arg1) {
    require calldata.size - 4 >= 32
    if msg.sender != this.address:
        if cooAddress != msg.sender:
            revert with 0, 'must be coo'
    else:
        mem[96] = calldata.size
        mem[128 len calldata.size] = call.data[0 len calldata.size]
        if mem[calldata.size + 108 len 20] != cooAddress:
            revert with 0, 'must be coo'
    require arg1 <= 10000
    buyTokenFeePoints = arg1
    emit 0xe19b4921: arg1
}

function setGasRefillLevels(uint256 arg1, uint256 arg2) {
    require calldata.size - 4 >= 64
    if msg.sender != this.address:
        if cooAddress != msg.sender:
            revert with 0, 'must be coo'
    else:
        mem[96] = calldata.size
        mem[128 len calldata.size] = call.data[0 len calldata.size]
        if mem[calldata.size + 108 len 20] != cooAddress:
            revert with 0, 'must be coo'
    if arg2 < arg1:
        revert with 0, 'grant < refill level'
    gasGrantAmount = arg2
    gasRefillLevel = arg1
    emit 0x29e24b38: arg1, arg2
}

function setCOO(address arg1) {
    require calldata.size - 4 >= 32
    if msg.sender != this.address:
        if owner != msg.sender:
            revert with 0, 'must be owner'
    else:
        mem[96] = calldata.size
        mem[128 len calldata.size] = call.data[0 len calldata.size]
        if mem[calldata.size + 108 len 20] != owner:
            revert with 0, 'must be owner'
    if not arg1:
        revert with 0, 'address(0)'
    if owner == arg1:
        revert with 0, 'owner'
    if cfoAddress == arg1:
        revert with 0, 'cfo'
    if recoveryAddress == arg1:
        revert with 0, 'recovery'
    cooAddress = arg1
}

function setCFO(address arg1) {
    require calldata.size - 4 >= 32
    if msg.sender != this.address:
        if owner != msg.sender:
            revert with 0, 'must be owner'
    else:
        mem[96] = calldata.size
        mem[128 len calldata.size] = call.data[0 len calldata.size]
        if mem[calldata.size + 108 len 20] != owner:
            revert with 0, 'must be owner'
    if not arg1:
        revert with 0, 'address(0)'
    if owner == arg1:
        revert with 0, 'owner'
    if cooAddress == arg1:
        revert with 0, 'coo'
    if recoveryAddress == arg1:
        revert with 0, 'recovery'
    cfoAddress = arg1
}

function setRecovery(address arg1) {
    require calldata.size - 4 >= 32
    if msg.sender != this.address:
        if owner != msg.sender:
            revert with 0, 'must be owner'
    else:
        mem[96] = calldata.size
        mem[128 len calldata.size] = call.data[0 len calldata.size]
        if mem[calldata.size + 108 len 20] != owner:
            revert with 0, 'must be owner'
    if not arg1:
        revert with 0, 'address(0)'
    if owner == arg1:
        revert with 0, 'owner'
    if cfoAddress == arg1:
        revert with 0, 'cfo'
    if cooAddress == arg1:
        revert with 0, 'coo'
    recoveryAddress = arg1
}

function cancelAuctionByManager(uint256 arg1) {
    require calldata.size - 4 >= 32
    if msg.sender != this.address:
        if cooAddress != msg.sender:
            revert with 0, 'must be coo'
    else:
        mem[96] = calldata.size
        mem[128 len calldata.size] = call.data[0 len calldata.size]
        if mem[calldata.size + 108 len 20] != cooAddress:
            revert with 0, 'must be coo'
    require ext_code.size(erc20ContractAddress)
    call erc20ContractAddress.0x3250c6d1 with:
         gas gas_remaining wei
        args arg1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
}

function setOwner(address arg1) {
    require calldata.size - 4 >= 32
    if msg.sender != this.address:
        if recoveryAddress != msg.sender:
            revert with 0, 'must be recovery'
    else:
        mem[96] = calldata.size
        mem[128 len calldata.size] = call.data[0 len calldata.size]
        if mem[calldata.size + 108 len 20] != recoveryAddress:
            revert with 0, 'must be recovery'
    if not arg1:
        revert with 0, '0 address'
    if cooAddress == arg1:
        revert with 0, 'coo'
    if cfoAddress == arg1:
        revert with 0, 'cfo'
    if recoveryAddress == arg1:
        revert with 0, 'recovery'
    emit OwnershipTransferred(owner, arg1);
    owner = arg1
}

function encodeDomainSeperator(string arg1, string arg2) {
    require calldata.size - 4 >= 64
    require arg1 <= 4294967296
    require arg1 + 36 <= calldata.size
    require arg1.length <= 4294967296 and arg1 + arg1.length + 36 <= calldata.size
    require arg2 <= 4294967296
    require arg2 + 36 <= calldata.size
    require arg2.length <= 4294967296 and arg2 + arg2.length + 36 <= calldata.size
    if not chainid:
        revert with 0, 'chain ID must not be zero'
    return sha3(sha3(0x29454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e7472616374), sha3(arg1[all]), sha3(arg2[all]), chainid, this.address)
}

function setMinionManager(address arg1) {
    require calldata.size - 4 >= 32
    if msg.sender != this.address:
        if cooAddress != msg.sender:
            revert with 0, 'must be coo'
    else:
        mem[96] = calldata.size
        mem[128 len calldata.size] = call.data[0 len calldata.size]
        if mem[calldata.size + 108 len 20] != cooAddress:
            revert with 0, 'must be coo'
    require ext_code.size(arg1)
    staticcall arg1.isMinionManager() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        revert with 0, 'is iMinionManager'
    minionManagerAddress = arg1
    emit 0xc987e3d2: arg1
}

function makeFundedCall(address arg1) {
    require calldata.size - 4 >= 32
    if not stor11[msg.sender]:
        revert with 0, 'must be local'
    require ext_code.size(minionManagerAddress)
    staticcall minionManagerAddress.0xc2babfd7 with:
            gas gas_remaining wei
           args arg1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0]:
        if gasGrantAmount > 0:
            if eth.balance(arg1) < gasRefillLevel:
                call arg1 with:
                   value gasGrantAmount wei
                     gas 2300 * is_zero(value) wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
    return bool(ext_call.return_data[0])
}

function getActiveLocalContracts() {
    require activeLocalContracts.length <= test266151307()
    if activeLocalContracts.length:
        mem[128 len 32 * activeLocalContracts.length] = call.data[calldata.size len 32 * activeLocalContracts.length]
    idx = 0
    while idx < activeLocalContracts.length:
        mem[0] = 12
        require idx < activeLocalContracts.length
        mem[(32 * idx) + 128] = activeLocalContracts[idx]
        idx = idx + 1
        continue 
    mem[(32 * activeLocalContracts.length) + 192 len floor32(activeLocalContracts.length)] = mem[128 len floor32(activeLocalContracts.length)]
    return Array(len=activeLocalContracts.length, data=mem[128 len floor32(activeLocalContracts.length)], mem[(32 * activeLocalContracts.length) + floor32(activeLocalContracts.length) + 192 len (32 * activeLocalContracts.length) - floor32(activeLocalContracts.length)]), 
}

function encodeWorkerDomainSeperator(string arg1, string arg2) {
    require calldata.size - 4 >= 64
    require arg1 <= 4294967296
    require arg1 + 36 <= calldata.size
    require arg1.length <= 4294967296 and arg1 + arg1.length + 36 <= calldata.size
    require arg2 <= 4294967296
    require arg2 + 36 <= calldata.size
    require arg2.length <= 4294967296 and arg2 + arg2.length + 36 <= calldata.size
    if 137 == chainid:
        return sha3(sha3(0x29454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e7472616374), sha3(arg1[all]), sha3(arg2[all]), 1, this.address)
    if 1 == chainid:
        return sha3(sha3(0x29454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e7472616374), sha3(arg1[all]), sha3(arg2[all]), 1, this.address)
    if chainid != 80001:
        revert with 0, 'chain ID must not be zero'
    return sha3(sha3(0x29454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e7472616374), sha3(arg1[all]), sha3(arg2[all]), 5, this.address)
}

function withdrawGas(uint256 arg1) {
    require calldata.size - 4 >= 32
    if msg.sender != this.address:
        if cfoAddress != msg.sender:
            revert with 0, 'must be cfo'
        if msg.sender != this.address:
            call msg.sender with:
               value arg1 wei
                 gas 2300 * is_zero(value) wei
        else:
            mem[96] = calldata.size
            mem[128 len calldata.size] = call.data[0 len calldata.size]
            call mem[calldata.size + 108 len 20] with:
               value arg1 wei
                 gas 2300 * is_zero(value) wei
    else:
        mem[96] = calldata.size
        mem[128 len calldata.size] = call.data[0 len calldata.size]
        if mem[calldata.size + 108 len 20] != cfoAddress:
            revert with 0, 'must be cfo'
        if msg.sender != this.address:
            call msg.sender with:
               value arg1 wei
                 gas 2300 * is_zero(value) wei
        else:
            mem[ceil32(calldata.size) + 128] = calldata.size
            mem[ceil32(calldata.size) + 160 len calldata.size] = call.data[0 len calldata.size]
            call mem[calldata.size + ceil32(calldata.size) + 140 len 20] with:
               value arg1 wei
                 gas 2300 * is_zero(value) wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
}

function getTokenIdsFromPurchaseId(uint256 arg1, bytes32 arg2) {
    require calldata.size - 4 >= 64
    if not purchaseIdtoTokenIds[arg1][arg2].field_0:
        mem[(32 * purchaseIdtoTokenIds[arg1][arg2].field_0) + 128] = 32
        mem[(32 * purchaseIdtoTokenIds[arg1][arg2].field_0) + 160] = purchaseIdtoTokenIds[arg1][arg2].field_0
        mem[(32 * purchaseIdtoTokenIds[arg1][arg2].field_0) + 192 len floor32(purchaseIdtoTokenIds[arg1][arg2].field_0)] = mem[128 len floor32(purchaseIdtoTokenIds[arg1][arg2].field_0)]
        return memory
          from (32 * purchaseIdtoTokenIds[arg1][arg2].field_0) + 128
           len (96 * purchaseIdtoTokenIds[arg1][arg2].field_0) + 64
    mem[128] = purchaseIdtoTokenIds[arg1][arg2].field_0
    idx = 128
    s = 0
    while (32 * purchaseIdtoTokenIds[arg1][arg2].field_0) + 96 > idx:
        mem[idx + 32] = purchaseIdtoTokenIds[arg1][arg2][s].field_256
        idx = idx + 32
        s = s + 1
        continue 
    mem[(32 * purchaseIdtoTokenIds[arg1][arg2].field_0) + 192 len floor32(purchaseIdtoTokenIds[arg1][arg2].field_0)] = mem[128 len floor32(purchaseIdtoTokenIds[arg1][arg2].field_0)]
    return Array(len=purchaseIdtoTokenIds[arg1][arg2].field_0, data=mem[128 len floor32(purchaseIdtoTokenIds[arg1][arg2].field_0)], mem[(32 * purchaseIdtoTokenIds[arg1][arg2].field_0) + floor32(purchaseIdtoTokenIds[arg1][arg2].field_0) + 192 len (32 * purchaseIdtoTokenIds[arg1][arg2].field_0) - floor32(purchaseIdtoTokenIds[arg1][arg2].field_0)]), 
}

function transferGAMEtoCFO() {
    if msg.sender != this.address:
        if cfoAddress != msg.sender:
            revert with 0, 'must be cfo'
    else:
        mem[96] = calldata.size
        mem[128 len calldata.size] = call.data[0 len calldata.size]
        if mem[calldata.size + 108 len 20] != cfoAddress:
            revert with 0, 'must be cfo'
    require ext_code.size(erc20ContractAddress)
    staticcall erc20ContractAddress.balanceOf(address arg1) with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(erc20ContractAddress)
    call erc20ContractAddress.transferByContract(address arg1, address arg2, uint256 arg3) with:
         gas gas_remaining wei
        args this.address, cfoAddress, ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require ext_code.size(erc20ContractAddress)
    staticcall erc20ContractAddress.balanceOf(address arg1) with:
            gas gas_remaining wei
           args erc721ContractAddress
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(erc20ContractAddress)
    call erc20ContractAddress.transferByContract(address arg1, address arg2, uint256 arg3) with:
         gas gas_remaining wei
        args erc721ContractAddress, cfoAddress, ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
}

function getMinionGroup(bytes32 arg1) {
    require calldata.size - 4 >= 32
    mem[96] = 0x60d7c10000000000000000000000000000000000000000000000000000000000
    mem[100] = arg1
    require ext_code.size(minionManagerAddress)
    staticcall minionManagerAddress.0x60d7c100 with:
            gas gas_remaining wei
           args arg1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
    mem[64] = ceil32(return_data.size) + 96
    require return_data.size >= 32
    _4 = mem[96 len 4], Mask(224, 32, arg1) >> 32
    require mem[96 len 4], Mask(224, 32, arg1) >> 32 <= 4294967296
    require mem[96 len 4], Mask(224, 32, arg1) >> 32 + 32 <= return_data.size
    require mem[mem[96 len 4], Mask(224, 32, arg1) >> 32 + 96] <= 4294967296 and mem[96 len 4], Mask(224, 32, arg1) >> 32 + (32 * mem[mem[96 len 4], Mask(224, 32, arg1) >> 32 + 96]) + 32 <= return_data.size
    mem[ceil32(return_data.size) + 96] = mem[mem[96 len 4], Mask(224, 32, arg1) >> 32 + 96]
    _7 = mem[_4 + 96]
    mem[ceil32(return_data.size) + 128 len floor32(mem[_4 + 96])] = mem[_4 + 128 len floor32(mem[_4 + 96])]
    mem[(32 * _7) + ceil32(return_data.size) + 128] = 32
    mem[(32 * _7) + ceil32(return_data.size) + 160] = mem[ceil32(return_data.size) + 96]
    mem[(32 * _7) + ceil32(return_data.size) + 192 len floor32(mem[ceil32(return_data.size) + 96])] = mem[ceil32(return_data.size) + 128 len floor32(mem[ceil32(return_data.size) + 96])]
    return 32, mem[(32 * _7) + ceil32(return_data.size) + 160 len (32 * mem[ceil32(return_data.size) + 96]) + 32]
}

function assignWorker(address arg1, bool arg2) {
    require calldata.size - 4 >= 64
    if msg.sender != this.address:
        if cooAddress != msg.sender:
            revert with 0, 'must be coo'
        mem[128] = arg1
        mem[164] = arg1
        mem[196] = arg2
        require ext_code.size(minionManagerAddress)
        call minionManagerAddress.0xf2c5d2ed with:
             gas gas_remaining wei
            args address(arg1), arg2
        mem[160] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0]:
            if arg2:
                idx = 0
                while idx < 1:
                    if gasGrantAmount:
                        require idx < 1
                        call mem[(32 * idx) + 140 len 20] with:
                           value gasGrantAmount wei
                             gas 2300 * is_zero(value) wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    continue 
            emit 0xf045bb0b: address(arg1), arg2, minionManagerAddress
    else:
        mem[96] = calldata.size
        mem[128 len calldata.size] = call.data[0 len calldata.size]
        if mem[calldata.size + 108 len 20] != cooAddress:
            revert with 0, 'must be coo'
        mem[ceil32(calldata.size) + 160] = arg1
        mem[ceil32(calldata.size) + 196] = arg1
        mem[ceil32(calldata.size) + 228] = arg2
        require ext_code.size(minionManagerAddress)
        call minionManagerAddress.0xf2c5d2ed with:
             gas gas_remaining wei
            args address(arg1), arg2
        mem[ceil32(calldata.size) + 192] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0]:
            if arg2:
                idx = 0
                while idx < 1:
                    if gasGrantAmount:
                        require idx < 1
                        call mem[(32 * idx) + ceil32(calldata.size) + 172 len 20] with:
                           value gasGrantAmount wei
                             gas 2300 * is_zero(value) wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    continue 
            emit 0xf045bb0b: address(arg1), arg2, minionManagerAddress
}

function updateTokenJson(uint256 arg1, uint256 arg2, string arg3) {
    require calldata.size - 4 >= 96
    require arg3 <= 4294967296
    require arg3 + 36 <= calldata.size
    require arg3.length <= 4294967296 and arg3 + arg3.length + 36 <= calldata.size
    if msg.sender != this.address:
        require ext_code.size(minionManagerAddress)
        staticcall minionManagerAddress.0xc2babfd7 with:
                gas gas_remaining wei
               args msg.sender
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0]:
            if gasGrantAmount > 0:
                if eth.balance(msg.sender) < gasRefillLevel:
                    call msg.sender with:
                       value gasGrantAmount wei
                         gas 2300 * is_zero(value) wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
        require ext_code.size(gameContractAddress)
        staticcall gameContractAddress.isValidCaller(address arg1, bool arg2, uint256 arg3) with:
                gas gas_remaining wei
               args msg.sender, bool(ext_call.return_data[0]), arg1
    else:
        mem[96] = calldata.size
        mem[128 len calldata.size] = call.data[0 len calldata.size]
        require ext_code.size(minionManagerAddress)
        staticcall minionManagerAddress.0xc2babfd7 with:
                gas gas_remaining wei
               args mem[calldata.size + 108 len 20]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0]:
            if gasGrantAmount > 0:
                if eth.balance(mem[calldata.size + 96]) < gasRefillLevel:
                    call mem[calldata.size + 108 len 20] with:
                       value gasGrantAmount wei
                         gas 2300 * is_zero(value) wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
        require ext_code.size(gameContractAddress)
        staticcall gameContractAddress.isValidCaller(address arg1, bool arg2, uint256 arg3) with:
                gas gas_remaining wei
               args mem[calldata.size + 108 len 20], bool(ext_call.return_data[0]), arg1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        revert with 0, 'admin, operator, or worker'
    if uint64(arg2) != arg1:
        revert with 0, 'token for game'
    emit 0xff35a40c: Array(len=arg3.length, data=arg3[all]), arg1, arg2
}

function revokeOffChainPurchasedToken(uint256 arg1, uint256 arg2) {
    require calldata.size - 4 >= 64
    if msg.sender != this.address:
        require ext_code.size(minionManagerAddress)
        staticcall minionManagerAddress.0xc2babfd7 with:
                gas gas_remaining wei
               args msg.sender
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0]:
            if gasGrantAmount > 0:
                if eth.balance(msg.sender) < gasRefillLevel:
                    call msg.sender with:
                       value gasGrantAmount wei
                         gas 2300 * is_zero(value) wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
        require ext_code.size(gameContractAddress)
        staticcall gameContractAddress.isValidCaller(address arg1, bool arg2, uint256 arg3) with:
                gas gas_remaining wei
               args msg.sender, bool(ext_call.return_data[0]), arg1
    else:
        mem[96] = calldata.size
        mem[128 len calldata.size] = call.data[0 len calldata.size]
        require ext_code.size(minionManagerAddress)
        staticcall minionManagerAddress.0xc2babfd7 with:
                gas gas_remaining wei
               args mem[calldata.size + 108 len 20]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0]:
            if gasGrantAmount > 0:
                if eth.balance(mem[calldata.size + 96]) < gasRefillLevel:
                    call mem[calldata.size + 108 len 20] with:
                       value gasGrantAmount wei
                         gas 2300 * is_zero(value) wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
        require ext_code.size(gameContractAddress)
        staticcall gameContractAddress.isValidCaller(address arg1, bool arg2, uint256 arg3) with:
                gas gas_remaining wei
               args mem[calldata.size + 108 len 20], bool(ext_call.return_data[0]), arg1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        revert with 0, 'admin, operator, or worker'
    if uint64(arg2) != arg1:
        revert with 0, 'token for game'
    require ext_code.size(erc721ContractAddress)
    call erc721ContractAddress.revokeToken(uint256 arg1, uint256 arg2, bytes32 arg3) with:
         gas gas_remaining wei
        args arg1, arg2, 0
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        return 0
    return arg2
}

function executeMetaTransaction(address arg1, bytes arg2, bytes32 arg3, bytes32 arg4, uint8 arg5) payable {
    require calldata.size - 4 >= 160
    require arg2 <= 4294967296
    require arg2 + 36 <= calldata.size
    require arg2.length <= 4294967296 and arg2 + arg2.length + 36 <= calldata.size
    mem[128 len arg2.length] = arg2[all]
    mem[arg2.length + 128] = 0
    mem[ceil32(arg2.length) + 128] = 0
    mem[ceil32(arg2.length) + 160] = 0
    if not arg1:
        revert with 0, 32, 33, 0x775369676e657220616e64207369676e617475726520646f206e6f74206d617463, mem[ceil32(arg2.length) + 421 len 31]
    signer = erecover(sha3(0, domainSeperator, sha3(sha3(0xfe4d6574615472616e73616374696f6e2875696e74323536206e6f6e63652c616464726573732066726f6d2c62797465732066756e6374696f6e5369676e6174757265), nonce[address(arg1)], address(arg1), sha3(arg2[all]))), arg5 << 248, arg3, arg4) 
    if not erecover.result:
        revert with ext_call.return_data[0 len return_data.size]
    if arg1 != address(signer):
        revert with 0, 
                    32,
                    33,
                    0x775369676e657220616e64207369676e617475726520646f206e6f74206d617463,
                    Mask(216, 0, arg4),
                    mem[ceil32(arg2.length) + 866 len 4]
    if nonce[address(arg1)] + 1 < nonce[address(arg1)]:
        revert with 0, 'SafeMath: addition overflow'
    nonce[address(arg1)]++
    mem[ceil32(arg2.length) + 770] = msg.sender
    mem[ceil32(arg2.length) + 802] = 96
    mem[ceil32(arg2.length) + 834] = arg2.length
    mem[ceil32(arg2.length) + 866 len ceil32(arg2.length)] = arg2[all], mem[arg2.length + 128 len ceil32(arg2.length) - arg2.length]
    emit MetaTransactionExecuted(address(arg1), msg.sender, Array(len=arg2.length, data=arg2[all]));
    mem[ceil32(arg2.length) + 770 len floor32(arg2.length)] = call.data[arg2 + 36 len floor32(arg2.length)]
    mem[ceil32(arg2.length) + floor32(arg2.length) + -(arg2.length % 32) + 802 len arg2.length % 32] = mem[-(arg2.length % 32) + floor32(arg2.length) + 160 len arg2.length % 32]
    mem[arg2.length + ceil32(arg2.length) + 770] = address(arg1)
    mem[arg2.length + ceil32(arg2.length) + 790 len floor32(arg2.length + 20)] = call.data[arg2 + 36 len floor32(arg2.length)], mem[ceil32(arg2.length) + floor32(arg2.length) + 770 len floor32(arg2.length + 20) - floor32(arg2.length)]
    mem[arg2.length + ceil32(arg2.length) + floor32(arg2.length + 20) + -(arg2.length + 20 % 32) + 822 len arg2.length + 20 % 32] = Mask(8 * (arg2.length + 20 % 32) + -floor32(arg2.length + 20) + arg2.length - 12, 0, arg1), Mask(8 * floor32(arg2.length + 20), -(8 * floor32(arg2.length + 20)) + 256, call.data[arg2 + 36 len floor32(arg2.length)], mem[ceil32(arg2.length) + floor32(arg2.length) + 770 len floor32(arg2.length + 20) - floor32(arg2.length)]) << (8 * floor32(arg2.length + 20)) - 256, mem[ceil32(arg2.length) + arg2.length + floor32(arg2.length + 20) + 790 len (2 * floor32(arg2.length + 20)) + -arg2.length + 12]
    call this.address.mem[arg2.length + ceil32(arg2.length) + 790 len 4] with:
         gas gas_remaining wei
        args mem[arg2.length + ceil32(arg2.length) + 794 len arg2.length + 16]
    if not ext_call.success:
        revert with 0, 'Function call not successful'
    if not return_data.size:
        return Array(len=arg2.length, data=arg2[all])
    return Array(len=return_data.size, data=ext_call.return_data[0 len return_data.size])
}

function addMinionGroup(bytes32 arg1, address[] arg2) {
    require calldata.size - 4 >= 64
    require arg2 <= 4294967296
    require arg2 + 36 <= calldata.size
    require arg2.length <= 4294967296 and arg2 + (32 * arg2.length) + 36 <= calldata.size
    if msg.sender != this.address:
        require ext_code.size(minionManagerAddress)
        staticcall minionManagerAddress.0xaa156645 with:
                gas gas_remaining wei
               args msg.sender
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            revert with 0, 'is worker'
        mem[164] = arg2.length
        mem[196 len 32 * arg2.length] = call.data[arg2 + 36 len 32 * arg2.length]
        mem[(32 * arg2.length) + 196] = 0
        require ext_code.size(minionManagerAddress)
        call minionManagerAddress.0xc6438841 with:
             gas gas_remaining wei
            args arg1, Array(len=arg2.length, data=call.data[arg2 + 36 len floor32(arg2.length)])
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        mem[128] = arg2.length
        mem[(32 * arg2.length) + 160] = 0
        emit 0x3401af11: Array(len=arg2.length, data=call.data[arg2 + 36 len floor32(arg2.length)]), minionManagerAddress, arg1
        mem[128 len 32 * arg2.length] = call.data[arg2 + 36 len 32 * arg2.length]
        mem[(32 * arg2.length) + 128] = 0
        idx = 0
        while idx < arg2.length:
            if gasGrantAmount:
                require idx < arg2.length
                call mem[(32 * idx) + 140 len 20] with:
                   value gasGrantAmount wei
                     gas 2300 * is_zero(value) wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
            idx = idx + 1
            continue 
    else:
        mem[96] = calldata.size
        mem[128 len calldata.size] = call.data[0 len calldata.size]
        require ext_code.size(minionManagerAddress)
        staticcall minionManagerAddress.0xaa156645 with:
                gas gas_remaining wei
               args mem[calldata.size + 108 len 20]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            revert with 0, 'is worker'
        mem[ceil32(calldata.size) + 196] = arg2.length
        mem[ceil32(calldata.size) + 228 len 32 * arg2.length] = call.data[arg2 + 36 len 32 * arg2.length]
        mem[ceil32(calldata.size) + (32 * arg2.length) + 228] = 0
        require ext_code.size(minionManagerAddress)
        call minionManagerAddress.0xc6438841 with:
             gas gas_remaining wei
            args arg1, Array(len=arg2.length, data=call.data[arg2 + 36 len floor32(arg2.length)])
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        mem[ceil32(calldata.size) + 160] = arg2.length
        mem[(32 * arg2.length) + ceil32(calldata.size) + 192] = 0
        emit 0x3401af11: Array(len=arg2.length, data=call.data[arg2 + 36 len floor32(arg2.length)]), minionManagerAddress, arg1
        mem[ceil32(calldata.size) + 160 len 32 * arg2.length] = call.data[arg2 + 36 len 32 * arg2.length]
        mem[ceil32(calldata.size) + (32 * arg2.length) + 160] = 0
        idx = 0
        while idx < arg2.length:
            if gasGrantAmount:
                require idx < arg2.length
                call mem[(32 * idx) + ceil32(calldata.size) + 172 len 20] with:
                   value gasGrantAmount wei
                     gas 2300 * is_zero(value) wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
            idx = idx + 1
            continue 
}

function removeMinionGroup(bytes32 arg1) {
    require calldata.size - 4 >= 32
    if msg.sender != this.address:
        require ext_code.size(minionManagerAddress)
        staticcall minionManagerAddress.0xaa156645 with:
                gas gas_remaining wei
               args msg.sender
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            revert with 0, 'is worker'
        mem[96] = 0x60d7c10000000000000000000000000000000000000000000000000000000000
        mem[100] = arg1
        require ext_code.size(minionManagerAddress)
        staticcall minionManagerAddress.0x60d7c100 with:
                gas gas_remaining wei
               args arg1
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = ceil32(return_data.size) + 96
        require return_data.size >= 32
        _20 = mem[96 len 4], Mask(224, 32, arg1) >> 32
        require mem[96 len 4], Mask(224, 32, arg1) >> 32 <= 4294967296
        require mem[96 len 4], Mask(224, 32, arg1) >> 32 + 32 <= return_data.size
        require mem[mem[96 len 4], Mask(224, 32, arg1) >> 32 + 96] <= 4294967296 and mem[96 len 4], Mask(224, 32, arg1) >> 32 + (32 * mem[mem[96 len 4], Mask(224, 32, arg1) >> 32 + 96]) + 32 <= return_data.size
        mem[ceil32(return_data.size) + 96] = mem[mem[96 len 4], Mask(224, 32, arg1) >> 32 + 96]
        _26 = mem[_20 + 96]
        mem[ceil32(return_data.size) + 128 len floor32(mem[_20 + 96])] = mem[_20 + 128 len floor32(mem[_20 + 96])]
        require ext_code.size(minionManagerAddress)
        call minionManagerAddress.0xf9163622 with:
             gas gas_remaining wei
            args arg1
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        mem[(32 * _26) + ceil32(return_data.size) + 128] = 32
        mem[(32 * _26) + ceil32(return_data.size) + 160] = mem[ceil32(return_data.size) + 96]
        mem[(32 * _26) + ceil32(return_data.size) + 192 len floor32(mem[ceil32(return_data.size) + 96])] = mem[ceil32(return_data.size) + 128 len floor32(mem[ceil32(return_data.size) + 96])]
        emit 0xc1ba5007: 32, mem[(32 * _26) + ceil32(return_data.size) + 160 len (32 * mem[ceil32(return_data.size) + 96]) + 32], minionManagerAddress, arg1
    else:
        mem[96] = calldata.size
        mem[128 len calldata.size] = call.data[0 len calldata.size]
        mem[calldata.size + 128] = 0
        require ext_code.size(minionManagerAddress)
        staticcall minionManagerAddress.0xaa156645 with:
                gas gas_remaining wei
               args mem[calldata.size + 108 len 20]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            revert with 0, 'is worker'
        mem[ceil32(calldata.size) + 128] = 0x60d7c10000000000000000000000000000000000000000000000000000000000
        mem[ceil32(calldata.size) + 132] = arg1
        require ext_code.size(minionManagerAddress)
        staticcall minionManagerAddress.0x60d7c100 with:
                gas gas_remaining wei
               args arg1
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        mem[ceil32(calldata.size) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = ceil32(calldata.size) + ceil32(return_data.size) + 128
        require return_data.size >= 32
        _23 = mem[ceil32(calldata.size) + 128 len 4], Mask(224, 32, arg1) >> 32
        require mem[ceil32(calldata.size) + 128 len 4], Mask(224, 32, arg1) >> 32 <= 4294967296
        require mem[ceil32(calldata.size) + 128 len 4], Mask(224, 32, arg1) >> 32 + 32 <= return_data.size
        require mem[ceil32(calldata.size) + mem[ceil32(calldata.size) + 128 len 4], Mask(224, 32, arg1) >> 32 + 128] <= 4294967296 and mem[ceil32(calldata.size) + 128 len 4], Mask(224, 32, arg1) >> 32 + (32 * mem[ceil32(calldata.size) + mem[ceil32(calldata.size) + 128 len 4], Mask(224, 32, arg1) >> 32 + 128]) + 32 <= return_data.size
        mem[ceil32(calldata.size) + ceil32(return_data.size) + 128] = mem[ceil32(calldata.size) + mem[ceil32(calldata.size) + 128 len 4], Mask(224, 32, arg1) >> 32 + 128]
        _28 = mem[ceil32(calldata.size) + _23 + 128]
        mem[ceil32(calldata.size) + ceil32(return_data.size) + 160 len floor32(mem[ceil32(calldata.size) + _23 + 128])] = mem[ceil32(calldata.size) + _23 + 160 len floor32(mem[ceil32(calldata.size) + _23 + 128])]
        require ext_code.size(minionManagerAddress)
        call minionManagerAddress.0xf9163622 with:
             gas gas_remaining wei
            args arg1
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        mem[(32 * _28) + ceil32(calldata.size) + ceil32(return_data.size) + 160] = 32
        mem[(32 * _28) + ceil32(calldata.size) + ceil32(return_data.size) + 192] = mem[ceil32(calldata.size) + ceil32(return_data.size) + 128]
        mem[(32 * _28) + ceil32(calldata.size) + ceil32(return_data.size) + 224 len floor32(mem[ceil32(calldata.size) + ceil32(return_data.size) + 128])] = mem[ceil32(calldata.size) + ceil32(return_data.size) + 160 len floor32(mem[ceil32(calldata.size) + ceil32(return_data.size) + 128])]
        emit 0xc1ba5007: 32, mem[(32 * _28) + ceil32(calldata.size) + ceil32(return_data.size) + 192 len (32 * mem[ceil32(calldata.size) + ceil32(return_data.size) + 128]) + 32], minionManagerAddress, arg1
}

function revokeTokensByPurchaseId(uint256 arg1, bytes32 arg2) {
    require calldata.size - 4 >= 64
    if msg.sender != this.address:
        require ext_code.size(minionManagerAddress)
        staticcall minionManagerAddress.0xc2babfd7 with:
                gas gas_remaining wei
               args msg.sender
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0]:
            if gasGrantAmount > 0:
                if eth.balance(msg.sender) < gasRefillLevel:
                    call msg.sender with:
                       value gasGrantAmount wei
                         gas 2300 * is_zero(value) wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
        mem[100] = msg.sender
        mem[132] = bool(ext_call.return_data[0])
        mem[164] = arg1
        require ext_code.size(gameContractAddress)
        staticcall gameContractAddress.isValidCaller(address arg1, bool arg2, uint256 arg3) with:
                gas gas_remaining wei
               args msg.sender, bool(ext_call.return_data[0]), arg1
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            revert with 0, 'admin, operator, or worker'
        if not purchaseIdtoTokenIds[arg1][arg2].field_0:
            revert with 0, 'revok 1+ tokens'
        require purchaseIdtoTokenIds[arg1][arg2].field_0 <= test266151307()
        if purchaseIdtoTokenIds[arg1][arg2].field_0:
            mem[128 len 32 * purchaseIdtoTokenIds[arg1][arg2].field_0] = call.data[calldata.size len 32 * purchaseIdtoTokenIds[arg1][arg2].field_0]
        idx = 0
        s = 0
        while idx < purchaseIdtoTokenIds[arg1][arg2].field_0:
            mem[0] = sha3(arg2, sha3(arg1, 19))
            mem[(32 * purchaseIdtoTokenIds[arg1][arg2].field_0) + 132] = arg1
            mem[(32 * purchaseIdtoTokenIds[arg1][arg2].field_0) + 164] = purchaseIdtoTokenIds[arg1][arg2][idx].field_0
            mem[(32 * purchaseIdtoTokenIds[arg1][arg2].field_0) + 196] = arg2
            require ext_code.size(erc721ContractAddress)
            call erc721ContractAddress.revokeToken(uint256 arg1, uint256 arg2, bytes32 arg3) with:
                 gas gas_remaining wei
                args arg1, purchaseIdtoTokenIds[arg1][arg2][idx].field_0, arg2
            mem[(32 * purchaseIdtoTokenIds[arg1][arg2].field_0) + 128] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                idx = idx + 1
                s = s
                continue 
            require idx < purchaseIdtoTokenIds[arg1][arg2].field_0
            mem[(32 * idx) + 128] = purchaseIdtoTokenIds[arg1][arg2][idx].field_0
            idx = idx + 1
            s = 1
            continue 
        if not s:
            revert with 0, 'revoked at least one'
        mem[(32 * purchaseIdtoTokenIds[arg1][arg2].field_0) + 192 len floor32(purchaseIdtoTokenIds[arg1][arg2].field_0)] = mem[128 len floor32(purchaseIdtoTokenIds[arg1][arg2].field_0)]
        return Array(len=purchaseIdtoTokenIds[arg1][arg2].field_0, data=mem[128 len floor32(purchaseIdtoTokenIds[arg1][arg2].field_0)], mem[(32 * purchaseIdtoTokenIds[arg1][arg2].field_0) + floor32(purchaseIdtoTokenIds[arg1][arg2].field_0) + 192 len (32 * purchaseIdtoTokenIds[arg1][arg2].field_0) - floor32(purchaseIdtoTokenIds[arg1][arg2].field_0)]), 
    mem[96] = calldata.size
    mem[128 len calldata.size] = call.data[0 len calldata.size]
    require ext_code.size(minionManagerAddress)
    staticcall minionManagerAddress.0xc2babfd7 with:
            gas gas_remaining wei
           args mem[calldata.size + 108 len 20]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0]:
        if gasGrantAmount > 0:
            if eth.balance(mem[calldata.size + 96]) < gasRefillLevel:
                call mem[calldata.size + 108 len 20] with:
                   value gasGrantAmount wei
                     gas 2300 * is_zero(value) wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
    mem[ceil32(calldata.size) + 132] = mem[calldata.size + 108 len 20]
    mem[ceil32(calldata.size) + 164] = bool(ext_call.return_data[0])
    mem[ceil32(calldata.size) + 196] = arg1
    require ext_code.size(gameContractAddress)
    staticcall gameContractAddress.isValidCaller(address arg1, bool arg2, uint256 arg3) with:
            gas gas_remaining wei
           args mem[calldata.size + 108 len 20], bool(ext_call.return_data[0]), arg1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        revert with 0, 'admin, operator, or worker'
    if not purchaseIdtoTokenIds[arg1][arg2].field_0:
        revert with 0, 'revok 1+ tokens'
    require purchaseIdtoTokenIds[arg1][arg2].field_0 <= test266151307()
    if purchaseIdtoTokenIds[arg1][arg2].field_0:
        mem[ceil32(calldata.size) + 160 len 32 * purchaseIdtoTokenIds[arg1][arg2].field_0] = call.data[calldata.size len 32 * purchaseIdtoTokenIds[arg1][arg2].field_0]
    idx = 0
    s = 0
    while idx < purchaseIdtoTokenIds[arg1][arg2].field_0:
        mem[0] = sha3(arg2, sha3(arg1, 19))
        mem[ceil32(calldata.size) + (32 * purchaseIdtoTokenIds[arg1][arg2].field_0) + 164] = arg1
        mem[ceil32(calldata.size) + (32 * purchaseIdtoTokenIds[arg1][arg2].field_0) + 196] = purchaseIdtoTokenIds[arg1][arg2][idx].field_0
        mem[ceil32(calldata.size) + (32 * purchaseIdtoTokenIds[arg1][arg2].field_0) + 228] = arg2
        require ext_code.size(erc721ContractAddress)
        call erc721ContractAddress.revokeToken(uint256 arg1, uint256 arg2, bytes32 arg3) with:
             gas gas_remaining wei
            args arg1, purchaseIdtoTokenIds[arg1][arg2][idx].field_0, arg2
        mem[ceil32(calldata.size) + (32 * purchaseIdtoTokenIds[arg1][arg2].field_0) + 160] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            idx = idx + 1
            s = s
            continue 
        require idx < purchaseIdtoTokenIds[arg1][arg2].field_0
        mem[(32 * idx) + ceil32(calldata.size) + 160] = purchaseIdtoTokenIds[arg1][arg2][idx].field_0
        idx = idx + 1
        s = 1
        continue 
    if not s:
        revert with 0, 'revoked at least one'
    mem[ceil32(calldata.size) + (32 * purchaseIdtoTokenIds[arg1][arg2].field_0) + 224 len floor32(purchaseIdtoTokenIds[arg1][arg2].field_0)] = mem[ceil32(calldata.size) + 160 len floor32(purchaseIdtoTokenIds[arg1][arg2].field_0)]
    return Array(len=purchaseIdtoTokenIds[arg1][arg2].field_0, data=mem[ceil32(calldata.size) + 160 len floor32(purchaseIdtoTokenIds[arg1][arg2].field_0)], mem[ceil32(calldata.size) + (32 * purchaseIdtoTokenIds[arg1][arg2].field_0) + floor32(purchaseIdtoTokenIds[arg1][arg2].field_0) + 224 len (32 * purchaseIdtoTokenIds[arg1][arg2].field_0) - floor32(purchaseIdtoTokenIds[arg1][arg2].field_0)]), 
}

function updateLocalContract(address arg1, bool arg2) {
    require calldata.size - 4 >= 64
    if msg.sender != this.address:
        if owner != msg.sender:
            revert with 0, 'must be owner'
        if this.address == arg1:
            revert with 0, 'this'
        if erc721ContractAddress == arg1:
            revert with 0, 'erc721'
        if erc20ContractAddress == arg1:
            revert with 0, 'erc20'
        if gameContractAddress == arg1:
            revert with 0, 'amecontract'
        if not arg1:
            revert with 0, 'address(0)'
        if arg2 == bool(stor11[address(arg1)]):
            revert with 0, 'already local'
        require ext_code.size(arg1)
        staticcall arg1.0x765d6cce with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            revert with 0, 'isLocalContract()'
        stor11[address(arg1)] = uint8(arg2)
        if arg2:
            idx = 0
            while idx < activeLocalContracts.length:
                require ext_code.size(activeLocalContracts[idx])
                call activeLocalContracts[idx].0x5958b301 with:
                     gas gas_remaining wei
                    args address(arg1), arg2
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require idx < activeLocalContracts.length
                mem[0] = 12
                mem[96] = 0x5958b30100000000000000000000000000000000000000000000000000000000
                mem[100] = activeLocalContracts[idx]
                mem[132] = arg2
                require ext_code.size(arg1)
                call arg1.0x5958b301 with:
                     gas gas_remaining wei
                    args activeLocalContracts[idx], arg2
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                idx = idx + 1
                continue 
            activeLocalContracts.length++
            activeLocalContracts[activeLocalContracts.length] = arg1
        else:
            idx = 0
            while idx < activeLocalContracts.length - 1:
                require idx < activeLocalContracts.length
                if activeLocalContracts[idx] != arg1:
                    require idx < activeLocalContracts.length
                else:
                    require activeLocalContracts.length - 1 < activeLocalContracts.length
                    require idx < activeLocalContracts.length
                    activeLocalContracts[idx] = activeLocalContracts[activeLocalContracts.length]
                require ext_code.size(activeLocalContracts[idx])
                call activeLocalContracts[idx].0x5958b301 with:
                     gas gas_remaining wei
                    args address(arg1), arg2
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require idx < activeLocalContracts.length
                mem[0] = 12
                mem[96] = 0x5958b30100000000000000000000000000000000000000000000000000000000
                mem[100] = activeLocalContracts[idx]
                mem[132] = arg2
                require ext_code.size(arg1)
                call arg1.0x5958b301 with:
                     gas gas_remaining wei
                    args activeLocalContracts[idx], arg2
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                idx = idx + 1
                continue 
            require activeLocalContracts.length
            activeLocalContracts[activeLocalContracts.length] = 0
            activeLocalContracts.length--
    else:
        mem[96] = calldata.size
        mem[128 len calldata.size] = call.data[0 len calldata.size]
        if mem[calldata.size + 108 len 20] != owner:
            revert with 0, 'must be owner'
        if this.address == arg1:
            revert with 0, 'this'
        if erc721ContractAddress == arg1:
            revert with 0, 'erc721'
        if erc20ContractAddress == arg1:
            revert with 0, 'erc20'
        if gameContractAddress == arg1:
            revert with 0, 'amecontract'
        if not arg1:
            revert with 0, 'address(0)'
        if arg2 == bool(stor11[address(arg1)]):
            revert with 0, 'already local'
        require ext_code.size(arg1)
        staticcall arg1.0x765d6cce with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            revert with 0, 'isLocalContract()'
        stor11[address(arg1)] = uint8(arg2)
        if arg2:
            idx = 0
            while idx < activeLocalContracts.length:
                require ext_code.size(activeLocalContracts[idx])
                call activeLocalContracts[idx].0x5958b301 with:
                     gas gas_remaining wei
                    args address(arg1), arg2
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require idx < activeLocalContracts.length
                mem[0] = 12
                mem[ceil32(calldata.size) + 128] = 0x5958b30100000000000000000000000000000000000000000000000000000000
                mem[ceil32(calldata.size) + 132] = activeLocalContracts[idx]
                mem[ceil32(calldata.size) + 164] = arg2
                require ext_code.size(arg1)
                call arg1.0x5958b301 with:
                     gas gas_remaining wei
                    args activeLocalContracts[idx], arg2
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                idx = idx + 1
                continue 
            activeLocalContracts.length++
            activeLocalContracts[activeLocalContracts.length] = arg1
        else:
            idx = 0
            while idx < activeLocalContracts.length - 1:
                require idx < activeLocalContracts.length
                if activeLocalContracts[idx] != arg1:
                    require idx < activeLocalContracts.length
                else:
                    require activeLocalContracts.length - 1 < activeLocalContracts.length
                    require idx < activeLocalContracts.length
                    activeLocalContracts[idx] = activeLocalContracts[activeLocalContracts.length]
                require ext_code.size(activeLocalContracts[idx])
                call activeLocalContracts[idx].0x5958b301 with:
                     gas gas_remaining wei
                    args address(arg1), arg2
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require idx < activeLocalContracts.length
                mem[0] = 12
                mem[ceil32(calldata.size) + 128] = 0x5958b30100000000000000000000000000000000000000000000000000000000
                mem[ceil32(calldata.size) + 132] = activeLocalContracts[idx]
                mem[ceil32(calldata.size) + 164] = arg2
                require ext_code.size(arg1)
                call arg1.0x5958b301 with:
                     gas gas_remaining wei
                    args activeLocalContracts[idx], arg2
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                idx = idx + 1
                continue 
            require activeLocalContracts.length
            activeLocalContracts[activeLocalContracts.length] = 0
            activeLocalContracts.length--
}

function linkContracts(address arg1, address arg2, address arg3) {
    require calldata.size - 4 >= 96
    if msg.sender != this.address:
        if owner != msg.sender:
            revert with 0, 'must be owner'
        if gameContractAddress:
            revert with 0, 'game == address(0)'
        if erc20ContractAddress:
            revert with 0, 'erc20 == address(0)'
        if erc721ContractAddress:
            revert with 0, 'erc721 == address(0)'
        if this.address == arg1:
            revert with 0, 'this'
        if erc721ContractAddress == arg1:
            revert with 0, 'erc721'
        if erc20ContractAddress == arg1:
            revert with 0, 'erc20'
        if gameContractAddress == arg1:
            revert with 0, 'amecontract'
        if not arg1:
            revert with 0, 'address(0)'
        if 1 == bool(stor11[address(arg1)]):
            revert with 0, 'already local'
        require ext_code.size(arg1)
        staticcall arg1.0x765d6cce with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            revert with 0, 'isLocalContract()'
        stor11[address(arg1)] = 1
        idx = 0
        while idx < activeLocalContracts.length:
            require ext_code.size(activeLocalContracts[idx])
            call activeLocalContracts[idx].0x5958b301 with:
                 gas gas_remaining wei
                args address(arg1), 1
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require idx < activeLocalContracts.length
            mem[0] = 12
            mem[96] = 0x5958b30100000000000000000000000000000000000000000000000000000000
            mem[100] = activeLocalContracts[idx]
            mem[132] = 1
            require ext_code.size(arg1)
            call arg1.0x5958b301 with:
                 gas gas_remaining wei
                args activeLocalContracts[idx], 1
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            idx = idx + 1
            continue 
        activeLocalContracts.length++
        activeLocalContracts[activeLocalContracts.length] = arg1
        if this.address == arg3:
            revert with 0, 'this'
        if erc721ContractAddress == arg3:
            revert with 0, 'erc721'
        if erc20ContractAddress == arg3:
            revert with 0, 'erc20'
        if gameContractAddress == arg3:
            revert with 0, 'amecontract'
        if not arg3:
            revert with 0, 'address(0)'
        if 1 == bool(stor11[address(arg3)]):
            revert with 0, 'already local'
        require ext_code.size(arg3)
        staticcall arg3.0x765d6cce with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            revert with 0, 'isLocalContract()'
        stor11[address(arg3)] = 1
        idx = 0
        while idx < activeLocalContracts.length:
            require ext_code.size(activeLocalContracts[idx])
            call activeLocalContracts[idx].0x5958b301 with:
                 gas gas_remaining wei
                args address(arg3), 1
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require idx < activeLocalContracts.length
            mem[0] = 12
            mem[96] = 0x5958b30100000000000000000000000000000000000000000000000000000000
            mem[100] = activeLocalContracts[idx]
            mem[132] = 1
            require ext_code.size(arg3)
            call arg3.0x5958b301 with:
                 gas gas_remaining wei
                args activeLocalContracts[idx], 1
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            idx = idx + 1
            continue 
        activeLocalContracts.length++
        activeLocalContracts[activeLocalContracts.length] = arg3
        if this.address == arg2:
            revert with 0, 'this'
        if erc721ContractAddress == arg2:
            revert with 0, 'erc721'
        if erc20ContractAddress == arg2:
            revert with 0, 'erc20'
        if gameContractAddress == arg2:
            revert with 0, 'amecontract'
        if not arg2:
            revert with 0, 'address(0)'
        if 1 == bool(stor11[address(arg2)]):
            revert with 0, 'already local'
        require ext_code.size(arg2)
        staticcall arg2.0x765d6cce with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            revert with 0, 'isLocalContract()'
        stor11[address(arg2)] = 1
        idx = 0
        while idx < activeLocalContracts.length:
            require ext_code.size(activeLocalContracts[idx])
            call activeLocalContracts[idx].0x5958b301 with:
                 gas gas_remaining wei
                args address(arg2), 1
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require idx < activeLocalContracts.length
            mem[0] = 12
            mem[96] = 0x5958b30100000000000000000000000000000000000000000000000000000000
            mem[100] = activeLocalContracts[idx]
            mem[132] = 1
            require ext_code.size(arg2)
            call arg2.0x5958b301 with:
                 gas gas_remaining wei
                args activeLocalContracts[idx], 1
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            idx = idx + 1
            continue 
    else:
        mem[96] = calldata.size
        mem[128 len calldata.size] = call.data[0 len calldata.size]
        if mem[calldata.size + 108 len 20] != owner:
            revert with 0, 'must be owner'
        if gameContractAddress:
            revert with 0, 'game == address(0)'
        if erc20ContractAddress:
            revert with 0, 'erc20 == address(0)'
        if erc721ContractAddress:
            revert with 0, 'erc721 == address(0)'
        if this.address == arg1:
            revert with 0, 'this'
        if erc721ContractAddress == arg1:
            revert with 0, 'erc721'
        if erc20ContractAddress == arg1:
            revert with 0, 'erc20'
        if gameContractAddress == arg1:
            revert with 0, 'amecontract'
        if not arg1:
            revert with 0, 'address(0)'
        if 1 == bool(stor11[address(arg1)]):
            revert with 0, 'already local'
        require ext_code.size(arg1)
        staticcall arg1.0x765d6cce with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            revert with 0, 'isLocalContract()'
        stor11[address(arg1)] = 1
        idx = 0
        while idx < activeLocalContracts.length:
            require ext_code.size(activeLocalContracts[idx])
            call activeLocalContracts[idx].0x5958b301 with:
                 gas gas_remaining wei
                args address(arg1), 1
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require idx < activeLocalContracts.length
            mem[0] = 12
            mem[ceil32(calldata.size) + 128] = 0x5958b30100000000000000000000000000000000000000000000000000000000
            mem[ceil32(calldata.size) + 132] = activeLocalContracts[idx]
            mem[ceil32(calldata.size) + 164] = 1
            require ext_code.size(arg1)
            call arg1.0x5958b301 with:
                 gas gas_remaining wei
                args activeLocalContracts[idx], 1
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            idx = idx + 1
            continue 
        activeLocalContracts.length++
        activeLocalContracts[activeLocalContracts.length] = arg1
        if this.address == arg3:
            revert with 0, 'this'
        if erc721ContractAddress == arg3:
            revert with 0, 'erc721'
        if erc20ContractAddress == arg3:
            revert with 0, 'erc20'
        if gameContractAddress == arg3:
            revert with 0, 'amecontract'
        if not arg3:
            revert with 0, 'address(0)'
        if 1 == bool(stor11[address(arg3)]):
            revert with 0, 'already local'
        require ext_code.size(arg3)
        staticcall arg3.0x765d6cce with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            revert with 0, 'isLocalContract()'
        stor11[address(arg3)] = 1
        idx = 0
        while idx < activeLocalContracts.length:
            require ext_code.size(activeLocalContracts[idx])
            call activeLocalContracts[idx].0x5958b301 with:
                 gas gas_remaining wei
                args address(arg3), 1
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require idx < activeLocalContracts.length
            mem[0] = 12
            mem[ceil32(calldata.size) + 128] = 0x5958b30100000000000000000000000000000000000000000000000000000000
            mem[ceil32(calldata.size) + 132] = activeLocalContracts[idx]
            mem[ceil32(calldata.size) + 164] = 1
            require ext_code.size(arg3)
            call arg3.0x5958b301 with:
                 gas gas_remaining wei
                args activeLocalContracts[idx], 1
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            idx = idx + 1
            continue 
        activeLocalContracts.length++
        activeLocalContracts[activeLocalContracts.length] = arg3
        if this.address == arg2:
            revert with 0, 'this'
        if erc721ContractAddress == arg2:
            revert with 0, 'erc721'
        if erc20ContractAddress == arg2:
            revert with 0, 'erc20'
        if gameContractAddress == arg2:
            revert with 0, 'amecontract'
        if not arg2:
            revert with 0, 'address(0)'
        if 1 == bool(stor11[address(arg2)]):
            revert with 0, 'already local'
        require ext_code.size(arg2)
        staticcall arg2.0x765d6cce with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            revert with 0, 'isLocalContract()'
        stor11[address(arg2)] = 1
        idx = 0
        while idx < activeLocalContracts.length:
            require ext_code.size(activeLocalContracts[idx])
            call activeLocalContracts[idx].0x5958b301 with:
                 gas gas_remaining wei
                args address(arg2), 1
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require idx < activeLocalContracts.length
            mem[0] = 12
            mem[ceil32(calldata.size) + 128] = 0x5958b30100000000000000000000000000000000000000000000000000000000
            mem[ceil32(calldata.size) + 132] = activeLocalContracts[idx]
            mem[ceil32(calldata.size) + 164] = 1
            require ext_code.size(arg2)
            call arg2.0x5958b301 with:
                 gas gas_remaining wei
                args activeLocalContracts[idx], 1
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            idx = idx + 1
            continue 
    activeLocalContracts.length++
    activeLocalContracts[activeLocalContracts.length] = arg2
    gameContractAddress = arg1
    erc20ContractAddress = arg2
    erc721ContractAddress = arg3
    require ext_code.size(arg1)
    call arg1.linkContracts(address arg1, address arg2) with:
         gas gas_remaining wei
        args address(arg3), arg2
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require ext_code.size(erc20ContractAddress)
    call erc20ContractAddress.linkContracts(address arg1, address arg2) with:
         gas gas_remaining wei
        args address(arg1), arg3
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require ext_code.size(erc721ContractAddress)
    call erc721ContractAddress.linkContracts(address arg1, address arg2) with:
         gas gas_remaining wei
        args address(arg1), arg2
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
}

function buyTokenWithLoyalty(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) {
    require calldata.size - 4 >= 128
    if msg.sender != this.address:
        require ext_code.size(gameContractAddress)
        staticcall gameContractAddress.getCardLoyaltyPrice(uint256 arg1, uint256 arg2, uint256 arg3) with:
                gas gas_remaining wei
               args arg1, arg2, arg3
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0] != arg4:
            revert with 0, 'price == list price'
        if arg4 <= 0:
            revert with 0, 'price > 0'
        require ext_code.size(erc721ContractAddress)
        call erc721ContractAddress.getOrCreateInGameAccount(uint256 arg1, address arg2) with:
             gas gas_remaining wei
            args arg1, msg.sender
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(erc20ContractAddress)
        if not arg1:
            call erc20ContractAddress.0x9a1d8044 with:
                 gas gas_remaining wei
                args arg2, msg.sender, arg4
        else:
            call erc20ContractAddress.0x9a1d8044 with:
                 gas gas_remaining wei
                args arg1, msg.sender, arg4
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require ext_code.size(gameContractAddress)
        call gameContractAddress.createTokenFromCard(uint256 arg1, uint256 arg2, uint256 arg3) with:
             gas gas_remaining wei
            args arg1, arg2, arg3
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 96
        emit 0x29ed85fa: -1, 0, arg1, ext_call.return_data[0]
        require ext_code.size(erc721ContractAddress)
        call erc721ContractAddress.transferNewToken(bytes32 arg1, uint256 arg2, uint256 arg3) with:
             gas gas_remaining wei
            args ext_call.return_data[0], ext_call.return_data[0], 0
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        if not arg1:
            if not stor17[arg2][arg3]:
                revert with 0, 'collectible must be on sale'
            if ext_call.return_data[64]:
                require ext_code.size(erc721ContractAddress)
                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                     gas gas_remaining wei
                    args 0, ext_call.return_data[28 len 4], ext_call.return_data[64], 0, block.timestamp
            else:
                if uint64(ext_call.return_data[0]) >> 192 >= 30:
                    if uint16(sha3(ext_call.return_data[0], block.timestamp)) < 656:
                        if not Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 16:
                            require ext_code.size(erc721ContractAddress)
                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 524288, 16, block.timestamp
                        else:
                            if Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 13 / Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 16 != 8:
                                revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[293 len 31]
                            require ext_code.size(erc721ContractAddress)
                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], (Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 13) + 524288, 16, block.timestamp
                    else:
                        if uint16(sha3(ext_call.return_data[0], block.timestamp)) >= 2623:
                            require ext_code.size(erc721ContractAddress)
                            if uint16(sha3(ext_call.return_data[0], block.timestamp)) < 9177:
                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], (Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 16) + 16384, 4, block.timestamp
                            else:
                                if uint16(sha3(ext_call.return_data[0], block.timestamp)) >= 25561:
                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], (Mask(8, 24, sha3(ext_call.return_data[0], block.timestamp)) >> 24) + 1, 1, block.timestamp
                                else:
                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], (Mask(13, 19, sha3(ext_call.return_data[0], block.timestamp)) >> 19) + 512, 2, block.timestamp
                        else:
                            if not Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 16:
                                require ext_code.size(erc721ContractAddress)
                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 131072, 8, block.timestamp
                            else:
                                if Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 14 / Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 16 != 4:
                                    revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[293 len 31]
                                require ext_code.size(erc721ContractAddress)
                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], (Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 14) + 131072, 8, block.timestamp
                else:
                    if uint64(ext_call.return_data[0]) >> 192 > 30:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if not -(uint64(ext_call.return_data[0]) >> 192) + 30:
                        revert with 0, 'SafeMath: division by zero'
                    if uint16(sha3(ext_call.return_data[0], block.timestamp)) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 656:
                        if not Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 16:
                            require ext_code.size(erc721ContractAddress)
                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 524288, 16, block.timestamp
                        else:
                            if Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 13 / Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 16 != 8:
                                revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[421 len 31]
                            require ext_code.size(erc721ContractAddress)
                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], (Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 13) + 524288, 16, block.timestamp
                    else:
                        if uint16(sha3(ext_call.return_data[0], block.timestamp)) / -(uint64(ext_call.return_data[0]) >> 192) + 30 >= 2623:
                            require ext_code.size(erc721ContractAddress)
                            if uint16(sha3(ext_call.return_data[0], block.timestamp)) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 9177:
                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], (Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 16) + 16384, 4, block.timestamp
                            else:
                                if uint16(sha3(ext_call.return_data[0], block.timestamp)) / -(uint64(ext_call.return_data[0]) >> 192) + 30 >= 25561:
                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], (Mask(8, 24, sha3(ext_call.return_data[0], block.timestamp)) >> 24) + 1, 1, block.timestamp
                                else:
                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], (Mask(13, 19, sha3(ext_call.return_data[0], block.timestamp)) >> 19) + 512, 2, block.timestamp
                        else:
                            if not Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 16:
                                require ext_code.size(erc721ContractAddress)
                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 131072, 8, block.timestamp
                            else:
                                if Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 14 / Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 16 != 4:
                                    revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[421 len 31]
                                require ext_code.size(erc721ContractAddress)
                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], (Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 14) + 131072, 8, block.timestamp
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
    else:
        mem[96] = calldata.size
        mem[128 len calldata.size] = call.data[0 len calldata.size]
        require ext_code.size(gameContractAddress)
        staticcall gameContractAddress.getCardLoyaltyPrice(uint256 arg1, uint256 arg2, uint256 arg3) with:
                gas gas_remaining wei
               args arg1, arg2, arg3
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0] != arg4:
            revert with 0, 'price == list price'
        if arg4 <= 0:
            revert with 0, 'price > 0'
        require ext_code.size(erc721ContractAddress)
        call erc721ContractAddress.getOrCreateInGameAccount(uint256 arg1, address arg2) with:
             gas gas_remaining wei
            args arg1, mem[calldata.size + 108 len 20]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(erc20ContractAddress)
        if not arg1:
            call erc20ContractAddress.0x9a1d8044 with:
                 gas gas_remaining wei
                args arg2, mem[calldata.size + 108 len 20], arg4
        else:
            call erc20ContractAddress.0x9a1d8044 with:
                 gas gas_remaining wei
                args arg1, mem[calldata.size + 108 len 20], arg4
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require ext_code.size(gameContractAddress)
        call gameContractAddress.createTokenFromCard(uint256 arg1, uint256 arg2, uint256 arg3) with:
             gas gas_remaining wei
            args arg1, arg2, arg3
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 96
        emit 0x29ed85fa: -1, 0, arg1, ext_call.return_data[0]
        require ext_code.size(erc721ContractAddress)
        call erc721ContractAddress.transferNewToken(bytes32 arg1, uint256 arg2, uint256 arg3) with:
             gas gas_remaining wei
            args ext_call.return_data[0], ext_call.return_data[0], 0
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        if not arg1:
            if not stor17[arg2][arg3]:
                revert with 0, 'collectible must be on sale'
            if ext_call.return_data[64]:
                require ext_code.size(erc721ContractAddress)
                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                     gas gas_remaining wei
                    args ext_call.return_data[0], ext_call.return_data[64], 0, block.timestamp
            else:
                if uint64(ext_call.return_data[0]) >> 192 >= 30:
                    if uint16(sha3(ext_call.return_data[0], block.timestamp)) < 656:
                        if not Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 16:
                            require ext_code.size(erc721ContractAddress)
                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 524288, 16, block.timestamp
                        else:
                            if Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 13 / Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 16 != 8:
                                revert with 0, 
                                            32,
                                            33,
                                            0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[ceil32(calldata.size) + 325 len 31]
                            require ext_code.size(erc721ContractAddress)
                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], (Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 13) + 524288, 16, block.timestamp
                    else:
                        if uint16(sha3(ext_call.return_data[0], block.timestamp)) >= 2623:
                            require ext_code.size(erc721ContractAddress)
                            if uint16(sha3(ext_call.return_data[0], block.timestamp)) < 9177:
                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], (Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 16) + 16384, 4, block.timestamp
                            else:
                                if uint16(sha3(ext_call.return_data[0], block.timestamp)) >= 25561:
                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], (Mask(8, 24, sha3(ext_call.return_data[0], block.timestamp)) >> 24) + 1, 1, block.timestamp
                                else:
                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], (Mask(13, 19, sha3(ext_call.return_data[0], block.timestamp)) >> 19) + 512, 2, block.timestamp
                        else:
                            if not Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 16:
                                require ext_code.size(erc721ContractAddress)
                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 131072, 8, block.timestamp
                            else:
                                if Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 14 / Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 16 != 4:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[ceil32(calldata.size) + 325 len 31]
                                require ext_code.size(erc721ContractAddress)
                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], (Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 14) + 131072, 8, block.timestamp
                else:
                    if uint64(ext_call.return_data[0]) >> 192 > 30:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if not -(uint64(ext_call.return_data[0]) >> 192) + 30:
                        revert with 0, 'SafeMath: division by zero'
                    if uint16(sha3(ext_call.return_data[0], block.timestamp)) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 656:
                        if not Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 16:
                            require ext_code.size(erc721ContractAddress)
                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 524288, 16, block.timestamp
                        else:
                            if Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 13 / Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 16 != 8:
                                revert with 0, 
                                            32,
                                            33,
                                            0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[ceil32(calldata.size) + 453 len 31]
                            require ext_code.size(erc721ContractAddress)
                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], (Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 13) + 524288, 16, block.timestamp
                    else:
                        if uint16(sha3(ext_call.return_data[0], block.timestamp)) / -(uint64(ext_call.return_data[0]) >> 192) + 30 >= 2623:
                            require ext_code.size(erc721ContractAddress)
                            if uint16(sha3(ext_call.return_data[0], block.timestamp)) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 9177:
                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], (Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 16) + 16384, 4, block.timestamp
                            else:
                                if uint16(sha3(ext_call.return_data[0], block.timestamp)) / -(uint64(ext_call.return_data[0]) >> 192) + 30 >= 25561:
                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], (Mask(8, 24, sha3(ext_call.return_data[0], block.timestamp)) >> 24) + 1, 1, block.timestamp
                                else:
                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], (Mask(13, 19, sha3(ext_call.return_data[0], block.timestamp)) >> 19) + 512, 2, block.timestamp
                        else:
                            if not Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 16:
                                require ext_code.size(erc721ContractAddress)
                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 131072, 8, block.timestamp
                            else:
                                if Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 14 / Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 16 != 4:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[ceil32(calldata.size) + 453 len 31]
                                require ext_code.size(erc721ContractAddress)
                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], (Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 14) + 131072, 8, block.timestamp
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
    return ext_call.return_data[0]
}

function workerBuyCollectible(bytes32 arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, uint256 arg7, uint256 arg8, bool arg9) {
    require calldata.size - 4 >= 288
    if msg.sender != this.address:
        require ext_code.size(minionManagerAddress)
        staticcall minionManagerAddress.0xc2babfd7 with:
                gas gas_remaining wei
               args msg.sender
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            revert with 0, 'worker or minion'
        if gasGrantAmount > 0:
            if eth.balance(msg.sender) < gasRefillLevel:
                call msg.sender with:
                   value gasGrantAmount wei
                     gas 2300 * is_zero(value) wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
        if not ext_call.return_data[0]:
            revert with 0, 'worker or minion'
        if arg9:
            if not arg1:
                revert with 0, 'hash can't be zero'
            if not stor16[arg1]:
                stor16[arg1] = 1
                require ext_code.size(erc721ContractAddress)
                call erc721ContractAddress.getOrCreateInGameAccount(uint256 arg1, address arg2) with:
                     gas gas_remaining wei
                    args 0, arg2
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(gameContractAddress)
                call gameContractAddress.createTokenFromCard(uint256 arg1, uint256 arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args 0, arg3, arg4
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 96
                emit 0x29ed85fa: -1, 0, 0, ext_call.return_data[0]
                require ext_code.size(erc721ContractAddress)
                call erc721ContractAddress.transferNewToken(bytes32 arg1, uint256 arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args ext_call.return_data[0], ext_call.return_data[0], 0
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                if ext_call.return_data[64]:
                    if arg5 != ext_call.return_data[64]:
                        revert with 0, 'xp == fixed XP'
                    if arg6:
                        revert with 0, 'XP per hour == 0'
                if not stor17[arg3][arg4]:
                    revert with 0, 'collectible must be on sale'
                if arg5:
                    require ext_code.size(erc721ContractAddress)
                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                         gas gas_remaining wei
                        args 0, ext_call.return_data[28 len 4], arg5, arg6, arg7
                else:
                    if uint64(ext_call.return_data[0]) >> 192 >= 30:
                        if uint16(sha3(ext_call.return_data[0], block.timestamp)) < 656:
                            if not Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 16:
                                require ext_code.size(erc721ContractAddress)
                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 524288, 16, arg7
                            else:
                                if Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 13 / Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 16 != 8:
                                    revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[293 len 31]
                                require ext_code.size(erc721ContractAddress)
                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], (Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 13) + 524288, 16, arg7
                        else:
                            if uint16(sha3(ext_call.return_data[0], block.timestamp)) >= 2623:
                                require ext_code.size(erc721ContractAddress)
                                if uint16(sha3(ext_call.return_data[0], block.timestamp)) < 9177:
                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], (Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 16) + 16384, 4, arg7
                                else:
                                    if uint16(sha3(ext_call.return_data[0], block.timestamp)) >= 25561:
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], (Mask(8, 24, sha3(ext_call.return_data[0], block.timestamp)) >> 24) + 1, 1, arg7
                                    else:
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], (Mask(13, 19, sha3(ext_call.return_data[0], block.timestamp)) >> 19) + 512, 2, arg7
                            else:
                                if not Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 16:
                                    require ext_code.size(erc721ContractAddress)
                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 131072, 8, arg7
                                else:
                                    if Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 14 / Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 16 != 4:
                                        revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[293 len 31]
                                    require ext_code.size(erc721ContractAddress)
                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], (Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 14) + 131072, 8, arg7
                    else:
                        if uint64(ext_call.return_data[0]) >> 192 > 30:
                            revert with 0, 'SafeMath: subtraction overflow'
                        if not -(uint64(ext_call.return_data[0]) >> 192) + 30:
                            revert with 0, 'SafeMath: division by zero'
                        if uint16(sha3(ext_call.return_data[0], block.timestamp)) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 656:
                            if not Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 16:
                                require ext_code.size(erc721ContractAddress)
                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 524288, 16, arg7
                            else:
                                if Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 13 / Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 16 != 8:
                                    revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[421 len 31]
                                require ext_code.size(erc721ContractAddress)
                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], (Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 13) + 524288, 16, arg7
                        else:
                            if uint16(sha3(ext_call.return_data[0], block.timestamp)) / -(uint64(ext_call.return_data[0]) >> 192) + 30 >= 2623:
                                require ext_code.size(erc721ContractAddress)
                                if uint16(sha3(ext_call.return_data[0], block.timestamp)) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 9177:
                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], (Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 16) + 16384, 4, arg7
                                else:
                                    if uint16(sha3(ext_call.return_data[0], block.timestamp)) / -(uint64(ext_call.return_data[0]) >> 192) + 30 >= 25561:
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], (Mask(8, 24, sha3(ext_call.return_data[0], block.timestamp)) >> 24) + 1, 1, arg7
                                    else:
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], (Mask(13, 19, sha3(ext_call.return_data[0], block.timestamp)) >> 19) + 512, 2, arg7
                            else:
                                if not Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 16:
                                    require ext_code.size(erc721ContractAddress)
                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 131072, 8, arg7
                                else:
                                    if Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 14 / Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 16 != 4:
                                        revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[421 len 31]
                                    require ext_code.size(erc721ContractAddress)
                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], (Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 14) + 131072, 8, arg7
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                if arg8:
                    require ext_code.size(erc20ContractAddress)
                    call erc20ContractAddress.0x9a1d8044 with:
                         gas gas_remaining wei
                        args arg3, address(arg2), arg8
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
        else:
            require ext_code.size(erc721ContractAddress)
            call erc721ContractAddress.getOrCreateInGameAccount(uint256 arg1, address arg2) with:
                 gas gas_remaining wei
                args 0, arg2
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(gameContractAddress)
            call gameContractAddress.createTokenFromCard(uint256 arg1, uint256 arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args 0, arg3, arg4
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 96
            if arg1 == -1:
                emit 0x29ed85fa: arg1, 0, 0, ext_call.return_data[0]
                require ext_code.size(erc721ContractAddress)
                call erc721ContractAddress.transferNewToken(bytes32 arg1, uint256 arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args ext_call.return_data[0], ext_call.return_data[0], 0
            else:
                if ext_call.return_data[32] + block.timestamp < block.timestamp:
                    revert with 0, 'SafeMath: addition overflow'
                if arg1:
                    purchaseIdtoTokenIds[0][arg1].field_0++
                    purchaseIdtoTokenIds[0][arg1][purchaseIdtoTokenIds[0][arg1].field_0].field_0 = ext_call.return_data[0]
                emit 0x29ed85fa: arg1, ext_call.return_data[32] + block.timestamp, 0, ext_call.return_data[0]
                require ext_code.size(erc721ContractAddress)
                call erc721ContractAddress.transferNewToken(bytes32 arg1, uint256 arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args ext_call.return_data[0], ext_call.return_data[0], ext_call.return_data[32] + block.timestamp
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            if ext_call.return_data[64]:
                if arg5 != ext_call.return_data[64]:
                    revert with 0, 'xp == fixed XP'
                if arg6:
                    revert with 0, 'XP per hour == 0'
            if not stor17[arg3][arg4]:
                revert with 0, 'collectible must be on sale'
            if arg5:
                require ext_code.size(erc721ContractAddress)
                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                     gas gas_remaining wei
                    args 0, ext_call.return_data[28 len 4], arg5, arg6, arg7
            else:
                if uint64(ext_call.return_data[0]) >> 192 >= 30:
                    if uint16(sha3(ext_call.return_data[0], block.timestamp)) < 656:
                        if not Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 16:
                            require ext_code.size(erc721ContractAddress)
                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 524288, 16, arg7
                        else:
                            if Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 13 / Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 16 != 8:
                                revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[293 len 31]
                            require ext_code.size(erc721ContractAddress)
                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], (Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 13) + 524288, 16, arg7
                    else:
                        if uint16(sha3(ext_call.return_data[0], block.timestamp)) >= 2623:
                            require ext_code.size(erc721ContractAddress)
                            if uint16(sha3(ext_call.return_data[0], block.timestamp)) < 9177:
                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], (Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 16) + 16384, 4, arg7
                            else:
                                if uint16(sha3(ext_call.return_data[0], block.timestamp)) >= 25561:
                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], (Mask(8, 24, sha3(ext_call.return_data[0], block.timestamp)) >> 24) + 1, 1, arg7
                                else:
                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], (Mask(13, 19, sha3(ext_call.return_data[0], block.timestamp)) >> 19) + 512, 2, arg7
                        else:
                            if not Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 16:
                                require ext_code.size(erc721ContractAddress)
                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 131072, 8, arg7
                            else:
                                if Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 14 / Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 16 != 4:
                                    revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[293 len 31]
                                require ext_code.size(erc721ContractAddress)
                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], (Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 14) + 131072, 8, arg7
                else:
                    if uint64(ext_call.return_data[0]) >> 192 > 30:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if not -(uint64(ext_call.return_data[0]) >> 192) + 30:
                        revert with 0, 'SafeMath: division by zero'
                    if uint16(sha3(ext_call.return_data[0], block.timestamp)) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 656:
                        if not Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 16:
                            require ext_code.size(erc721ContractAddress)
                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 524288, 16, arg7
                        else:
                            if Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 13 / Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 16 != 8:
                                revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[421 len 31]
                            require ext_code.size(erc721ContractAddress)
                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], (Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 13) + 524288, 16, arg7
                    else:
                        if uint16(sha3(ext_call.return_data[0], block.timestamp)) / -(uint64(ext_call.return_data[0]) >> 192) + 30 >= 2623:
                            require ext_code.size(erc721ContractAddress)
                            if uint16(sha3(ext_call.return_data[0], block.timestamp)) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 9177:
                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], (Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 16) + 16384, 4, arg7
                            else:
                                if uint16(sha3(ext_call.return_data[0], block.timestamp)) / -(uint64(ext_call.return_data[0]) >> 192) + 30 >= 25561:
                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], (Mask(8, 24, sha3(ext_call.return_data[0], block.timestamp)) >> 24) + 1, 1, arg7
                                else:
                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], (Mask(13, 19, sha3(ext_call.return_data[0], block.timestamp)) >> 19) + 512, 2, arg7
                        else:
                            if not Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 16:
                                require ext_code.size(erc721ContractAddress)
                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 131072, 8, arg7
                            else:
                                if Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 14 / Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 16 != 4:
                                    revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[421 len 31]
                                require ext_code.size(erc721ContractAddress)
                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], (Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 14) + 131072, 8, arg7
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            if arg8:
                require ext_code.size(erc20ContractAddress)
                call erc20ContractAddress.0x9a1d8044 with:
                     gas gas_remaining wei
                    args arg3, address(arg2), arg8
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
    else:
        mem[96] = calldata.size
        mem[128 len calldata.size] = call.data[0 len calldata.size]
        require ext_code.size(minionManagerAddress)
        staticcall minionManagerAddress.0xc2babfd7 with:
                gas gas_remaining wei
               args mem[calldata.size + 108 len 20]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            revert with 0, 'worker or minion'
        if gasGrantAmount > 0:
            if eth.balance(mem[calldata.size + 96]) < gasRefillLevel:
                call mem[calldata.size + 108 len 20] with:
                   value gasGrantAmount wei
                     gas 2300 * is_zero(value) wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
        if not ext_call.return_data[0]:
            revert with 0, 'worker or minion'
        if arg9:
            if not arg1:
                revert with 0, 'hash can't be zero'
            if not stor16[arg1]:
                stor16[arg1] = 1
                require ext_code.size(erc721ContractAddress)
                call erc721ContractAddress.getOrCreateInGameAccount(uint256 arg1, address arg2) with:
                     gas gas_remaining wei
                    args 0, arg2
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(gameContractAddress)
                call gameContractAddress.createTokenFromCard(uint256 arg1, uint256 arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args 0, arg3, arg4
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 96
                emit 0x29ed85fa: -1, 0, 0, ext_call.return_data[0]
                require ext_code.size(erc721ContractAddress)
                call erc721ContractAddress.transferNewToken(bytes32 arg1, uint256 arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args ext_call.return_data[0], ext_call.return_data[0], 0
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                if ext_call.return_data[64]:
                    if arg5 != ext_call.return_data[64]:
                        revert with 0, 'xp == fixed XP'
                    if arg6:
                        revert with 0, 'XP per hour == 0'
                if not stor17[arg3][arg4]:
                    revert with 0, 'collectible must be on sale'
                if arg5:
                    require ext_code.size(erc721ContractAddress)
                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0], arg5, arg6, arg7
                else:
                    if uint64(ext_call.return_data[0]) >> 192 >= 30:
                        if uint16(sha3(ext_call.return_data[0], block.timestamp)) < 656:
                            if not Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 16:
                                require ext_code.size(erc721ContractAddress)
                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 524288, 16, arg7
                            else:
                                if Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 13 / Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 16 != 8:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[ceil32(calldata.size) + 325 len 31]
                                require ext_code.size(erc721ContractAddress)
                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], (Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 13) + 524288, 16, arg7
                        else:
                            if uint16(sha3(ext_call.return_data[0], block.timestamp)) >= 2623:
                                require ext_code.size(erc721ContractAddress)
                                if uint16(sha3(ext_call.return_data[0], block.timestamp)) < 9177:
                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], (Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 16) + 16384, 4, arg7
                                else:
                                    if uint16(sha3(ext_call.return_data[0], block.timestamp)) >= 25561:
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], (Mask(8, 24, sha3(ext_call.return_data[0], block.timestamp)) >> 24) + 1, 1, arg7
                                    else:
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], (Mask(13, 19, sha3(ext_call.return_data[0], block.timestamp)) >> 19) + 512, 2, arg7
                            else:
                                if not Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 16:
                                    require ext_code.size(erc721ContractAddress)
                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 131072, 8, arg7
                                else:
                                    if Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 14 / Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 16 != 4:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[ceil32(calldata.size) + 325 len 31]
                                    require ext_code.size(erc721ContractAddress)
                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], (Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 14) + 131072, 8, arg7
                    else:
                        if uint64(ext_call.return_data[0]) >> 192 > 30:
                            revert with 0, 'SafeMath: subtraction overflow'
                        if not -(uint64(ext_call.return_data[0]) >> 192) + 30:
                            revert with 0, 'SafeMath: division by zero'
                        if uint16(sha3(ext_call.return_data[0], block.timestamp)) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 656:
                            if not Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 16:
                                require ext_code.size(erc721ContractAddress)
                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 524288, 16, arg7
                            else:
                                if Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 13 / Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 16 != 8:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[ceil32(calldata.size) + 453 len 31]
                                require ext_code.size(erc721ContractAddress)
                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], (Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 13) + 524288, 16, arg7
                        else:
                            if uint16(sha3(ext_call.return_data[0], block.timestamp)) / -(uint64(ext_call.return_data[0]) >> 192) + 30 >= 2623:
                                require ext_code.size(erc721ContractAddress)
                                if uint16(sha3(ext_call.return_data[0], block.timestamp)) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 9177:
                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], (Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 16) + 16384, 4, arg7
                                else:
                                    if uint16(sha3(ext_call.return_data[0], block.timestamp)) / -(uint64(ext_call.return_data[0]) >> 192) + 30 >= 25561:
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], (Mask(8, 24, sha3(ext_call.return_data[0], block.timestamp)) >> 24) + 1, 1, arg7
                                    else:
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], (Mask(13, 19, sha3(ext_call.return_data[0], block.timestamp)) >> 19) + 512, 2, arg7
                            else:
                                if not Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 16:
                                    require ext_code.size(erc721ContractAddress)
                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 131072, 8, arg7
                                else:
                                    if Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 14 / Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 16 != 4:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[ceil32(calldata.size) + 453 len 31]
                                    require ext_code.size(erc721ContractAddress)
                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], (Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 14) + 131072, 8, arg7
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                if arg8:
                    require ext_code.size(erc20ContractAddress)
                    call erc20ContractAddress.0x9a1d8044 with:
                         gas gas_remaining wei
                        args arg3, address(arg2), arg8
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
        else:
            require ext_code.size(erc721ContractAddress)
            call erc721ContractAddress.getOrCreateInGameAccount(uint256 arg1, address arg2) with:
                 gas gas_remaining wei
                args 0, arg2
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(gameContractAddress)
            call gameContractAddress.createTokenFromCard(uint256 arg1, uint256 arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args 0, arg3, arg4
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 96
            if arg1 == -1:
                emit 0x29ed85fa: arg1, 0, 0, ext_call.return_data[0]
                require ext_code.size(erc721ContractAddress)
                call erc721ContractAddress.transferNewToken(bytes32 arg1, uint256 arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args ext_call.return_data[0], ext_call.return_data[0], 0
            else:
                if ext_call.return_data[32] + block.timestamp < block.timestamp:
                    revert with 0, 'SafeMath: addition overflow'
                if arg1:
                    purchaseIdtoTokenIds[0][arg1].field_0++
                    purchaseIdtoTokenIds[0][arg1][purchaseIdtoTokenIds[0][arg1].field_0].field_0 = ext_call.return_data[0]
                emit 0x29ed85fa: arg1, ext_call.return_data[32] + block.timestamp, 0, ext_call.return_data[0]
                require ext_code.size(erc721ContractAddress)
                call erc721ContractAddress.transferNewToken(bytes32 arg1, uint256 arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args ext_call.return_data[0], ext_call.return_data[0], ext_call.return_data[32] + block.timestamp
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            if ext_call.return_data[64]:
                if arg5 != ext_call.return_data[64]:
                    revert with 0, 'xp == fixed XP'
                if arg6:
                    revert with 0, 'XP per hour == 0'
            if not stor17[arg3][arg4]:
                revert with 0, 'collectible must be on sale'
            if arg5:
                require ext_code.size(erc721ContractAddress)
                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                     gas gas_remaining wei
                    args ext_call.return_data[0], arg5, arg6, arg7
            else:
                if uint64(ext_call.return_data[0]) >> 192 >= 30:
                    if uint16(sha3(ext_call.return_data[0], block.timestamp)) < 656:
                        if not Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 16:
                            require ext_code.size(erc721ContractAddress)
                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 524288, 16, arg7
                        else:
                            if Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 13 / Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 16 != 8:
                                revert with 0, 
                                            32,
                                            33,
                                            0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[ceil32(calldata.size) + 325 len 31]
                            require ext_code.size(erc721ContractAddress)
                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], (Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 13) + 524288, 16, arg7
                    else:
                        if uint16(sha3(ext_call.return_data[0], block.timestamp)) >= 2623:
                            require ext_code.size(erc721ContractAddress)
                            if uint16(sha3(ext_call.return_data[0], block.timestamp)) < 9177:
                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], (Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 16) + 16384, 4, arg7
                            else:
                                if uint16(sha3(ext_call.return_data[0], block.timestamp)) >= 25561:
                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], (Mask(8, 24, sha3(ext_call.return_data[0], block.timestamp)) >> 24) + 1, 1, arg7
                                else:
                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], (Mask(13, 19, sha3(ext_call.return_data[0], block.timestamp)) >> 19) + 512, 2, arg7
                        else:
                            if not Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 16:
                                require ext_code.size(erc721ContractAddress)
                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 131072, 8, arg7
                            else:
                                if Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 14 / Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 16 != 4:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[ceil32(calldata.size) + 325 len 31]
                                require ext_code.size(erc721ContractAddress)
                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], (Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 14) + 131072, 8, arg7
                else:
                    if uint64(ext_call.return_data[0]) >> 192 > 30:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if not -(uint64(ext_call.return_data[0]) >> 192) + 30:
                        revert with 0, 'SafeMath: division by zero'
                    if uint16(sha3(ext_call.return_data[0], block.timestamp)) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 656:
                        if not Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 16:
                            require ext_code.size(erc721ContractAddress)
                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 524288, 16, arg7
                        else:
                            if Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 13 / Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 16 != 8:
                                revert with 0, 
                                            32,
                                            33,
                                            0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[ceil32(calldata.size) + 453 len 31]
                            require ext_code.size(erc721ContractAddress)
                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], (Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 13) + 524288, 16, arg7
                    else:
                        if uint16(sha3(ext_call.return_data[0], block.timestamp)) / -(uint64(ext_call.return_data[0]) >> 192) + 30 >= 2623:
                            require ext_code.size(erc721ContractAddress)
                            if uint16(sha3(ext_call.return_data[0], block.timestamp)) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 9177:
                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], (Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 16) + 16384, 4, arg7
                            else:
                                if uint16(sha3(ext_call.return_data[0], block.timestamp)) / -(uint64(ext_call.return_data[0]) >> 192) + 30 >= 25561:
                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], (Mask(8, 24, sha3(ext_call.return_data[0], block.timestamp)) >> 24) + 1, 1, arg7
                                else:
                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], (Mask(13, 19, sha3(ext_call.return_data[0], block.timestamp)) >> 19) + 512, 2, arg7
                        else:
                            if not Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 16:
                                require ext_code.size(erc721ContractAddress)
                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 131072, 8, arg7
                            else:
                                if Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 14 / Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 16 != 4:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[ceil32(calldata.size) + 453 len 31]
                                require ext_code.size(erc721ContractAddress)
                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], (Mask(16, 16, sha3(ext_call.return_data[0], block.timestamp)) >> 14) + 131072, 8, arg7
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            if arg8:
                require ext_code.size(erc20ContractAddress)
                call erc20ContractAddress.0x9a1d8044 with:
                     gas gas_remaining wei
                    args arg3, address(arg2), arg8
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
}

function grantTokensFromCards(bytes32 arg1, uint256 arg2, uint256 arg3, uint256[] arg4, bytes32 arg5) {
    require calldata.size - 4 >= 160
    require arg4 <= 4294967296
    require arg4 + 36 <= calldata.size
    require arg4.length <= 4294967296 and arg4 + (32 * arg4.length) + 36 <= calldata.size
    if msg.sender != this.address:
        require ext_code.size(minionManagerAddress)
        staticcall minionManagerAddress.0xc2babfd7 with:
                gas gas_remaining wei
               args msg.sender
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            mem[100] = msg.sender
            mem[132] = bool(ext_call.return_data[0])
            mem[164] = arg2
            require ext_code.size(gameContractAddress)
            staticcall gameContractAddress.isValidCaller(address arg1, bool arg2, uint256 arg3) with:
                    gas gas_remaining wei
                   args msg.sender, bool(ext_call.return_data[0]), arg2
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                revert with 0, 'admin, operator, or worker'
            require arg4.length <= test266151307()
            mem[96] = arg4.length
            mem[64] = (32 * arg4.length) + 128
            if not arg4.length:
                idx = 0
                while idx < arg4.length:
                    require ext_code.size(gameContractAddress)
                    call gameContractAddress.createTokenFromCard(uint256 arg1, uint256 arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args arg2, arg3, cd[((32 * idx) + arg4 + 36)]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 96
                    if arg5 == -1:
                        emit 0x29ed85fa: arg5, 0, arg2, ext_call.return_data[0]
                        mem[mem[64]] = 0x9a43573c00000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = arg1
                        mem[mem[64] + 36] = ext_call.return_data[0]
                        mem[mem[64] + 68] = 0
                        require ext_code.size(erc721ContractAddress)
                        call erc721ContractAddress.transferNewToken(bytes32 arg1, uint256 arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args arg1, ext_call.return_data[0], 0
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if not arg2:
                            mem[0] = cd[((32 * idx) + arg4 + 36)]
                            mem[32] = sha3(arg3, 17)
                            if not stor17[arg3][cd[((32 * idx) + arg4 + 36)]]:
                                revert with 0, 'collectible must be on sale'
                            if ext_call.return_data[64]:
                                mem[mem[64]] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = ext_call.return_data[0]
                                mem[mem[64] + 36] = ext_call.return_data[64]
                                mem[mem[64] + 68] = 0
                                mem[mem[64] + 100] = block.timestamp
                                require ext_code.size(erc721ContractAddress)
                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], ext_call.return_data[64], 0, block.timestamp
                            else:
                                _5173 = mem[64]
                                mem[mem[64] + 32] = ext_call.return_data[0]
                                mem[mem[64] + 64] = block.timestamp
                                _5174 = mem[64]
                                mem[mem[64]] = 64
                                mem[64] = mem[64] + 96
                                _5176 = sha3(mem[_5174 + 32 len mem[_5174]])
                                if uint64(ext_call.return_data[0]) >> 192 >= 30:
                                    if uint16(sha3(mem[_5174 + 32 len mem[_5174]])) < 656:
                                        if not Mask(16, 16, sha3(mem[_5174 + 32 len mem[_5174]])) >> 16:
                                            mem[_5173 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5173 + 100] = ext_call.return_data[0]
                                            mem[_5173 + 132] = 524288
                                            mem[_5173 + 164] = 16
                                            mem[_5173 + 196] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 524288, 16, block.timestamp
                                        else:
                                            if Mask(16, 16, sha3(mem[_5174 + 32 len mem[_5174]])) >> 13 / Mask(16, 16, sha3(mem[_5174 + 32 len mem[_5174]])) >> 16 != 8:
                                                revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5173 + 197 len 31]
                                            mem[_5173 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5173 + 100] = ext_call.return_data[0]
                                            mem[_5173 + 132] = (Mask(16, 16, _5176) >> 13) + 524288
                                            mem[_5173 + 164] = 16
                                            mem[_5173 + 196] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(16, 16, _5176) >> 13) + 524288, 16, block.timestamp
                                    else:
                                        if uint16(sha3(mem[_5174 + 32 len mem[_5174]])) < 2623:
                                            if not Mask(16, 16, sha3(mem[_5174 + 32 len mem[_5174]])) >> 16:
                                                mem[_5173 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5173 + 100] = ext_call.return_data[0]
                                                mem[_5173 + 132] = 131072
                                                mem[_5173 + 164] = 8
                                                mem[_5173 + 196] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 131072, 8, block.timestamp
                                            else:
                                                if Mask(16, 16, sha3(mem[_5174 + 32 len mem[_5174]])) >> 14 / Mask(16, 16, sha3(mem[_5174 + 32 len mem[_5174]])) >> 16 != 4:
                                                    revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5173 + 197 len 31]
                                                mem[_5173 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5173 + 100] = ext_call.return_data[0]
                                                mem[_5173 + 132] = (Mask(16, 16, _5176) >> 14) + 131072
                                                mem[_5173 + 164] = 8
                                                mem[_5173 + 196] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(16, 16, _5176) >> 14) + 131072, 8, block.timestamp
                                        else:
                                            if uint16(sha3(mem[_5174 + 32 len mem[_5174]])) < 9177:
                                                mem[_5173 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5173 + 100] = ext_call.return_data[0]
                                                mem[_5173 + 132] = (Mask(16, 16, _5176) >> 16) + 16384
                                                mem[_5173 + 164] = 4
                                                mem[_5173 + 196] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(16, 16, _5176) >> 16) + 16384, 4, block.timestamp
                                            else:
                                                mem[64] = _5173 + 160
                                                mem[_5173 + 96] = 26
                                                mem[_5173 + 128] = 'SafeMath: division by zero'
                                                mem[_5173 + 160] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5173 + 164] = ext_call.return_data[0]
                                                if uint16(sha3(mem[_5174 + 32 len mem[_5174]])) >= 25561:
                                                    mem[_5173 + 196] = (Mask(8, 24, _5176) >> 24) + 1
                                                    mem[_5173 + 228] = 1
                                                    mem[_5173 + 260] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(8, 24, _5176) >> 24) + 1, 1, block.timestamp
                                                else:
                                                    mem[_5173 + 196] = (Mask(13, 19, _5176) >> 19) + 512
                                                    mem[_5173 + 228] = 2
                                                    mem[_5173 + 260] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(13, 19, _5176) >> 19) + 512, 2, block.timestamp
                                else:
                                    mem[_5173 + 96] = 30
                                    mem[_5173 + 128] = 'SafeMath: subtraction overflow'
                                    if uint64(ext_call.return_data[0]) >> 192 > 30:
                                        mem[_5173 + 160] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[_5173 + 164] = 32
                                        idx = 32
                                        while idx < 30:
                                            mem[idx + _5173 + 228] = mem[idx + _5173 + 128]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    mem[64] = _5173 + 224
                                    mem[_5173 + 160] = 26
                                    mem[_5173 + 192] = 'SafeMath: division by zero'
                                    if not -(uint64(ext_call.return_data[0]) >> 192) + 30:
                                        mem[_5173 + 224] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[_5173 + 228] = 32
                                        idx = 0
                                        while idx < 26:
                                            mem[idx + _5173 + 292] = mem[idx + _5173 + 192]
                                            idx = idx + 32
                                            continue 
                                        mem[_5173 + 292] = mem[_5173 + 298 len 26]
                                        revert with 0, 32, 26, mem[_5173 + 292]
                                    if uint16(_5176) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 656:
                                        if not Mask(16, 16, _5176) >> 16:
                                            mem[_5173 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5173 + 228] = ext_call.return_data[0]
                                            mem[_5173 + 260] = 524288
                                            mem[_5173 + 292] = 16
                                            mem[_5173 + 324] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 524288, 16, block.timestamp
                                        else:
                                            if Mask(16, 16, _5176) >> 13 / Mask(16, 16, _5176) >> 16 != 8:
                                                revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5173 + 325 len 31]
                                            mem[_5173 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5173 + 228] = ext_call.return_data[0]
                                            mem[_5173 + 260] = (Mask(16, 16, _5176) >> 13) + 524288
                                            mem[_5173 + 292] = 16
                                            mem[_5173 + 324] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(16, 16, _5176) >> 13) + 524288, 16, block.timestamp
                                    else:
                                        if uint16(_5176) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 2623:
                                            if not Mask(16, 16, _5176) >> 16:
                                                mem[_5173 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5173 + 228] = ext_call.return_data[0]
                                                mem[_5173 + 260] = 131072
                                                mem[_5173 + 292] = 8
                                                mem[_5173 + 324] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 131072, 8, block.timestamp
                                            else:
                                                if Mask(16, 16, _5176) >> 14 / Mask(16, 16, _5176) >> 16 != 4:
                                                    revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5173 + 325 len 31]
                                                mem[_5173 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5173 + 228] = ext_call.return_data[0]
                                                mem[_5173 + 260] = (Mask(16, 16, _5176) >> 14) + 131072
                                                mem[_5173 + 292] = 8
                                                mem[_5173 + 324] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(16, 16, _5176) >> 14) + 131072, 8, block.timestamp
                                        else:
                                            if uint16(_5176) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 9177:
                                                mem[_5173 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5173 + 228] = ext_call.return_data[0]
                                                mem[_5173 + 260] = (Mask(16, 16, _5176) >> 16) + 16384
                                                mem[_5173 + 292] = 4
                                                mem[_5173 + 324] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(16, 16, _5176) >> 16) + 16384, 4, block.timestamp
                                            else:
                                                mem[64] = _5173 + 288
                                                mem[_5173 + 224] = 26
                                                mem[_5173 + 256] = 'SafeMath: division by zero'
                                                mem[_5173 + 288] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5173 + 292] = ext_call.return_data[0]
                                                if uint16(_5176) / -(uint64(ext_call.return_data[0]) >> 192) + 30 >= 25561:
                                                    mem[_5173 + 324] = (Mask(8, 24, _5176) >> 24) + 1
                                                    mem[_5173 + 356] = 1
                                                    mem[_5173 + 388] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(8, 24, _5176) >> 24) + 1, 1, block.timestamp
                                                else:
                                                    mem[_5173 + 324] = (Mask(13, 19, _5176) >> 19) + 512
                                                    mem[_5173 + 356] = 2
                                                    mem[_5173 + 388] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(13, 19, _5176) >> 19) + 512, 2, block.timestamp
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if ext_call.return_data[32] + block.timestamp < block.timestamp:
                            revert with 0, 'SafeMath: addition overflow'
                        if not arg5:
                            emit 0x29ed85fa: arg5, ext_call.return_data[32] + block.timestamp, arg2, ext_call.return_data[0]
                            mem[mem[64]] = 0x9a43573c00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = arg1
                            mem[mem[64] + 36] = ext_call.return_data[0]
                            mem[mem[64] + 68] = ext_call.return_data[32] + block.timestamp
                            require ext_code.size(erc721ContractAddress)
                            call erc721ContractAddress.transferNewToken(bytes32 arg1, uint256 arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args arg1, ext_call.return_data[0], ext_call.return_data[32] + block.timestamp
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if not arg2:
                                mem[0] = cd[((32 * idx) + arg4 + 36)]
                                mem[32] = sha3(arg3, 17)
                                if not stor17[arg3][cd[((32 * idx) + arg4 + 36)]]:
                                    revert with 0, 'collectible must be on sale'
                                if ext_call.return_data[64]:
                                    mem[mem[64]] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = ext_call.return_data[0]
                                    mem[mem[64] + 36] = ext_call.return_data[64]
                                    mem[mem[64] + 68] = 0
                                    mem[mem[64] + 100] = block.timestamp
                                    require ext_code.size(erc721ContractAddress)
                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], ext_call.return_data[64], 0, block.timestamp
                                else:
                                    _5494 = mem[64]
                                    mem[mem[64] + 32] = ext_call.return_data[0]
                                    mem[mem[64] + 64] = block.timestamp
                                    _5495 = mem[64]
                                    mem[mem[64]] = 64
                                    mem[64] = mem[64] + 96
                                    _5497 = sha3(mem[_5495 + 32 len mem[_5495]])
                                    if uint64(ext_call.return_data[0]) >> 192 >= 30:
                                        if uint16(sha3(mem[_5495 + 32 len mem[_5495]])) < 656:
                                            if not Mask(16, 16, sha3(mem[_5495 + 32 len mem[_5495]])) >> 16:
                                                mem[_5494 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5494 + 100] = ext_call.return_data[0]
                                                mem[_5494 + 132] = 524288
                                                mem[_5494 + 164] = 16
                                                mem[_5494 + 196] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 524288, 16, block.timestamp
                                            else:
                                                if Mask(16, 16, sha3(mem[_5495 + 32 len mem[_5495]])) >> 13 / Mask(16, 16, sha3(mem[_5495 + 32 len mem[_5495]])) >> 16 != 8:
                                                    revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5494 + 197 len 31]
                                                mem[_5494 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5494 + 100] = ext_call.return_data[0]
                                                mem[_5494 + 132] = (Mask(16, 16, _5497) >> 13) + 524288
                                                mem[_5494 + 164] = 16
                                                mem[_5494 + 196] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(16, 16, _5497) >> 13) + 524288, 16, block.timestamp
                                        else:
                                            if uint16(sha3(mem[_5495 + 32 len mem[_5495]])) < 2623:
                                                if not Mask(16, 16, sha3(mem[_5495 + 32 len mem[_5495]])) >> 16:
                                                    mem[_5494 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5494 + 100] = ext_call.return_data[0]
                                                    mem[_5494 + 132] = 131072
                                                    mem[_5494 + 164] = 8
                                                    mem[_5494 + 196] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], 131072, 8, block.timestamp
                                                else:
                                                    if Mask(16, 16, sha3(mem[_5495 + 32 len mem[_5495]])) >> 14 / Mask(16, 16, sha3(mem[_5495 + 32 len mem[_5495]])) >> 16 != 4:
                                                        revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5494 + 197 len 31]
                                                    mem[_5494 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5494 + 100] = ext_call.return_data[0]
                                                    mem[_5494 + 132] = (Mask(16, 16, _5497) >> 14) + 131072
                                                    mem[_5494 + 164] = 8
                                                    mem[_5494 + 196] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(16, 16, _5497) >> 14) + 131072, 8, block.timestamp
                                            else:
                                                if uint16(sha3(mem[_5495 + 32 len mem[_5495]])) < 9177:
                                                    mem[_5494 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5494 + 100] = ext_call.return_data[0]
                                                    mem[_5494 + 132] = (Mask(16, 16, _5497) >> 16) + 16384
                                                    mem[_5494 + 164] = 4
                                                    mem[_5494 + 196] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(16, 16, _5497) >> 16) + 16384, 4, block.timestamp
                                                else:
                                                    mem[64] = _5494 + 160
                                                    mem[_5494 + 96] = 26
                                                    mem[_5494 + 128] = 'SafeMath: division by zero'
                                                    mem[_5494 + 160] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5494 + 164] = ext_call.return_data[0]
                                                    if uint16(sha3(mem[_5495 + 32 len mem[_5495]])) >= 25561:
                                                        mem[_5494 + 196] = (Mask(8, 24, _5497) >> 24) + 1
                                                        mem[_5494 + 228] = 1
                                                        mem[_5494 + 260] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(8, 24, _5497) >> 24) + 1, 1, block.timestamp
                                                    else:
                                                        mem[_5494 + 196] = (Mask(13, 19, _5497) >> 19) + 512
                                                        mem[_5494 + 228] = 2
                                                        mem[_5494 + 260] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(13, 19, _5497) >> 19) + 512, 2, block.timestamp
                                    else:
                                        mem[_5494 + 96] = 30
                                        mem[_5494 + 128] = 'SafeMath: subtraction overflow'
                                        if uint64(ext_call.return_data[0]) >> 192 > 30:
                                            mem[_5494 + 160] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[_5494 + 164] = 32
                                            idx = 32
                                            while idx < 30:
                                                mem[idx + _5494 + 228] = mem[idx + _5494 + 128]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        mem[64] = _5494 + 224
                                        mem[_5494 + 160] = 26
                                        mem[_5494 + 192] = 'SafeMath: division by zero'
                                        if not -(uint64(ext_call.return_data[0]) >> 192) + 30:
                                            mem[_5494 + 224] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[_5494 + 228] = 32
                                            idx = 0
                                            while idx < 26:
                                                mem[idx + _5494 + 292] = mem[idx + _5494 + 192]
                                                idx = idx + 32
                                                continue 
                                            mem[_5494 + 292] = mem[_5494 + 298 len 26]
                                            revert with 0, 32, 26, mem[_5494 + 292]
                                        if uint16(_5497) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 656:
                                            if not Mask(16, 16, _5497) >> 16:
                                                mem[_5494 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5494 + 228] = ext_call.return_data[0]
                                                mem[_5494 + 260] = 524288
                                                mem[_5494 + 292] = 16
                                                mem[_5494 + 324] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 524288, 16, block.timestamp
                                            else:
                                                if Mask(16, 16, _5497) >> 13 / Mask(16, 16, _5497) >> 16 != 8:
                                                    revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5494 + 325 len 31]
                                                mem[_5494 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5494 + 228] = ext_call.return_data[0]
                                                mem[_5494 + 260] = (Mask(16, 16, _5497) >> 13) + 524288
                                                mem[_5494 + 292] = 16
                                                mem[_5494 + 324] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(16, 16, _5497) >> 13) + 524288, 16, block.timestamp
                                        else:
                                            if uint16(_5497) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 2623:
                                                if not Mask(16, 16, _5497) >> 16:
                                                    mem[_5494 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5494 + 228] = ext_call.return_data[0]
                                                    mem[_5494 + 260] = 131072
                                                    mem[_5494 + 292] = 8
                                                    mem[_5494 + 324] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], 131072, 8, block.timestamp
                                                else:
                                                    if Mask(16, 16, _5497) >> 14 / Mask(16, 16, _5497) >> 16 != 4:
                                                        revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5494 + 325 len 31]
                                                    mem[_5494 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5494 + 228] = ext_call.return_data[0]
                                                    mem[_5494 + 260] = (Mask(16, 16, _5497) >> 14) + 131072
                                                    mem[_5494 + 292] = 8
                                                    mem[_5494 + 324] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(16, 16, _5497) >> 14) + 131072, 8, block.timestamp
                                            else:
                                                if uint16(_5497) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 9177:
                                                    mem[_5494 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5494 + 228] = ext_call.return_data[0]
                                                    mem[_5494 + 260] = (Mask(16, 16, _5497) >> 16) + 16384
                                                    mem[_5494 + 292] = 4
                                                    mem[_5494 + 324] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(16, 16, _5497) >> 16) + 16384, 4, block.timestamp
                                                else:
                                                    mem[64] = _5494 + 288
                                                    mem[_5494 + 224] = 26
                                                    mem[_5494 + 256] = 'SafeMath: division by zero'
                                                    mem[_5494 + 288] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5494 + 292] = ext_call.return_data[0]
                                                    if uint16(_5497) / -(uint64(ext_call.return_data[0]) >> 192) + 30 >= 25561:
                                                        mem[_5494 + 324] = (Mask(8, 24, _5497) >> 24) + 1
                                                        mem[_5494 + 356] = 1
                                                        mem[_5494 + 388] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(8, 24, _5497) >> 24) + 1, 1, block.timestamp
                                                    else:
                                                        mem[_5494 + 324] = (Mask(13, 19, _5497) >> 19) + 512
                                                        mem[_5494 + 356] = 2
                                                        mem[_5494 + 388] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(13, 19, _5497) >> 19) + 512, 2, block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                        else:
                            mem[32] = sha3(arg2, 19)
                            purchaseIdtoTokenIds[arg2][arg5].field_0++
                            mem[0] = sha3(arg5, sha3(arg2, 19))
                            purchaseIdtoTokenIds[arg2][arg5][purchaseIdtoTokenIds[arg2][arg5].field_0].field_0 = ext_call.return_data[0]
                            emit 0x29ed85fa: arg5, ext_call.return_data[32] + block.timestamp, arg2, ext_call.return_data[0]
                            mem[mem[64]] = 0x9a43573c00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = arg1
                            mem[mem[64] + 36] = ext_call.return_data[0]
                            mem[mem[64] + 68] = ext_call.return_data[32] + block.timestamp
                            require ext_code.size(erc721ContractAddress)
                            call erc721ContractAddress.transferNewToken(bytes32 arg1, uint256 arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args arg1, ext_call.return_data[0], ext_call.return_data[32] + block.timestamp
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if not arg2:
                                mem[0] = cd[((32 * idx) + arg4 + 36)]
                                mem[32] = sha3(arg3, 17)
                                if not stor17[arg3][cd[((32 * idx) + arg4 + 36)]]:
                                    revert with 0, 'collectible must be on sale'
                                if ext_call.return_data[64]:
                                    mem[mem[64]] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = ext_call.return_data[0]
                                    mem[mem[64] + 36] = ext_call.return_data[64]
                                    mem[mem[64] + 68] = 0
                                    mem[mem[64] + 100] = block.timestamp
                                    require ext_code.size(erc721ContractAddress)
                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], ext_call.return_data[64], 0, block.timestamp
                                else:
                                    _5578 = mem[64]
                                    mem[mem[64] + 32] = ext_call.return_data[0]
                                    mem[mem[64] + 64] = block.timestamp
                                    _5579 = mem[64]
                                    mem[mem[64]] = 64
                                    mem[64] = mem[64] + 96
                                    _5581 = sha3(mem[_5579 + 32 len mem[_5579]])
                                    if uint64(ext_call.return_data[0]) >> 192 >= 30:
                                        if uint16(sha3(mem[_5579 + 32 len mem[_5579]])) < 656:
                                            if not Mask(16, 16, sha3(mem[_5579 + 32 len mem[_5579]])) >> 16:
                                                mem[_5578 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5578 + 100] = ext_call.return_data[0]
                                                mem[_5578 + 132] = 524288
                                                mem[_5578 + 164] = 16
                                                mem[_5578 + 196] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 524288, 16, block.timestamp
                                            else:
                                                if Mask(16, 16, sha3(mem[_5579 + 32 len mem[_5579]])) >> 13 / Mask(16, 16, sha3(mem[_5579 + 32 len mem[_5579]])) >> 16 != 8:
                                                    revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5578 + 197 len 31]
                                                mem[_5578 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5578 + 100] = ext_call.return_data[0]
                                                mem[_5578 + 132] = (Mask(16, 16, _5581) >> 13) + 524288
                                                mem[_5578 + 164] = 16
                                                mem[_5578 + 196] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(16, 16, _5581) >> 13) + 524288, 16, block.timestamp
                                        else:
                                            if uint16(sha3(mem[_5579 + 32 len mem[_5579]])) < 2623:
                                                if not Mask(16, 16, sha3(mem[_5579 + 32 len mem[_5579]])) >> 16:
                                                    mem[_5578 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5578 + 100] = ext_call.return_data[0]
                                                    mem[_5578 + 132] = 131072
                                                    mem[_5578 + 164] = 8
                                                    mem[_5578 + 196] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], 131072, 8, block.timestamp
                                                else:
                                                    if Mask(16, 16, sha3(mem[_5579 + 32 len mem[_5579]])) >> 14 / Mask(16, 16, sha3(mem[_5579 + 32 len mem[_5579]])) >> 16 != 4:
                                                        revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5578 + 197 len 31]
                                                    mem[_5578 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5578 + 100] = ext_call.return_data[0]
                                                    mem[_5578 + 132] = (Mask(16, 16, _5581) >> 14) + 131072
                                                    mem[_5578 + 164] = 8
                                                    mem[_5578 + 196] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(16, 16, _5581) >> 14) + 131072, 8, block.timestamp
                                            else:
                                                if uint16(sha3(mem[_5579 + 32 len mem[_5579]])) < 9177:
                                                    mem[_5578 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5578 + 100] = ext_call.return_data[0]
                                                    mem[_5578 + 132] = (Mask(16, 16, _5581) >> 16) + 16384
                                                    mem[_5578 + 164] = 4
                                                    mem[_5578 + 196] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(16, 16, _5581) >> 16) + 16384, 4, block.timestamp
                                                else:
                                                    mem[64] = _5578 + 160
                                                    mem[_5578 + 96] = 26
                                                    mem[_5578 + 128] = 'SafeMath: division by zero'
                                                    mem[_5578 + 160] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5578 + 164] = ext_call.return_data[0]
                                                    if uint16(sha3(mem[_5579 + 32 len mem[_5579]])) >= 25561:
                                                        mem[_5578 + 196] = (Mask(8, 24, _5581) >> 24) + 1
                                                        mem[_5578 + 228] = 1
                                                        mem[_5578 + 260] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(8, 24, _5581) >> 24) + 1, 1, block.timestamp
                                                    else:
                                                        mem[_5578 + 196] = (Mask(13, 19, _5581) >> 19) + 512
                                                        mem[_5578 + 228] = 2
                                                        mem[_5578 + 260] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(13, 19, _5581) >> 19) + 512, 2, block.timestamp
                                    else:
                                        mem[_5578 + 96] = 30
                                        mem[_5578 + 128] = 'SafeMath: subtraction overflow'
                                        if uint64(ext_call.return_data[0]) >> 192 > 30:
                                            mem[_5578 + 160] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[_5578 + 164] = 32
                                            idx = 32
                                            while idx < 30:
                                                mem[idx + _5578 + 228] = mem[idx + _5578 + 128]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        mem[64] = _5578 + 224
                                        mem[_5578 + 160] = 26
                                        mem[_5578 + 192] = 'SafeMath: division by zero'
                                        if not -(uint64(ext_call.return_data[0]) >> 192) + 30:
                                            mem[_5578 + 224] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[_5578 + 228] = 32
                                            idx = 0
                                            while idx < 26:
                                                mem[idx + _5578 + 292] = mem[idx + _5578 + 192]
                                                idx = idx + 32
                                                continue 
                                            mem[_5578 + 292] = mem[_5578 + 298 len 26]
                                            revert with 0, 32, 26, mem[_5578 + 292]
                                        if uint16(_5581) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 656:
                                            if not Mask(16, 16, _5581) >> 16:
                                                mem[_5578 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5578 + 228] = ext_call.return_data[0]
                                                mem[_5578 + 260] = 524288
                                                mem[_5578 + 292] = 16
                                                mem[_5578 + 324] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 524288, 16, block.timestamp
                                            else:
                                                if Mask(16, 16, _5581) >> 13 / Mask(16, 16, _5581) >> 16 != 8:
                                                    revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5578 + 325 len 31]
                                                mem[_5578 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5578 + 228] = ext_call.return_data[0]
                                                mem[_5578 + 260] = (Mask(16, 16, _5581) >> 13) + 524288
                                                mem[_5578 + 292] = 16
                                                mem[_5578 + 324] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(16, 16, _5581) >> 13) + 524288, 16, block.timestamp
                                        else:
                                            if uint16(_5581) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 2623:
                                                if not Mask(16, 16, _5581) >> 16:
                                                    mem[_5578 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5578 + 228] = ext_call.return_data[0]
                                                    mem[_5578 + 260] = 131072
                                                    mem[_5578 + 292] = 8
                                                    mem[_5578 + 324] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], 131072, 8, block.timestamp
                                                else:
                                                    if Mask(16, 16, _5581) >> 14 / Mask(16, 16, _5581) >> 16 != 4:
                                                        revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5578 + 325 len 31]
                                                    mem[_5578 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5578 + 228] = ext_call.return_data[0]
                                                    mem[_5578 + 260] = (Mask(16, 16, _5581) >> 14) + 131072
                                                    mem[_5578 + 292] = 8
                                                    mem[_5578 + 324] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(16, 16, _5581) >> 14) + 131072, 8, block.timestamp
                                            else:
                                                if uint16(_5581) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 9177:
                                                    mem[_5578 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5578 + 228] = ext_call.return_data[0]
                                                    mem[_5578 + 260] = (Mask(16, 16, _5581) >> 16) + 16384
                                                    mem[_5578 + 292] = 4
                                                    mem[_5578 + 324] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(16, 16, _5581) >> 16) + 16384, 4, block.timestamp
                                                else:
                                                    mem[64] = _5578 + 288
                                                    mem[_5578 + 224] = 26
                                                    mem[_5578 + 256] = 'SafeMath: division by zero'
                                                    mem[_5578 + 288] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5578 + 292] = ext_call.return_data[0]
                                                    if uint16(_5581) / -(uint64(ext_call.return_data[0]) >> 192) + 30 >= 25561:
                                                        mem[_5578 + 324] = (Mask(8, 24, _5581) >> 24) + 1
                                                        mem[_5578 + 356] = 1
                                                        mem[_5578 + 388] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(8, 24, _5581) >> 24) + 1, 1, block.timestamp
                                                    else:
                                                        mem[_5578 + 324] = (Mask(13, 19, _5581) >> 19) + 512
                                                        mem[_5578 + 356] = 2
                                                        mem[_5578 + 388] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(13, 19, _5581) >> 19) + 512, 2, block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                    require idx < mem[96]
                    mem[(32 * idx) + 128] = ext_call.return_data[0]
                    idx = idx + 1
                    continue 
            else:
                mem[128 len 32 * arg4.length] = call.data[calldata.size len 32 * arg4.length]
                idx = 0
                while idx < arg4.length:
                    require ext_code.size(gameContractAddress)
                    call gameContractAddress.createTokenFromCard(uint256 arg1, uint256 arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args arg2, arg3, cd[((32 * idx) + arg4 + 36)]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 96
                    if arg5 == -1:
                        emit 0x29ed85fa: arg5, 0, arg2, ext_call.return_data[0]
                        mem[mem[64]] = 0x9a43573c00000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = arg1
                        mem[mem[64] + 36] = ext_call.return_data[0]
                        mem[mem[64] + 68] = 0
                        require ext_code.size(erc721ContractAddress)
                        call erc721ContractAddress.transferNewToken(bytes32 arg1, uint256 arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args arg1, ext_call.return_data[0], 0
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if not arg2:
                            mem[0] = cd[((32 * idx) + arg4 + 36)]
                            mem[32] = sha3(arg3, 17)
                            if not stor17[arg3][cd[((32 * idx) + arg4 + 36)]]:
                                revert with 0, 'collectible must be on sale'
                            if ext_call.return_data[64]:
                                mem[mem[64]] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = ext_call.return_data[0]
                                mem[mem[64] + 36] = ext_call.return_data[64]
                                mem[mem[64] + 68] = 0
                                mem[mem[64] + 100] = block.timestamp
                                require ext_code.size(erc721ContractAddress)
                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], ext_call.return_data[64], 0, block.timestamp
                            else:
                                _5177 = mem[64]
                                mem[mem[64] + 32] = ext_call.return_data[0]
                                mem[mem[64] + 64] = block.timestamp
                                _5178 = mem[64]
                                mem[mem[64]] = 64
                                mem[64] = mem[64] + 96
                                _5180 = sha3(mem[_5178 + 32 len mem[_5178]])
                                if uint64(ext_call.return_data[0]) >> 192 >= 30:
                                    if uint16(sha3(mem[_5178 + 32 len mem[_5178]])) < 656:
                                        if not Mask(16, 16, sha3(mem[_5178 + 32 len mem[_5178]])) >> 16:
                                            mem[_5177 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5177 + 100] = ext_call.return_data[0]
                                            mem[_5177 + 132] = 524288
                                            mem[_5177 + 164] = 16
                                            mem[_5177 + 196] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 524288, 16, block.timestamp
                                        else:
                                            if Mask(16, 16, sha3(mem[_5178 + 32 len mem[_5178]])) >> 13 / Mask(16, 16, sha3(mem[_5178 + 32 len mem[_5178]])) >> 16 != 8:
                                                revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5177 + 197 len 31]
                                            mem[_5177 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5177 + 100] = ext_call.return_data[0]
                                            mem[_5177 + 132] = (Mask(16, 16, _5180) >> 13) + 524288
                                            mem[_5177 + 164] = 16
                                            mem[_5177 + 196] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(16, 16, _5180) >> 13) + 524288, 16, block.timestamp
                                    else:
                                        if uint16(sha3(mem[_5178 + 32 len mem[_5178]])) < 2623:
                                            if not Mask(16, 16, sha3(mem[_5178 + 32 len mem[_5178]])) >> 16:
                                                mem[_5177 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5177 + 100] = ext_call.return_data[0]
                                                mem[_5177 + 132] = 131072
                                                mem[_5177 + 164] = 8
                                                mem[_5177 + 196] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 131072, 8, block.timestamp
                                            else:
                                                if Mask(16, 16, sha3(mem[_5178 + 32 len mem[_5178]])) >> 14 / Mask(16, 16, sha3(mem[_5178 + 32 len mem[_5178]])) >> 16 != 4:
                                                    revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5177 + 197 len 31]
                                                mem[_5177 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5177 + 100] = ext_call.return_data[0]
                                                mem[_5177 + 132] = (Mask(16, 16, _5180) >> 14) + 131072
                                                mem[_5177 + 164] = 8
                                                mem[_5177 + 196] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(16, 16, _5180) >> 14) + 131072, 8, block.timestamp
                                        else:
                                            if uint16(sha3(mem[_5178 + 32 len mem[_5178]])) < 9177:
                                                mem[_5177 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5177 + 100] = ext_call.return_data[0]
                                                mem[_5177 + 132] = (Mask(16, 16, _5180) >> 16) + 16384
                                                mem[_5177 + 164] = 4
                                                mem[_5177 + 196] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(16, 16, _5180) >> 16) + 16384, 4, block.timestamp
                                            else:
                                                mem[64] = _5177 + 160
                                                mem[_5177 + 96] = 26
                                                mem[_5177 + 128] = 'SafeMath: division by zero'
                                                mem[_5177 + 160] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5177 + 164] = ext_call.return_data[0]
                                                if uint16(sha3(mem[_5178 + 32 len mem[_5178]])) >= 25561:
                                                    mem[_5177 + 196] = (Mask(8, 24, _5180) >> 24) + 1
                                                    mem[_5177 + 228] = 1
                                                    mem[_5177 + 260] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(8, 24, _5180) >> 24) + 1, 1, block.timestamp
                                                else:
                                                    mem[_5177 + 196] = (Mask(13, 19, _5180) >> 19) + 512
                                                    mem[_5177 + 228] = 2
                                                    mem[_5177 + 260] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(13, 19, _5180) >> 19) + 512, 2, block.timestamp
                                else:
                                    mem[_5177 + 96] = 30
                                    mem[_5177 + 128] = 'SafeMath: subtraction overflow'
                                    if uint64(ext_call.return_data[0]) >> 192 > 30:
                                        mem[_5177 + 160] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[_5177 + 164] = 32
                                        idx = 32
                                        while idx < 30:
                                            mem[idx + _5177 + 228] = mem[idx + _5177 + 128]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    mem[64] = _5177 + 224
                                    mem[_5177 + 160] = 26
                                    mem[_5177 + 192] = 'SafeMath: division by zero'
                                    if not -(uint64(ext_call.return_data[0]) >> 192) + 30:
                                        mem[_5177 + 224] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[_5177 + 228] = 32
                                        idx = 0
                                        while idx < 26:
                                            mem[idx + _5177 + 292] = mem[idx + _5177 + 192]
                                            idx = idx + 32
                                            continue 
                                        mem[_5177 + 292] = mem[_5177 + 298 len 26]
                                        revert with 0, 32, 26, mem[_5177 + 292]
                                    if uint16(_5180) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 656:
                                        if not Mask(16, 16, _5180) >> 16:
                                            mem[_5177 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5177 + 228] = ext_call.return_data[0]
                                            mem[_5177 + 260] = 524288
                                            mem[_5177 + 292] = 16
                                            mem[_5177 + 324] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 524288, 16, block.timestamp
                                        else:
                                            if Mask(16, 16, _5180) >> 13 / Mask(16, 16, _5180) >> 16 != 8:
                                                revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5177 + 325 len 31]
                                            mem[_5177 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5177 + 228] = ext_call.return_data[0]
                                            mem[_5177 + 260] = (Mask(16, 16, _5180) >> 13) + 524288
                                            mem[_5177 + 292] = 16
                                            mem[_5177 + 324] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(16, 16, _5180) >> 13) + 524288, 16, block.timestamp
                                    else:
                                        if uint16(_5180) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 2623:
                                            if not Mask(16, 16, _5180) >> 16:
                                                mem[_5177 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5177 + 228] = ext_call.return_data[0]
                                                mem[_5177 + 260] = 131072
                                                mem[_5177 + 292] = 8
                                                mem[_5177 + 324] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 131072, 8, block.timestamp
                                            else:
                                                if Mask(16, 16, _5180) >> 14 / Mask(16, 16, _5180) >> 16 != 4:
                                                    revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5177 + 325 len 31]
                                                mem[_5177 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5177 + 228] = ext_call.return_data[0]
                                                mem[_5177 + 260] = (Mask(16, 16, _5180) >> 14) + 131072
                                                mem[_5177 + 292] = 8
                                                mem[_5177 + 324] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(16, 16, _5180) >> 14) + 131072, 8, block.timestamp
                                        else:
                                            if uint16(_5180) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 9177:
                                                mem[_5177 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5177 + 228] = ext_call.return_data[0]
                                                mem[_5177 + 260] = (Mask(16, 16, _5180) >> 16) + 16384
                                                mem[_5177 + 292] = 4
                                                mem[_5177 + 324] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(16, 16, _5180) >> 16) + 16384, 4, block.timestamp
                                            else:
                                                mem[64] = _5177 + 288
                                                mem[_5177 + 224] = 26
                                                mem[_5177 + 256] = 'SafeMath: division by zero'
                                                mem[_5177 + 288] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5177 + 292] = ext_call.return_data[0]
                                                if uint16(_5180) / -(uint64(ext_call.return_data[0]) >> 192) + 30 >= 25561:
                                                    mem[_5177 + 324] = (Mask(8, 24, _5180) >> 24) + 1
                                                    mem[_5177 + 356] = 1
                                                    mem[_5177 + 388] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(8, 24, _5180) >> 24) + 1, 1, block.timestamp
                                                else:
                                                    mem[_5177 + 324] = (Mask(13, 19, _5180) >> 19) + 512
                                                    mem[_5177 + 356] = 2
                                                    mem[_5177 + 388] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(13, 19, _5180) >> 19) + 512, 2, block.timestamp
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if ext_call.return_data[32] + block.timestamp < block.timestamp:
                            revert with 0, 'SafeMath: addition overflow'
                        if not arg5:
                            emit 0x29ed85fa: arg5, ext_call.return_data[32] + block.timestamp, arg2, ext_call.return_data[0]
                            mem[mem[64]] = 0x9a43573c00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = arg1
                            mem[mem[64] + 36] = ext_call.return_data[0]
                            mem[mem[64] + 68] = ext_call.return_data[32] + block.timestamp
                            require ext_code.size(erc721ContractAddress)
                            call erc721ContractAddress.transferNewToken(bytes32 arg1, uint256 arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args arg1, ext_call.return_data[0], ext_call.return_data[32] + block.timestamp
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if not arg2:
                                mem[0] = cd[((32 * idx) + arg4 + 36)]
                                mem[32] = sha3(arg3, 17)
                                if not stor17[arg3][cd[((32 * idx) + arg4 + 36)]]:
                                    revert with 0, 'collectible must be on sale'
                                if ext_call.return_data[64]:
                                    mem[mem[64]] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = ext_call.return_data[0]
                                    mem[mem[64] + 36] = ext_call.return_data[64]
                                    mem[mem[64] + 68] = 0
                                    mem[mem[64] + 100] = block.timestamp
                                    require ext_code.size(erc721ContractAddress)
                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], ext_call.return_data[64], 0, block.timestamp
                                else:
                                    _5499 = mem[64]
                                    mem[mem[64] + 32] = ext_call.return_data[0]
                                    mem[mem[64] + 64] = block.timestamp
                                    _5500 = mem[64]
                                    mem[mem[64]] = 64
                                    mem[64] = mem[64] + 96
                                    _5502 = sha3(mem[_5500 + 32 len mem[_5500]])
                                    if uint64(ext_call.return_data[0]) >> 192 >= 30:
                                        if uint16(sha3(mem[_5500 + 32 len mem[_5500]])) < 656:
                                            if not Mask(16, 16, sha3(mem[_5500 + 32 len mem[_5500]])) >> 16:
                                                mem[_5499 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5499 + 100] = ext_call.return_data[0]
                                                mem[_5499 + 132] = 524288
                                                mem[_5499 + 164] = 16
                                                mem[_5499 + 196] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 524288, 16, block.timestamp
                                            else:
                                                if Mask(16, 16, sha3(mem[_5500 + 32 len mem[_5500]])) >> 13 / Mask(16, 16, sha3(mem[_5500 + 32 len mem[_5500]])) >> 16 != 8:
                                                    revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5499 + 197 len 31]
                                                mem[_5499 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5499 + 100] = ext_call.return_data[0]
                                                mem[_5499 + 132] = (Mask(16, 16, _5502) >> 13) + 524288
                                                mem[_5499 + 164] = 16
                                                mem[_5499 + 196] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(16, 16, _5502) >> 13) + 524288, 16, block.timestamp
                                        else:
                                            if uint16(sha3(mem[_5500 + 32 len mem[_5500]])) < 2623:
                                                if not Mask(16, 16, sha3(mem[_5500 + 32 len mem[_5500]])) >> 16:
                                                    mem[_5499 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5499 + 100] = ext_call.return_data[0]
                                                    mem[_5499 + 132] = 131072
                                                    mem[_5499 + 164] = 8
                                                    mem[_5499 + 196] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], 131072, 8, block.timestamp
                                                else:
                                                    if Mask(16, 16, sha3(mem[_5500 + 32 len mem[_5500]])) >> 14 / Mask(16, 16, sha3(mem[_5500 + 32 len mem[_5500]])) >> 16 != 4:
                                                        revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5499 + 197 len 31]
                                                    mem[_5499 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5499 + 100] = ext_call.return_data[0]
                                                    mem[_5499 + 132] = (Mask(16, 16, _5502) >> 14) + 131072
                                                    mem[_5499 + 164] = 8
                                                    mem[_5499 + 196] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(16, 16, _5502) >> 14) + 131072, 8, block.timestamp
                                            else:
                                                if uint16(sha3(mem[_5500 + 32 len mem[_5500]])) < 9177:
                                                    mem[_5499 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5499 + 100] = ext_call.return_data[0]
                                                    mem[_5499 + 132] = (Mask(16, 16, _5502) >> 16) + 16384
                                                    mem[_5499 + 164] = 4
                                                    mem[_5499 + 196] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(16, 16, _5502) >> 16) + 16384, 4, block.timestamp
                                                else:
                                                    mem[64] = _5499 + 160
                                                    mem[_5499 + 96] = 26
                                                    mem[_5499 + 128] = 'SafeMath: division by zero'
                                                    mem[_5499 + 160] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5499 + 164] = ext_call.return_data[0]
                                                    if uint16(sha3(mem[_5500 + 32 len mem[_5500]])) >= 25561:
                                                        mem[_5499 + 196] = (Mask(8, 24, _5502) >> 24) + 1
                                                        mem[_5499 + 228] = 1
                                                        mem[_5499 + 260] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(8, 24, _5502) >> 24) + 1, 1, block.timestamp
                                                    else:
                                                        mem[_5499 + 196] = (Mask(13, 19, _5502) >> 19) + 512
                                                        mem[_5499 + 228] = 2
                                                        mem[_5499 + 260] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(13, 19, _5502) >> 19) + 512, 2, block.timestamp
                                    else:
                                        mem[_5499 + 96] = 30
                                        mem[_5499 + 128] = 'SafeMath: subtraction overflow'
                                        if uint64(ext_call.return_data[0]) >> 192 > 30:
                                            mem[_5499 + 160] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[_5499 + 164] = 32
                                            idx = 32
                                            while idx < 30:
                                                mem[idx + _5499 + 228] = mem[idx + _5499 + 128]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        mem[64] = _5499 + 224
                                        mem[_5499 + 160] = 26
                                        mem[_5499 + 192] = 'SafeMath: division by zero'
                                        if not -(uint64(ext_call.return_data[0]) >> 192) + 30:
                                            mem[_5499 + 224] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[_5499 + 228] = 32
                                            idx = 0
                                            while idx < 26:
                                                mem[idx + _5499 + 292] = mem[idx + _5499 + 192]
                                                idx = idx + 32
                                                continue 
                                            mem[_5499 + 292] = mem[_5499 + 298 len 26]
                                            revert with 0, 32, 26, mem[_5499 + 292]
                                        if uint16(_5502) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 656:
                                            if not Mask(16, 16, _5502) >> 16:
                                                mem[_5499 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5499 + 228] = ext_call.return_data[0]
                                                mem[_5499 + 260] = 524288
                                                mem[_5499 + 292] = 16
                                                mem[_5499 + 324] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 524288, 16, block.timestamp
                                            else:
                                                if Mask(16, 16, _5502) >> 13 / Mask(16, 16, _5502) >> 16 != 8:
                                                    revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5499 + 325 len 31]
                                                mem[_5499 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5499 + 228] = ext_call.return_data[0]
                                                mem[_5499 + 260] = (Mask(16, 16, _5502) >> 13) + 524288
                                                mem[_5499 + 292] = 16
                                                mem[_5499 + 324] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(16, 16, _5502) >> 13) + 524288, 16, block.timestamp
                                        else:
                                            if uint16(_5502) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 2623:
                                                if not Mask(16, 16, _5502) >> 16:
                                                    mem[_5499 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5499 + 228] = ext_call.return_data[0]
                                                    mem[_5499 + 260] = 131072
                                                    mem[_5499 + 292] = 8
                                                    mem[_5499 + 324] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], 131072, 8, block.timestamp
                                                else:
                                                    if Mask(16, 16, _5502) >> 14 / Mask(16, 16, _5502) >> 16 != 4:
                                                        revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5499 + 325 len 31]
                                                    mem[_5499 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5499 + 228] = ext_call.return_data[0]
                                                    mem[_5499 + 260] = (Mask(16, 16, _5502) >> 14) + 131072
                                                    mem[_5499 + 292] = 8
                                                    mem[_5499 + 324] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(16, 16, _5502) >> 14) + 131072, 8, block.timestamp
                                            else:
                                                if uint16(_5502) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 9177:
                                                    mem[_5499 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5499 + 228] = ext_call.return_data[0]
                                                    mem[_5499 + 260] = (Mask(16, 16, _5502) >> 16) + 16384
                                                    mem[_5499 + 292] = 4
                                                    mem[_5499 + 324] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(16, 16, _5502) >> 16) + 16384, 4, block.timestamp
                                                else:
                                                    mem[64] = _5499 + 288
                                                    mem[_5499 + 224] = 26
                                                    mem[_5499 + 256] = 'SafeMath: division by zero'
                                                    mem[_5499 + 288] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5499 + 292] = ext_call.return_data[0]
                                                    if uint16(_5502) / -(uint64(ext_call.return_data[0]) >> 192) + 30 >= 25561:
                                                        mem[_5499 + 324] = (Mask(8, 24, _5502) >> 24) + 1
                                                        mem[_5499 + 356] = 1
                                                        mem[_5499 + 388] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(8, 24, _5502) >> 24) + 1, 1, block.timestamp
                                                    else:
                                                        mem[_5499 + 324] = (Mask(13, 19, _5502) >> 19) + 512
                                                        mem[_5499 + 356] = 2
                                                        mem[_5499 + 388] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(13, 19, _5502) >> 19) + 512, 2, block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                        else:
                            mem[32] = sha3(arg2, 19)
                            purchaseIdtoTokenIds[arg2][arg5].field_0++
                            mem[0] = sha3(arg5, sha3(arg2, 19))
                            purchaseIdtoTokenIds[arg2][arg5][purchaseIdtoTokenIds[arg2][arg5].field_0].field_0 = ext_call.return_data[0]
                            emit 0x29ed85fa: arg5, ext_call.return_data[32] + block.timestamp, arg2, ext_call.return_data[0]
                            mem[mem[64]] = 0x9a43573c00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = arg1
                            mem[mem[64] + 36] = ext_call.return_data[0]
                            mem[mem[64] + 68] = ext_call.return_data[32] + block.timestamp
                            require ext_code.size(erc721ContractAddress)
                            call erc721ContractAddress.transferNewToken(bytes32 arg1, uint256 arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args arg1, ext_call.return_data[0], ext_call.return_data[32] + block.timestamp
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if not arg2:
                                mem[0] = cd[((32 * idx) + arg4 + 36)]
                                mem[32] = sha3(arg3, 17)
                                if not stor17[arg3][cd[((32 * idx) + arg4 + 36)]]:
                                    revert with 0, 'collectible must be on sale'
                                if ext_call.return_data[64]:
                                    mem[mem[64]] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = ext_call.return_data[0]
                                    mem[mem[64] + 36] = ext_call.return_data[64]
                                    mem[mem[64] + 68] = 0
                                    mem[mem[64] + 100] = block.timestamp
                                    require ext_code.size(erc721ContractAddress)
                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], ext_call.return_data[64], 0, block.timestamp
                                else:
                                    _5587 = mem[64]
                                    mem[mem[64] + 32] = ext_call.return_data[0]
                                    mem[mem[64] + 64] = block.timestamp
                                    _5588 = mem[64]
                                    mem[mem[64]] = 64
                                    mem[64] = mem[64] + 96
                                    _5590 = sha3(mem[_5588 + 32 len mem[_5588]])
                                    if uint64(ext_call.return_data[0]) >> 192 >= 30:
                                        if uint16(sha3(mem[_5588 + 32 len mem[_5588]])) < 656:
                                            if not Mask(16, 16, sha3(mem[_5588 + 32 len mem[_5588]])) >> 16:
                                                mem[_5587 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5587 + 100] = ext_call.return_data[0]
                                                mem[_5587 + 132] = 524288
                                                mem[_5587 + 164] = 16
                                                mem[_5587 + 196] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 524288, 16, block.timestamp
                                            else:
                                                if Mask(16, 16, sha3(mem[_5588 + 32 len mem[_5588]])) >> 13 / Mask(16, 16, sha3(mem[_5588 + 32 len mem[_5588]])) >> 16 != 8:
                                                    revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5587 + 197 len 31]
                                                mem[_5587 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5587 + 100] = ext_call.return_data[0]
                                                mem[_5587 + 132] = (Mask(16, 16, _5590) >> 13) + 524288
                                                mem[_5587 + 164] = 16
                                                mem[_5587 + 196] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(16, 16, _5590) >> 13) + 524288, 16, block.timestamp
                                        else:
                                            if uint16(sha3(mem[_5588 + 32 len mem[_5588]])) < 2623:
                                                if not Mask(16, 16, sha3(mem[_5588 + 32 len mem[_5588]])) >> 16:
                                                    mem[_5587 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5587 + 100] = ext_call.return_data[0]
                                                    mem[_5587 + 132] = 131072
                                                    mem[_5587 + 164] = 8
                                                    mem[_5587 + 196] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], 131072, 8, block.timestamp
                                                else:
                                                    if Mask(16, 16, sha3(mem[_5588 + 32 len mem[_5588]])) >> 14 / Mask(16, 16, sha3(mem[_5588 + 32 len mem[_5588]])) >> 16 != 4:
                                                        revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5587 + 197 len 31]
                                                    mem[_5587 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5587 + 100] = ext_call.return_data[0]
                                                    mem[_5587 + 132] = (Mask(16, 16, _5590) >> 14) + 131072
                                                    mem[_5587 + 164] = 8
                                                    mem[_5587 + 196] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(16, 16, _5590) >> 14) + 131072, 8, block.timestamp
                                            else:
                                                if uint16(sha3(mem[_5588 + 32 len mem[_5588]])) < 9177:
                                                    mem[_5587 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5587 + 100] = ext_call.return_data[0]
                                                    mem[_5587 + 132] = (Mask(16, 16, _5590) >> 16) + 16384
                                                    mem[_5587 + 164] = 4
                                                    mem[_5587 + 196] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(16, 16, _5590) >> 16) + 16384, 4, block.timestamp
                                                else:
                                                    mem[64] = _5587 + 160
                                                    mem[_5587 + 96] = 26
                                                    mem[_5587 + 128] = 'SafeMath: division by zero'
                                                    mem[_5587 + 160] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5587 + 164] = ext_call.return_data[0]
                                                    if uint16(sha3(mem[_5588 + 32 len mem[_5588]])) >= 25561:
                                                        mem[_5587 + 196] = (Mask(8, 24, _5590) >> 24) + 1
                                                        mem[_5587 + 228] = 1
                                                        mem[_5587 + 260] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(8, 24, _5590) >> 24) + 1, 1, block.timestamp
                                                    else:
                                                        mem[_5587 + 196] = (Mask(13, 19, _5590) >> 19) + 512
                                                        mem[_5587 + 228] = 2
                                                        mem[_5587 + 260] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(13, 19, _5590) >> 19) + 512, 2, block.timestamp
                                    else:
                                        mem[_5587 + 96] = 30
                                        mem[_5587 + 128] = 'SafeMath: subtraction overflow'
                                        if uint64(ext_call.return_data[0]) >> 192 > 30:
                                            mem[_5587 + 160] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[_5587 + 164] = 32
                                            idx = 32
                                            while idx < 30:
                                                mem[idx + _5587 + 228] = mem[idx + _5587 + 128]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        mem[64] = _5587 + 224
                                        mem[_5587 + 160] = 26
                                        mem[_5587 + 192] = 'SafeMath: division by zero'
                                        if not -(uint64(ext_call.return_data[0]) >> 192) + 30:
                                            mem[_5587 + 224] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[_5587 + 228] = 32
                                            idx = 0
                                            while idx < 26:
                                                mem[idx + _5587 + 292] = mem[idx + _5587 + 192]
                                                idx = idx + 32
                                                continue 
                                            mem[_5587 + 292] = mem[_5587 + 298 len 26]
                                            revert with 0, 32, 26, mem[_5587 + 292]
                                        if uint16(_5590) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 656:
                                            if not Mask(16, 16, _5590) >> 16:
                                                mem[_5587 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5587 + 228] = ext_call.return_data[0]
                                                mem[_5587 + 260] = 524288
                                                mem[_5587 + 292] = 16
                                                mem[_5587 + 324] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 524288, 16, block.timestamp
                                            else:
                                                if Mask(16, 16, _5590) >> 13 / Mask(16, 16, _5590) >> 16 != 8:
                                                    revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5587 + 325 len 31]
                                                mem[_5587 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5587 + 228] = ext_call.return_data[0]
                                                mem[_5587 + 260] = (Mask(16, 16, _5590) >> 13) + 524288
                                                mem[_5587 + 292] = 16
                                                mem[_5587 + 324] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(16, 16, _5590) >> 13) + 524288, 16, block.timestamp
                                        else:
                                            if uint16(_5590) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 2623:
                                                if not Mask(16, 16, _5590) >> 16:
                                                    mem[_5587 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5587 + 228] = ext_call.return_data[0]
                                                    mem[_5587 + 260] = 131072
                                                    mem[_5587 + 292] = 8
                                                    mem[_5587 + 324] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], 131072, 8, block.timestamp
                                                else:
                                                    if Mask(16, 16, _5590) >> 14 / Mask(16, 16, _5590) >> 16 != 4:
                                                        revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5587 + 325 len 31]
                                                    mem[_5587 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5587 + 228] = ext_call.return_data[0]
                                                    mem[_5587 + 260] = (Mask(16, 16, _5590) >> 14) + 131072
                                                    mem[_5587 + 292] = 8
                                                    mem[_5587 + 324] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(16, 16, _5590) >> 14) + 131072, 8, block.timestamp
                                            else:
                                                if uint16(_5590) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 9177:
                                                    mem[_5587 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5587 + 228] = ext_call.return_data[0]
                                                    mem[_5587 + 260] = (Mask(16, 16, _5590) >> 16) + 16384
                                                    mem[_5587 + 292] = 4
                                                    mem[_5587 + 324] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(16, 16, _5590) >> 16) + 16384, 4, block.timestamp
                                                else:
                                                    mem[64] = _5587 + 288
                                                    mem[_5587 + 224] = 26
                                                    mem[_5587 + 256] = 'SafeMath: division by zero'
                                                    mem[_5587 + 288] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5587 + 292] = ext_call.return_data[0]
                                                    if uint16(_5590) / -(uint64(ext_call.return_data[0]) >> 192) + 30 >= 25561:
                                                        mem[_5587 + 324] = (Mask(8, 24, _5590) >> 24) + 1
                                                        mem[_5587 + 356] = 1
                                                        mem[_5587 + 388] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(8, 24, _5590) >> 24) + 1, 1, block.timestamp
                                                    else:
                                                        mem[_5587 + 324] = (Mask(13, 19, _5590) >> 19) + 512
                                                        mem[_5587 + 356] = 2
                                                        mem[_5587 + 388] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(13, 19, _5590) >> 19) + 512, 2, block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                    require idx < mem[96]
                    mem[(32 * idx) + 128] = ext_call.return_data[0]
                    idx = idx + 1
                    continue 
        else:
            if gasGrantAmount <= 0:
                mem[100] = msg.sender
                mem[132] = bool(ext_call.return_data[0])
                mem[164] = arg2
                require ext_code.size(gameContractAddress)
                staticcall gameContractAddress.isValidCaller(address arg1, bool arg2, uint256 arg3) with:
                        gas gas_remaining wei
                       args msg.sender, bool(ext_call.return_data[0]), arg2
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not ext_call.return_data[0]:
                    revert with 0, 'admin, operator, or worker'
                require arg4.length <= test266151307()
                mem[96] = arg4.length
                mem[64] = (32 * arg4.length) + 128
                if not arg4.length:
                    idx = 0
                    while idx < arg4.length:
                        require ext_code.size(gameContractAddress)
                        call gameContractAddress.createTokenFromCard(uint256 arg1, uint256 arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args arg2, arg3, cd[((32 * idx) + arg4 + 36)]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 96
                        if arg5 == -1:
                            emit 0x29ed85fa: arg5, 0, arg2, ext_call.return_data[0]
                            mem[mem[64]] = 0x9a43573c00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = arg1
                            mem[mem[64] + 36] = ext_call.return_data[0]
                            mem[mem[64] + 68] = 0
                            require ext_code.size(erc721ContractAddress)
                            call erc721ContractAddress.transferNewToken(bytes32 arg1, uint256 arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args arg1, ext_call.return_data[0], 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if not arg2:
                                mem[0] = cd[((32 * idx) + arg4 + 36)]
                                mem[32] = sha3(arg3, 17)
                                if not stor17[arg3][cd[((32 * idx) + arg4 + 36)]]:
                                    revert with 0, 'collectible must be on sale'
                                if ext_call.return_data[64]:
                                    mem[mem[64]] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = ext_call.return_data[0]
                                    mem[mem[64] + 36] = ext_call.return_data[64]
                                    mem[mem[64] + 68] = 0
                                    mem[mem[64] + 100] = block.timestamp
                                    require ext_code.size(erc721ContractAddress)
                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], ext_call.return_data[64], 0, block.timestamp
                                else:
                                    _5181 = mem[64]
                                    mem[mem[64] + 32] = ext_call.return_data[0]
                                    mem[mem[64] + 64] = block.timestamp
                                    _5182 = mem[64]
                                    mem[mem[64]] = 64
                                    mem[64] = mem[64] + 96
                                    _5184 = sha3(mem[_5182 + 32 len mem[_5182]])
                                    if uint64(ext_call.return_data[0]) >> 192 >= 30:
                                        if uint16(sha3(mem[_5182 + 32 len mem[_5182]])) < 656:
                                            if not Mask(16, 16, sha3(mem[_5182 + 32 len mem[_5182]])) >> 16:
                                                mem[_5181 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5181 + 100] = ext_call.return_data[0]
                                                mem[_5181 + 132] = 524288
                                                mem[_5181 + 164] = 16
                                                mem[_5181 + 196] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 524288, 16, block.timestamp
                                            else:
                                                if Mask(16, 16, sha3(mem[_5182 + 32 len mem[_5182]])) >> 13 / Mask(16, 16, sha3(mem[_5182 + 32 len mem[_5182]])) >> 16 != 8:
                                                    revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5181 + 197 len 31]
                                                mem[_5181 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5181 + 100] = ext_call.return_data[0]
                                                mem[_5181 + 132] = (Mask(16, 16, _5184) >> 13) + 524288
                                                mem[_5181 + 164] = 16
                                                mem[_5181 + 196] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(16, 16, _5184) >> 13) + 524288, 16, block.timestamp
                                        else:
                                            if uint16(sha3(mem[_5182 + 32 len mem[_5182]])) < 2623:
                                                if not Mask(16, 16, sha3(mem[_5182 + 32 len mem[_5182]])) >> 16:
                                                    mem[_5181 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5181 + 100] = ext_call.return_data[0]
                                                    mem[_5181 + 132] = 131072
                                                    mem[_5181 + 164] = 8
                                                    mem[_5181 + 196] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], 131072, 8, block.timestamp
                                                else:
                                                    if Mask(16, 16, sha3(mem[_5182 + 32 len mem[_5182]])) >> 14 / Mask(16, 16, sha3(mem[_5182 + 32 len mem[_5182]])) >> 16 != 4:
                                                        revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5181 + 197 len 31]
                                                    mem[_5181 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5181 + 100] = ext_call.return_data[0]
                                                    mem[_5181 + 132] = (Mask(16, 16, _5184) >> 14) + 131072
                                                    mem[_5181 + 164] = 8
                                                    mem[_5181 + 196] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(16, 16, _5184) >> 14) + 131072, 8, block.timestamp
                                            else:
                                                if uint16(sha3(mem[_5182 + 32 len mem[_5182]])) < 9177:
                                                    mem[_5181 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5181 + 100] = ext_call.return_data[0]
                                                    mem[_5181 + 132] = (Mask(16, 16, _5184) >> 16) + 16384
                                                    mem[_5181 + 164] = 4
                                                    mem[_5181 + 196] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(16, 16, _5184) >> 16) + 16384, 4, block.timestamp
                                                else:
                                                    mem[64] = _5181 + 160
                                                    mem[_5181 + 96] = 26
                                                    mem[_5181 + 128] = 'SafeMath: division by zero'
                                                    mem[_5181 + 160] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5181 + 164] = ext_call.return_data[0]
                                                    if uint16(sha3(mem[_5182 + 32 len mem[_5182]])) >= 25561:
                                                        mem[_5181 + 196] = (Mask(8, 24, _5184) >> 24) + 1
                                                        mem[_5181 + 228] = 1
                                                        mem[_5181 + 260] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(8, 24, _5184) >> 24) + 1, 1, block.timestamp
                                                    else:
                                                        mem[_5181 + 196] = (Mask(13, 19, _5184) >> 19) + 512
                                                        mem[_5181 + 228] = 2
                                                        mem[_5181 + 260] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(13, 19, _5184) >> 19) + 512, 2, block.timestamp
                                    else:
                                        mem[_5181 + 96] = 30
                                        mem[_5181 + 128] = 'SafeMath: subtraction overflow'
                                        if uint64(ext_call.return_data[0]) >> 192 > 30:
                                            mem[_5181 + 160] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[_5181 + 164] = 32
                                            idx = 32
                                            while idx < 30:
                                                mem[idx + _5181 + 228] = mem[idx + _5181 + 128]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        mem[64] = _5181 + 224
                                        mem[_5181 + 160] = 26
                                        mem[_5181 + 192] = 'SafeMath: division by zero'
                                        if not -(uint64(ext_call.return_data[0]) >> 192) + 30:
                                            mem[_5181 + 224] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[_5181 + 228] = 32
                                            idx = 0
                                            while idx < 26:
                                                mem[idx + _5181 + 292] = mem[idx + _5181 + 192]
                                                idx = idx + 32
                                                continue 
                                            mem[_5181 + 292] = mem[_5181 + 298 len 26]
                                            revert with 0, 32, 26, mem[_5181 + 292]
                                        if uint16(_5184) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 656:
                                            if not Mask(16, 16, _5184) >> 16:
                                                mem[_5181 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5181 + 228] = ext_call.return_data[0]
                                                mem[_5181 + 260] = 524288
                                                mem[_5181 + 292] = 16
                                                mem[_5181 + 324] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 524288, 16, block.timestamp
                                            else:
                                                if Mask(16, 16, _5184) >> 13 / Mask(16, 16, _5184) >> 16 != 8:
                                                    revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5181 + 325 len 31]
                                                mem[_5181 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5181 + 228] = ext_call.return_data[0]
                                                mem[_5181 + 260] = (Mask(16, 16, _5184) >> 13) + 524288
                                                mem[_5181 + 292] = 16
                                                mem[_5181 + 324] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(16, 16, _5184) >> 13) + 524288, 16, block.timestamp
                                        else:
                                            if uint16(_5184) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 2623:
                                                if not Mask(16, 16, _5184) >> 16:
                                                    mem[_5181 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5181 + 228] = ext_call.return_data[0]
                                                    mem[_5181 + 260] = 131072
                                                    mem[_5181 + 292] = 8
                                                    mem[_5181 + 324] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], 131072, 8, block.timestamp
                                                else:
                                                    if Mask(16, 16, _5184) >> 14 / Mask(16, 16, _5184) >> 16 != 4:
                                                        revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5181 + 325 len 31]
                                                    mem[_5181 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5181 + 228] = ext_call.return_data[0]
                                                    mem[_5181 + 260] = (Mask(16, 16, _5184) >> 14) + 131072
                                                    mem[_5181 + 292] = 8
                                                    mem[_5181 + 324] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(16, 16, _5184) >> 14) + 131072, 8, block.timestamp
                                            else:
                                                if uint16(_5184) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 9177:
                                                    mem[_5181 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5181 + 228] = ext_call.return_data[0]
                                                    mem[_5181 + 260] = (Mask(16, 16, _5184) >> 16) + 16384
                                                    mem[_5181 + 292] = 4
                                                    mem[_5181 + 324] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(16, 16, _5184) >> 16) + 16384, 4, block.timestamp
                                                else:
                                                    mem[64] = _5181 + 288
                                                    mem[_5181 + 224] = 26
                                                    mem[_5181 + 256] = 'SafeMath: division by zero'
                                                    mem[_5181 + 288] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5181 + 292] = ext_call.return_data[0]
                                                    if uint16(_5184) / -(uint64(ext_call.return_data[0]) >> 192) + 30 >= 25561:
                                                        mem[_5181 + 324] = (Mask(8, 24, _5184) >> 24) + 1
                                                        mem[_5181 + 356] = 1
                                                        mem[_5181 + 388] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(8, 24, _5184) >> 24) + 1, 1, block.timestamp
                                                    else:
                                                        mem[_5181 + 324] = (Mask(13, 19, _5184) >> 19) + 512
                                                        mem[_5181 + 356] = 2
                                                        mem[_5181 + 388] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(13, 19, _5184) >> 19) + 512, 2, block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if ext_call.return_data[32] + block.timestamp < block.timestamp:
                                revert with 0, 'SafeMath: addition overflow'
                            if not arg5:
                                emit 0x29ed85fa: arg5, ext_call.return_data[32] + block.timestamp, arg2, ext_call.return_data[0]
                                mem[mem[64]] = 0x9a43573c00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = arg1
                                mem[mem[64] + 36] = ext_call.return_data[0]
                                mem[mem[64] + 68] = ext_call.return_data[32] + block.timestamp
                                require ext_code.size(erc721ContractAddress)
                                call erc721ContractAddress.transferNewToken(bytes32 arg1, uint256 arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args arg1, ext_call.return_data[0], ext_call.return_data[32] + block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if not arg2:
                                    mem[0] = cd[((32 * idx) + arg4 + 36)]
                                    mem[32] = sha3(arg3, 17)
                                    if not stor17[arg3][cd[((32 * idx) + arg4 + 36)]]:
                                        revert with 0, 'collectible must be on sale'
                                    if ext_call.return_data[64]:
                                        mem[mem[64]] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = ext_call.return_data[0]
                                        mem[mem[64] + 36] = ext_call.return_data[64]
                                        mem[mem[64] + 68] = 0
                                        mem[mem[64] + 100] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], ext_call.return_data[64], 0, block.timestamp
                                    else:
                                        _5504 = mem[64]
                                        mem[mem[64] + 32] = ext_call.return_data[0]
                                        mem[mem[64] + 64] = block.timestamp
                                        _5505 = mem[64]
                                        mem[mem[64]] = 64
                                        mem[64] = mem[64] + 96
                                        _5507 = sha3(mem[_5505 + 32 len mem[_5505]])
                                        if uint64(ext_call.return_data[0]) >> 192 >= 30:
                                            if uint16(sha3(mem[_5505 + 32 len mem[_5505]])) < 656:
                                                if not Mask(16, 16, sha3(mem[_5505 + 32 len mem[_5505]])) >> 16:
                                                    mem[_5504 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5504 + 100] = ext_call.return_data[0]
                                                    mem[_5504 + 132] = 524288
                                                    mem[_5504 + 164] = 16
                                                    mem[_5504 + 196] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], 524288, 16, block.timestamp
                                                else:
                                                    if Mask(16, 16, sha3(mem[_5505 + 32 len mem[_5505]])) >> 13 / Mask(16, 16, sha3(mem[_5505 + 32 len mem[_5505]])) >> 16 != 8:
                                                        revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5504 + 197 len 31]
                                                    mem[_5504 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5504 + 100] = ext_call.return_data[0]
                                                    mem[_5504 + 132] = (Mask(16, 16, _5507) >> 13) + 524288
                                                    mem[_5504 + 164] = 16
                                                    mem[_5504 + 196] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(16, 16, _5507) >> 13) + 524288, 16, block.timestamp
                                            else:
                                                if uint16(sha3(mem[_5505 + 32 len mem[_5505]])) < 2623:
                                                    if not Mask(16, 16, sha3(mem[_5505 + 32 len mem[_5505]])) >> 16:
                                                        mem[_5504 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5504 + 100] = ext_call.return_data[0]
                                                        mem[_5504 + 132] = 131072
                                                        mem[_5504 + 164] = 8
                                                        mem[_5504 + 196] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], 131072, 8, block.timestamp
                                                    else:
                                                        if Mask(16, 16, sha3(mem[_5505 + 32 len mem[_5505]])) >> 14 / Mask(16, 16, sha3(mem[_5505 + 32 len mem[_5505]])) >> 16 != 4:
                                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5504 + 197 len 31]
                                                        mem[_5504 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5504 + 100] = ext_call.return_data[0]
                                                        mem[_5504 + 132] = (Mask(16, 16, _5507) >> 14) + 131072
                                                        mem[_5504 + 164] = 8
                                                        mem[_5504 + 196] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(16, 16, _5507) >> 14) + 131072, 8, block.timestamp
                                                else:
                                                    if uint16(sha3(mem[_5505 + 32 len mem[_5505]])) < 9177:
                                                        mem[_5504 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5504 + 100] = ext_call.return_data[0]
                                                        mem[_5504 + 132] = (Mask(16, 16, _5507) >> 16) + 16384
                                                        mem[_5504 + 164] = 4
                                                        mem[_5504 + 196] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(16, 16, _5507) >> 16) + 16384, 4, block.timestamp
                                                    else:
                                                        mem[64] = _5504 + 160
                                                        mem[_5504 + 96] = 26
                                                        mem[_5504 + 128] = 'SafeMath: division by zero'
                                                        mem[_5504 + 160] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5504 + 164] = ext_call.return_data[0]
                                                        if uint16(sha3(mem[_5505 + 32 len mem[_5505]])) >= 25561:
                                                            mem[_5504 + 196] = (Mask(8, 24, _5507) >> 24) + 1
                                                            mem[_5504 + 228] = 1
                                                            mem[_5504 + 260] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], (Mask(8, 24, _5507) >> 24) + 1, 1, block.timestamp
                                                        else:
                                                            mem[_5504 + 196] = (Mask(13, 19, _5507) >> 19) + 512
                                                            mem[_5504 + 228] = 2
                                                            mem[_5504 + 260] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], (Mask(13, 19, _5507) >> 19) + 512, 2, block.timestamp
                                        else:
                                            mem[_5504 + 96] = 30
                                            mem[_5504 + 128] = 'SafeMath: subtraction overflow'
                                            if uint64(ext_call.return_data[0]) >> 192 > 30:
                                                mem[_5504 + 160] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[_5504 + 164] = 32
                                                idx = 32
                                                while idx < 30:
                                                    mem[idx + _5504 + 228] = mem[idx + _5504 + 128]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            mem[64] = _5504 + 224
                                            mem[_5504 + 160] = 26
                                            mem[_5504 + 192] = 'SafeMath: division by zero'
                                            if not -(uint64(ext_call.return_data[0]) >> 192) + 30:
                                                mem[_5504 + 224] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[_5504 + 228] = 32
                                                idx = 0
                                                while idx < 26:
                                                    mem[idx + _5504 + 292] = mem[idx + _5504 + 192]
                                                    idx = idx + 32
                                                    continue 
                                                mem[_5504 + 292] = mem[_5504 + 298 len 26]
                                                revert with 0, 32, 26, mem[_5504 + 292]
                                            if uint16(_5507) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 656:
                                                if not Mask(16, 16, _5507) >> 16:
                                                    mem[_5504 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5504 + 228] = ext_call.return_data[0]
                                                    mem[_5504 + 260] = 524288
                                                    mem[_5504 + 292] = 16
                                                    mem[_5504 + 324] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], 524288, 16, block.timestamp
                                                else:
                                                    if Mask(16, 16, _5507) >> 13 / Mask(16, 16, _5507) >> 16 != 8:
                                                        revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5504 + 325 len 31]
                                                    mem[_5504 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5504 + 228] = ext_call.return_data[0]
                                                    mem[_5504 + 260] = (Mask(16, 16, _5507) >> 13) + 524288
                                                    mem[_5504 + 292] = 16
                                                    mem[_5504 + 324] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(16, 16, _5507) >> 13) + 524288, 16, block.timestamp
                                            else:
                                                if uint16(_5507) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 2623:
                                                    if not Mask(16, 16, _5507) >> 16:
                                                        mem[_5504 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5504 + 228] = ext_call.return_data[0]
                                                        mem[_5504 + 260] = 131072
                                                        mem[_5504 + 292] = 8
                                                        mem[_5504 + 324] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], 131072, 8, block.timestamp
                                                    else:
                                                        if Mask(16, 16, _5507) >> 14 / Mask(16, 16, _5507) >> 16 != 4:
                                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5504 + 325 len 31]
                                                        mem[_5504 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5504 + 228] = ext_call.return_data[0]
                                                        mem[_5504 + 260] = (Mask(16, 16, _5507) >> 14) + 131072
                                                        mem[_5504 + 292] = 8
                                                        mem[_5504 + 324] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(16, 16, _5507) >> 14) + 131072, 8, block.timestamp
                                                else:
                                                    if uint16(_5507) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 9177:
                                                        mem[_5504 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5504 + 228] = ext_call.return_data[0]
                                                        mem[_5504 + 260] = (Mask(16, 16, _5507) >> 16) + 16384
                                                        mem[_5504 + 292] = 4
                                                        mem[_5504 + 324] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(16, 16, _5507) >> 16) + 16384, 4, block.timestamp
                                                    else:
                                                        mem[64] = _5504 + 288
                                                        mem[_5504 + 224] = 26
                                                        mem[_5504 + 256] = 'SafeMath: division by zero'
                                                        mem[_5504 + 288] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5504 + 292] = ext_call.return_data[0]
                                                        if uint16(_5507) / -(uint64(ext_call.return_data[0]) >> 192) + 30 >= 25561:
                                                            mem[_5504 + 324] = (Mask(8, 24, _5507) >> 24) + 1
                                                            mem[_5504 + 356] = 1
                                                            mem[_5504 + 388] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], (Mask(8, 24, _5507) >> 24) + 1, 1, block.timestamp
                                                        else:
                                                            mem[_5504 + 324] = (Mask(13, 19, _5507) >> 19) + 512
                                                            mem[_5504 + 356] = 2
                                                            mem[_5504 + 388] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], (Mask(13, 19, _5507) >> 19) + 512, 2, block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                            else:
                                mem[32] = sha3(arg2, 19)
                                purchaseIdtoTokenIds[arg2][arg5].field_0++
                                mem[0] = sha3(arg5, sha3(arg2, 19))
                                purchaseIdtoTokenIds[arg2][arg5][purchaseIdtoTokenIds[arg2][arg5].field_0].field_0 = ext_call.return_data[0]
                                emit 0x29ed85fa: arg5, ext_call.return_data[32] + block.timestamp, arg2, ext_call.return_data[0]
                                mem[mem[64]] = 0x9a43573c00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = arg1
                                mem[mem[64] + 36] = ext_call.return_data[0]
                                mem[mem[64] + 68] = ext_call.return_data[32] + block.timestamp
                                require ext_code.size(erc721ContractAddress)
                                call erc721ContractAddress.transferNewToken(bytes32 arg1, uint256 arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args arg1, ext_call.return_data[0], ext_call.return_data[32] + block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if not arg2:
                                    mem[0] = cd[((32 * idx) + arg4 + 36)]
                                    mem[32] = sha3(arg3, 17)
                                    if not stor17[arg3][cd[((32 * idx) + arg4 + 36)]]:
                                        revert with 0, 'collectible must be on sale'
                                    if ext_call.return_data[64]:
                                        mem[mem[64]] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = ext_call.return_data[0]
                                        mem[mem[64] + 36] = ext_call.return_data[64]
                                        mem[mem[64] + 68] = 0
                                        mem[mem[64] + 100] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], ext_call.return_data[64], 0, block.timestamp
                                    else:
                                        _5596 = mem[64]
                                        mem[mem[64] + 32] = ext_call.return_data[0]
                                        mem[mem[64] + 64] = block.timestamp
                                        _5597 = mem[64]
                                        mem[mem[64]] = 64
                                        mem[64] = mem[64] + 96
                                        _5599 = sha3(mem[_5597 + 32 len mem[_5597]])
                                        if uint64(ext_call.return_data[0]) >> 192 >= 30:
                                            if uint16(sha3(mem[_5597 + 32 len mem[_5597]])) < 656:
                                                if not Mask(16, 16, sha3(mem[_5597 + 32 len mem[_5597]])) >> 16:
                                                    mem[_5596 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5596 + 100] = ext_call.return_data[0]
                                                    mem[_5596 + 132] = 524288
                                                    mem[_5596 + 164] = 16
                                                    mem[_5596 + 196] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], 524288, 16, block.timestamp
                                                else:
                                                    if Mask(16, 16, sha3(mem[_5597 + 32 len mem[_5597]])) >> 13 / Mask(16, 16, sha3(mem[_5597 + 32 len mem[_5597]])) >> 16 != 8:
                                                        revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5596 + 197 len 31]
                                                    mem[_5596 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5596 + 100] = ext_call.return_data[0]
                                                    mem[_5596 + 132] = (Mask(16, 16, _5599) >> 13) + 524288
                                                    mem[_5596 + 164] = 16
                                                    mem[_5596 + 196] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(16, 16, _5599) >> 13) + 524288, 16, block.timestamp
                                            else:
                                                if uint16(sha3(mem[_5597 + 32 len mem[_5597]])) < 2623:
                                                    if not Mask(16, 16, sha3(mem[_5597 + 32 len mem[_5597]])) >> 16:
                                                        mem[_5596 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5596 + 100] = ext_call.return_data[0]
                                                        mem[_5596 + 132] = 131072
                                                        mem[_5596 + 164] = 8
                                                        mem[_5596 + 196] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], 131072, 8, block.timestamp
                                                    else:
                                                        if Mask(16, 16, sha3(mem[_5597 + 32 len mem[_5597]])) >> 14 / Mask(16, 16, sha3(mem[_5597 + 32 len mem[_5597]])) >> 16 != 4:
                                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5596 + 197 len 31]
                                                        mem[_5596 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5596 + 100] = ext_call.return_data[0]
                                                        mem[_5596 + 132] = (Mask(16, 16, _5599) >> 14) + 131072
                                                        mem[_5596 + 164] = 8
                                                        mem[_5596 + 196] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(16, 16, _5599) >> 14) + 131072, 8, block.timestamp
                                                else:
                                                    if uint16(sha3(mem[_5597 + 32 len mem[_5597]])) < 9177:
                                                        mem[_5596 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5596 + 100] = ext_call.return_data[0]
                                                        mem[_5596 + 132] = (Mask(16, 16, _5599) >> 16) + 16384
                                                        mem[_5596 + 164] = 4
                                                        mem[_5596 + 196] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(16, 16, _5599) >> 16) + 16384, 4, block.timestamp
                                                    else:
                                                        mem[64] = _5596 + 160
                                                        mem[_5596 + 96] = 26
                                                        mem[_5596 + 128] = 'SafeMath: division by zero'
                                                        mem[_5596 + 160] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5596 + 164] = ext_call.return_data[0]
                                                        if uint16(sha3(mem[_5597 + 32 len mem[_5597]])) >= 25561:
                                                            mem[_5596 + 196] = (Mask(8, 24, _5599) >> 24) + 1
                                                            mem[_5596 + 228] = 1
                                                            mem[_5596 + 260] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], (Mask(8, 24, _5599) >> 24) + 1, 1, block.timestamp
                                                        else:
                                                            mem[_5596 + 196] = (Mask(13, 19, _5599) >> 19) + 512
                                                            mem[_5596 + 228] = 2
                                                            mem[_5596 + 260] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], (Mask(13, 19, _5599) >> 19) + 512, 2, block.timestamp
                                        else:
                                            mem[_5596 + 96] = 30
                                            mem[_5596 + 128] = 'SafeMath: subtraction overflow'
                                            if uint64(ext_call.return_data[0]) >> 192 > 30:
                                                mem[_5596 + 160] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[_5596 + 164] = 32
                                                idx = 32
                                                while idx < 30:
                                                    mem[idx + _5596 + 228] = mem[idx + _5596 + 128]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            mem[64] = _5596 + 224
                                            mem[_5596 + 160] = 26
                                            mem[_5596 + 192] = 'SafeMath: division by zero'
                                            if not -(uint64(ext_call.return_data[0]) >> 192) + 30:
                                                mem[_5596 + 224] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[_5596 + 228] = 32
                                                idx = 0
                                                while idx < 26:
                                                    mem[idx + _5596 + 292] = mem[idx + _5596 + 192]
                                                    idx = idx + 32
                                                    continue 
                                                mem[_5596 + 292] = mem[_5596 + 298 len 26]
                                                revert with 0, 32, 26, mem[_5596 + 292]
                                            if uint16(_5599) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 656:
                                                if not Mask(16, 16, _5599) >> 16:
                                                    mem[_5596 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5596 + 228] = ext_call.return_data[0]
                                                    mem[_5596 + 260] = 524288
                                                    mem[_5596 + 292] = 16
                                                    mem[_5596 + 324] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], 524288, 16, block.timestamp
                                                else:
                                                    if Mask(16, 16, _5599) >> 13 / Mask(16, 16, _5599) >> 16 != 8:
                                                        revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5596 + 325 len 31]
                                                    mem[_5596 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5596 + 228] = ext_call.return_data[0]
                                                    mem[_5596 + 260] = (Mask(16, 16, _5599) >> 13) + 524288
                                                    mem[_5596 + 292] = 16
                                                    mem[_5596 + 324] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(16, 16, _5599) >> 13) + 524288, 16, block.timestamp
                                            else:
                                                if uint16(_5599) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 2623:
                                                    if not Mask(16, 16, _5599) >> 16:
                                                        mem[_5596 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5596 + 228] = ext_call.return_data[0]
                                                        mem[_5596 + 260] = 131072
                                                        mem[_5596 + 292] = 8
                                                        mem[_5596 + 324] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], 131072, 8, block.timestamp
                                                    else:
                                                        if Mask(16, 16, _5599) >> 14 / Mask(16, 16, _5599) >> 16 != 4:
                                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5596 + 325 len 31]
                                                        mem[_5596 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5596 + 228] = ext_call.return_data[0]
                                                        mem[_5596 + 260] = (Mask(16, 16, _5599) >> 14) + 131072
                                                        mem[_5596 + 292] = 8
                                                        mem[_5596 + 324] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(16, 16, _5599) >> 14) + 131072, 8, block.timestamp
                                                else:
                                                    if uint16(_5599) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 9177:
                                                        mem[_5596 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5596 + 228] = ext_call.return_data[0]
                                                        mem[_5596 + 260] = (Mask(16, 16, _5599) >> 16) + 16384
                                                        mem[_5596 + 292] = 4
                                                        mem[_5596 + 324] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(16, 16, _5599) >> 16) + 16384, 4, block.timestamp
                                                    else:
                                                        mem[64] = _5596 + 288
                                                        mem[_5596 + 224] = 26
                                                        mem[_5596 + 256] = 'SafeMath: division by zero'
                                                        mem[_5596 + 288] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5596 + 292] = ext_call.return_data[0]
                                                        if uint16(_5599) / -(uint64(ext_call.return_data[0]) >> 192) + 30 >= 25561:
                                                            mem[_5596 + 324] = (Mask(8, 24, _5599) >> 24) + 1
                                                            mem[_5596 + 356] = 1
                                                            mem[_5596 + 388] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], (Mask(8, 24, _5599) >> 24) + 1, 1, block.timestamp
                                                        else:
                                                            mem[_5596 + 324] = (Mask(13, 19, _5599) >> 19) + 512
                                                            mem[_5596 + 356] = 2
                                                            mem[_5596 + 388] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], (Mask(13, 19, _5599) >> 19) + 512, 2, block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                        require idx < mem[96]
                        mem[(32 * idx) + 128] = ext_call.return_data[0]
                        idx = idx + 1
                        continue 
                else:
                    mem[128 len 32 * arg4.length] = call.data[calldata.size len 32 * arg4.length]
                    idx = 0
                    while idx < arg4.length:
                        require ext_code.size(gameContractAddress)
                        call gameContractAddress.createTokenFromCard(uint256 arg1, uint256 arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args arg2, arg3, cd[((32 * idx) + arg4 + 36)]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 96
                        if arg5 == -1:
                            emit 0x29ed85fa: arg5, 0, arg2, ext_call.return_data[0]
                            mem[mem[64]] = 0x9a43573c00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = arg1
                            mem[mem[64] + 36] = ext_call.return_data[0]
                            mem[mem[64] + 68] = 0
                            require ext_code.size(erc721ContractAddress)
                            call erc721ContractAddress.transferNewToken(bytes32 arg1, uint256 arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args arg1, ext_call.return_data[0], 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if not arg2:
                                mem[0] = cd[((32 * idx) + arg4 + 36)]
                                mem[32] = sha3(arg3, 17)
                                if not stor17[arg3][cd[((32 * idx) + arg4 + 36)]]:
                                    revert with 0, 'collectible must be on sale'
                                if ext_call.return_data[64]:
                                    mem[mem[64]] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = ext_call.return_data[0]
                                    mem[mem[64] + 36] = ext_call.return_data[64]
                                    mem[mem[64] + 68] = 0
                                    mem[mem[64] + 100] = block.timestamp
                                    require ext_code.size(erc721ContractAddress)
                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], ext_call.return_data[64], 0, block.timestamp
                                else:
                                    _5185 = mem[64]
                                    mem[mem[64] + 32] = ext_call.return_data[0]
                                    mem[mem[64] + 64] = block.timestamp
                                    _5186 = mem[64]
                                    mem[mem[64]] = 64
                                    mem[64] = mem[64] + 96
                                    _5188 = sha3(mem[_5186 + 32 len mem[_5186]])
                                    if uint64(ext_call.return_data[0]) >> 192 >= 30:
                                        if uint16(sha3(mem[_5186 + 32 len mem[_5186]])) < 656:
                                            if not Mask(16, 16, sha3(mem[_5186 + 32 len mem[_5186]])) >> 16:
                                                mem[_5185 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5185 + 100] = ext_call.return_data[0]
                                                mem[_5185 + 132] = 524288
                                                mem[_5185 + 164] = 16
                                                mem[_5185 + 196] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 524288, 16, block.timestamp
                                            else:
                                                if Mask(16, 16, sha3(mem[_5186 + 32 len mem[_5186]])) >> 13 / Mask(16, 16, sha3(mem[_5186 + 32 len mem[_5186]])) >> 16 != 8:
                                                    revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5185 + 197 len 31]
                                                mem[_5185 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5185 + 100] = ext_call.return_data[0]
                                                mem[_5185 + 132] = (Mask(16, 16, _5188) >> 13) + 524288
                                                mem[_5185 + 164] = 16
                                                mem[_5185 + 196] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(16, 16, _5188) >> 13) + 524288, 16, block.timestamp
                                        else:
                                            if uint16(sha3(mem[_5186 + 32 len mem[_5186]])) < 2623:
                                                if not Mask(16, 16, sha3(mem[_5186 + 32 len mem[_5186]])) >> 16:
                                                    mem[_5185 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5185 + 100] = ext_call.return_data[0]
                                                    mem[_5185 + 132] = 131072
                                                    mem[_5185 + 164] = 8
                                                    mem[_5185 + 196] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], 131072, 8, block.timestamp
                                                else:
                                                    if Mask(16, 16, sha3(mem[_5186 + 32 len mem[_5186]])) >> 14 / Mask(16, 16, sha3(mem[_5186 + 32 len mem[_5186]])) >> 16 != 4:
                                                        revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5185 + 197 len 31]
                                                    mem[_5185 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5185 + 100] = ext_call.return_data[0]
                                                    mem[_5185 + 132] = (Mask(16, 16, _5188) >> 14) + 131072
                                                    mem[_5185 + 164] = 8
                                                    mem[_5185 + 196] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(16, 16, _5188) >> 14) + 131072, 8, block.timestamp
                                            else:
                                                if uint16(sha3(mem[_5186 + 32 len mem[_5186]])) < 9177:
                                                    mem[_5185 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5185 + 100] = ext_call.return_data[0]
                                                    mem[_5185 + 132] = (Mask(16, 16, _5188) >> 16) + 16384
                                                    mem[_5185 + 164] = 4
                                                    mem[_5185 + 196] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(16, 16, _5188) >> 16) + 16384, 4, block.timestamp
                                                else:
                                                    mem[64] = _5185 + 160
                                                    mem[_5185 + 96] = 26
                                                    mem[_5185 + 128] = 'SafeMath: division by zero'
                                                    mem[_5185 + 160] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5185 + 164] = ext_call.return_data[0]
                                                    if uint16(sha3(mem[_5186 + 32 len mem[_5186]])) >= 25561:
                                                        mem[_5185 + 196] = (Mask(8, 24, _5188) >> 24) + 1
                                                        mem[_5185 + 228] = 1
                                                        mem[_5185 + 260] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(8, 24, _5188) >> 24) + 1, 1, block.timestamp
                                                    else:
                                                        mem[_5185 + 196] = (Mask(13, 19, _5188) >> 19) + 512
                                                        mem[_5185 + 228] = 2
                                                        mem[_5185 + 260] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(13, 19, _5188) >> 19) + 512, 2, block.timestamp
                                    else:
                                        mem[_5185 + 96] = 30
                                        mem[_5185 + 128] = 'SafeMath: subtraction overflow'
                                        if uint64(ext_call.return_data[0]) >> 192 > 30:
                                            mem[_5185 + 160] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[_5185 + 164] = 32
                                            idx = 32
                                            while idx < 30:
                                                mem[idx + _5185 + 228] = mem[idx + _5185 + 128]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        mem[64] = _5185 + 224
                                        mem[_5185 + 160] = 26
                                        mem[_5185 + 192] = 'SafeMath: division by zero'
                                        if not -(uint64(ext_call.return_data[0]) >> 192) + 30:
                                            mem[_5185 + 224] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[_5185 + 228] = 32
                                            idx = 0
                                            while idx < 26:
                                                mem[idx + _5185 + 292] = mem[idx + _5185 + 192]
                                                idx = idx + 32
                                                continue 
                                            mem[_5185 + 292] = mem[_5185 + 298 len 26]
                                            revert with 0, 32, 26, mem[_5185 + 292]
                                        if uint16(_5188) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 656:
                                            if not Mask(16, 16, _5188) >> 16:
                                                mem[_5185 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5185 + 228] = ext_call.return_data[0]
                                                mem[_5185 + 260] = 524288
                                                mem[_5185 + 292] = 16
                                                mem[_5185 + 324] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 524288, 16, block.timestamp
                                            else:
                                                if Mask(16, 16, _5188) >> 13 / Mask(16, 16, _5188) >> 16 != 8:
                                                    revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5185 + 325 len 31]
                                                mem[_5185 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5185 + 228] = ext_call.return_data[0]
                                                mem[_5185 + 260] = (Mask(16, 16, _5188) >> 13) + 524288
                                                mem[_5185 + 292] = 16
                                                mem[_5185 + 324] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(16, 16, _5188) >> 13) + 524288, 16, block.timestamp
                                        else:
                                            if uint16(_5188) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 2623:
                                                if not Mask(16, 16, _5188) >> 16:
                                                    mem[_5185 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5185 + 228] = ext_call.return_data[0]
                                                    mem[_5185 + 260] = 131072
                                                    mem[_5185 + 292] = 8
                                                    mem[_5185 + 324] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], 131072, 8, block.timestamp
                                                else:
                                                    if Mask(16, 16, _5188) >> 14 / Mask(16, 16, _5188) >> 16 != 4:
                                                        revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5185 + 325 len 31]
                                                    mem[_5185 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5185 + 228] = ext_call.return_data[0]
                                                    mem[_5185 + 260] = (Mask(16, 16, _5188) >> 14) + 131072
                                                    mem[_5185 + 292] = 8
                                                    mem[_5185 + 324] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(16, 16, _5188) >> 14) + 131072, 8, block.timestamp
                                            else:
                                                if uint16(_5188) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 9177:
                                                    mem[_5185 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5185 + 228] = ext_call.return_data[0]
                                                    mem[_5185 + 260] = (Mask(16, 16, _5188) >> 16) + 16384
                                                    mem[_5185 + 292] = 4
                                                    mem[_5185 + 324] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(16, 16, _5188) >> 16) + 16384, 4, block.timestamp
                                                else:
                                                    mem[64] = _5185 + 288
                                                    mem[_5185 + 224] = 26
                                                    mem[_5185 + 256] = 'SafeMath: division by zero'
                                                    mem[_5185 + 288] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5185 + 292] = ext_call.return_data[0]
                                                    if uint16(_5188) / -(uint64(ext_call.return_data[0]) >> 192) + 30 >= 25561:
                                                        mem[_5185 + 324] = (Mask(8, 24, _5188) >> 24) + 1
                                                        mem[_5185 + 356] = 1
                                                        mem[_5185 + 388] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(8, 24, _5188) >> 24) + 1, 1, block.timestamp
                                                    else:
                                                        mem[_5185 + 324] = (Mask(13, 19, _5188) >> 19) + 512
                                                        mem[_5185 + 356] = 2
                                                        mem[_5185 + 388] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(13, 19, _5188) >> 19) + 512, 2, block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if ext_call.return_data[32] + block.timestamp < block.timestamp:
                                revert with 0, 'SafeMath: addition overflow'
                            if not arg5:
                                emit 0x29ed85fa: arg5, ext_call.return_data[32] + block.timestamp, arg2, ext_call.return_data[0]
                                mem[mem[64]] = 0x9a43573c00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = arg1
                                mem[mem[64] + 36] = ext_call.return_data[0]
                                mem[mem[64] + 68] = ext_call.return_data[32] + block.timestamp
                                require ext_code.size(erc721ContractAddress)
                                call erc721ContractAddress.transferNewToken(bytes32 arg1, uint256 arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args arg1, ext_call.return_data[0], ext_call.return_data[32] + block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if not arg2:
                                    mem[0] = cd[((32 * idx) + arg4 + 36)]
                                    mem[32] = sha3(arg3, 17)
                                    if not stor17[arg3][cd[((32 * idx) + arg4 + 36)]]:
                                        revert with 0, 'collectible must be on sale'
                                    if ext_call.return_data[64]:
                                        mem[mem[64]] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = ext_call.return_data[0]
                                        mem[mem[64] + 36] = ext_call.return_data[64]
                                        mem[mem[64] + 68] = 0
                                        mem[mem[64] + 100] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], ext_call.return_data[64], 0, block.timestamp
                                    else:
                                        _5509 = mem[64]
                                        mem[mem[64] + 32] = ext_call.return_data[0]
                                        mem[mem[64] + 64] = block.timestamp
                                        _5510 = mem[64]
                                        mem[mem[64]] = 64
                                        mem[64] = mem[64] + 96
                                        _5512 = sha3(mem[_5510 + 32 len mem[_5510]])
                                        if uint64(ext_call.return_data[0]) >> 192 >= 30:
                                            if uint16(sha3(mem[_5510 + 32 len mem[_5510]])) < 656:
                                                if not Mask(16, 16, sha3(mem[_5510 + 32 len mem[_5510]])) >> 16:
                                                    mem[_5509 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5509 + 100] = ext_call.return_data[0]
                                                    mem[_5509 + 132] = 524288
                                                    mem[_5509 + 164] = 16
                                                    mem[_5509 + 196] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], 524288, 16, block.timestamp
                                                else:
                                                    if Mask(16, 16, sha3(mem[_5510 + 32 len mem[_5510]])) >> 13 / Mask(16, 16, sha3(mem[_5510 + 32 len mem[_5510]])) >> 16 != 8:
                                                        revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5509 + 197 len 31]
                                                    mem[_5509 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5509 + 100] = ext_call.return_data[0]
                                                    mem[_5509 + 132] = (Mask(16, 16, _5512) >> 13) + 524288
                                                    mem[_5509 + 164] = 16
                                                    mem[_5509 + 196] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(16, 16, _5512) >> 13) + 524288, 16, block.timestamp
                                            else:
                                                if uint16(sha3(mem[_5510 + 32 len mem[_5510]])) < 2623:
                                                    if not Mask(16, 16, sha3(mem[_5510 + 32 len mem[_5510]])) >> 16:
                                                        mem[_5509 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5509 + 100] = ext_call.return_data[0]
                                                        mem[_5509 + 132] = 131072
                                                        mem[_5509 + 164] = 8
                                                        mem[_5509 + 196] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], 131072, 8, block.timestamp
                                                    else:
                                                        if Mask(16, 16, sha3(mem[_5510 + 32 len mem[_5510]])) >> 14 / Mask(16, 16, sha3(mem[_5510 + 32 len mem[_5510]])) >> 16 != 4:
                                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5509 + 197 len 31]
                                                        mem[_5509 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5509 + 100] = ext_call.return_data[0]
                                                        mem[_5509 + 132] = (Mask(16, 16, _5512) >> 14) + 131072
                                                        mem[_5509 + 164] = 8
                                                        mem[_5509 + 196] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(16, 16, _5512) >> 14) + 131072, 8, block.timestamp
                                                else:
                                                    if uint16(sha3(mem[_5510 + 32 len mem[_5510]])) < 9177:
                                                        mem[_5509 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5509 + 100] = ext_call.return_data[0]
                                                        mem[_5509 + 132] = (Mask(16, 16, _5512) >> 16) + 16384
                                                        mem[_5509 + 164] = 4
                                                        mem[_5509 + 196] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(16, 16, _5512) >> 16) + 16384, 4, block.timestamp
                                                    else:
                                                        mem[64] = _5509 + 160
                                                        mem[_5509 + 96] = 26
                                                        mem[_5509 + 128] = 'SafeMath: division by zero'
                                                        mem[_5509 + 160] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5509 + 164] = ext_call.return_data[0]
                                                        if uint16(sha3(mem[_5510 + 32 len mem[_5510]])) >= 25561:
                                                            mem[_5509 + 196] = (Mask(8, 24, _5512) >> 24) + 1
                                                            mem[_5509 + 228] = 1
                                                            mem[_5509 + 260] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], (Mask(8, 24, _5512) >> 24) + 1, 1, block.timestamp
                                                        else:
                                                            mem[_5509 + 196] = (Mask(13, 19, _5512) >> 19) + 512
                                                            mem[_5509 + 228] = 2
                                                            mem[_5509 + 260] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], (Mask(13, 19, _5512) >> 19) + 512, 2, block.timestamp
                                        else:
                                            mem[_5509 + 96] = 30
                                            mem[_5509 + 128] = 'SafeMath: subtraction overflow'
                                            if uint64(ext_call.return_data[0]) >> 192 > 30:
                                                mem[_5509 + 160] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[_5509 + 164] = 32
                                                idx = 32
                                                while idx < 30:
                                                    mem[idx + _5509 + 228] = mem[idx + _5509 + 128]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            mem[64] = _5509 + 224
                                            mem[_5509 + 160] = 26
                                            mem[_5509 + 192] = 'SafeMath: division by zero'
                                            if not -(uint64(ext_call.return_data[0]) >> 192) + 30:
                                                mem[_5509 + 224] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[_5509 + 228] = 32
                                                idx = 0
                                                while idx < 26:
                                                    mem[idx + _5509 + 292] = mem[idx + _5509 + 192]
                                                    idx = idx + 32
                                                    continue 
                                                mem[_5509 + 292] = mem[_5509 + 298 len 26]
                                                revert with 0, 32, 26, mem[_5509 + 292]
                                            if uint16(_5512) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 656:
                                                if not Mask(16, 16, _5512) >> 16:
                                                    mem[_5509 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5509 + 228] = ext_call.return_data[0]
                                                    mem[_5509 + 260] = 524288
                                                    mem[_5509 + 292] = 16
                                                    mem[_5509 + 324] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], 524288, 16, block.timestamp
                                                else:
                                                    if Mask(16, 16, _5512) >> 13 / Mask(16, 16, _5512) >> 16 != 8:
                                                        revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5509 + 325 len 31]
                                                    mem[_5509 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5509 + 228] = ext_call.return_data[0]
                                                    mem[_5509 + 260] = (Mask(16, 16, _5512) >> 13) + 524288
                                                    mem[_5509 + 292] = 16
                                                    mem[_5509 + 324] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(16, 16, _5512) >> 13) + 524288, 16, block.timestamp
                                            else:
                                                if uint16(_5512) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 2623:
                                                    if not Mask(16, 16, _5512) >> 16:
                                                        mem[_5509 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5509 + 228] = ext_call.return_data[0]
                                                        mem[_5509 + 260] = 131072
                                                        mem[_5509 + 292] = 8
                                                        mem[_5509 + 324] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], 131072, 8, block.timestamp
                                                    else:
                                                        if Mask(16, 16, _5512) >> 14 / Mask(16, 16, _5512) >> 16 != 4:
                                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5509 + 325 len 31]
                                                        mem[_5509 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5509 + 228] = ext_call.return_data[0]
                                                        mem[_5509 + 260] = (Mask(16, 16, _5512) >> 14) + 131072
                                                        mem[_5509 + 292] = 8
                                                        mem[_5509 + 324] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(16, 16, _5512) >> 14) + 131072, 8, block.timestamp
                                                else:
                                                    if uint16(_5512) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 9177:
                                                        mem[_5509 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5509 + 228] = ext_call.return_data[0]
                                                        mem[_5509 + 260] = (Mask(16, 16, _5512) >> 16) + 16384
                                                        mem[_5509 + 292] = 4
                                                        mem[_5509 + 324] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(16, 16, _5512) >> 16) + 16384, 4, block.timestamp
                                                    else:
                                                        mem[64] = _5509 + 288
                                                        mem[_5509 + 224] = 26
                                                        mem[_5509 + 256] = 'SafeMath: division by zero'
                                                        mem[_5509 + 288] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5509 + 292] = ext_call.return_data[0]
                                                        if uint16(_5512) / -(uint64(ext_call.return_data[0]) >> 192) + 30 >= 25561:
                                                            mem[_5509 + 324] = (Mask(8, 24, _5512) >> 24) + 1
                                                            mem[_5509 + 356] = 1
                                                            mem[_5509 + 388] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], (Mask(8, 24, _5512) >> 24) + 1, 1, block.timestamp
                                                        else:
                                                            mem[_5509 + 324] = (Mask(13, 19, _5512) >> 19) + 512
                                                            mem[_5509 + 356] = 2
                                                            mem[_5509 + 388] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], (Mask(13, 19, _5512) >> 19) + 512, 2, block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                            else:
                                mem[32] = sha3(arg2, 19)
                                purchaseIdtoTokenIds[arg2][arg5].field_0++
                                mem[0] = sha3(arg5, sha3(arg2, 19))
                                purchaseIdtoTokenIds[arg2][arg5][purchaseIdtoTokenIds[arg2][arg5].field_0].field_0 = ext_call.return_data[0]
                                emit 0x29ed85fa: arg5, ext_call.return_data[32] + block.timestamp, arg2, ext_call.return_data[0]
                                mem[mem[64]] = 0x9a43573c00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = arg1
                                mem[mem[64] + 36] = ext_call.return_data[0]
                                mem[mem[64] + 68] = ext_call.return_data[32] + block.timestamp
                                require ext_code.size(erc721ContractAddress)
                                call erc721ContractAddress.transferNewToken(bytes32 arg1, uint256 arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args arg1, ext_call.return_data[0], ext_call.return_data[32] + block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if not arg2:
                                    mem[0] = cd[((32 * idx) + arg4 + 36)]
                                    mem[32] = sha3(arg3, 17)
                                    if not stor17[arg3][cd[((32 * idx) + arg4 + 36)]]:
                                        revert with 0, 'collectible must be on sale'
                                    if ext_call.return_data[64]:
                                        mem[mem[64]] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = ext_call.return_data[0]
                                        mem[mem[64] + 36] = ext_call.return_data[64]
                                        mem[mem[64] + 68] = 0
                                        mem[mem[64] + 100] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], ext_call.return_data[64], 0, block.timestamp
                                    else:
                                        _5605 = mem[64]
                                        mem[mem[64] + 32] = ext_call.return_data[0]
                                        mem[mem[64] + 64] = block.timestamp
                                        _5606 = mem[64]
                                        mem[mem[64]] = 64
                                        mem[64] = mem[64] + 96
                                        _5608 = sha3(mem[_5606 + 32 len mem[_5606]])
                                        if uint64(ext_call.return_data[0]) >> 192 >= 30:
                                            if uint16(sha3(mem[_5606 + 32 len mem[_5606]])) < 656:
                                                if not Mask(16, 16, sha3(mem[_5606 + 32 len mem[_5606]])) >> 16:
                                                    mem[_5605 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5605 + 100] = ext_call.return_data[0]
                                                    mem[_5605 + 132] = 524288
                                                    mem[_5605 + 164] = 16
                                                    mem[_5605 + 196] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], 524288, 16, block.timestamp
                                                else:
                                                    if Mask(16, 16, sha3(mem[_5606 + 32 len mem[_5606]])) >> 13 / Mask(16, 16, sha3(mem[_5606 + 32 len mem[_5606]])) >> 16 != 8:
                                                        revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5605 + 197 len 31]
                                                    mem[_5605 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5605 + 100] = ext_call.return_data[0]
                                                    mem[_5605 + 132] = (Mask(16, 16, _5608) >> 13) + 524288
                                                    mem[_5605 + 164] = 16
                                                    mem[_5605 + 196] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(16, 16, _5608) >> 13) + 524288, 16, block.timestamp
                                            else:
                                                if uint16(sha3(mem[_5606 + 32 len mem[_5606]])) < 2623:
                                                    if not Mask(16, 16, sha3(mem[_5606 + 32 len mem[_5606]])) >> 16:
                                                        mem[_5605 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5605 + 100] = ext_call.return_data[0]
                                                        mem[_5605 + 132] = 131072
                                                        mem[_5605 + 164] = 8
                                                        mem[_5605 + 196] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], 131072, 8, block.timestamp
                                                    else:
                                                        if Mask(16, 16, sha3(mem[_5606 + 32 len mem[_5606]])) >> 14 / Mask(16, 16, sha3(mem[_5606 + 32 len mem[_5606]])) >> 16 != 4:
                                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5605 + 197 len 31]
                                                        mem[_5605 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5605 + 100] = ext_call.return_data[0]
                                                        mem[_5605 + 132] = (Mask(16, 16, _5608) >> 14) + 131072
                                                        mem[_5605 + 164] = 8
                                                        mem[_5605 + 196] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(16, 16, _5608) >> 14) + 131072, 8, block.timestamp
                                                else:
                                                    if uint16(sha3(mem[_5606 + 32 len mem[_5606]])) < 9177:
                                                        mem[_5605 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5605 + 100] = ext_call.return_data[0]
                                                        mem[_5605 + 132] = (Mask(16, 16, _5608) >> 16) + 16384
                                                        mem[_5605 + 164] = 4
                                                        mem[_5605 + 196] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(16, 16, _5608) >> 16) + 16384, 4, block.timestamp
                                                    else:
                                                        mem[64] = _5605 + 160
                                                        mem[_5605 + 96] = 26
                                                        mem[_5605 + 128] = 'SafeMath: division by zero'
                                                        mem[_5605 + 160] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5605 + 164] = ext_call.return_data[0]
                                                        if uint16(sha3(mem[_5606 + 32 len mem[_5606]])) >= 25561:
                                                            mem[_5605 + 196] = (Mask(8, 24, _5608) >> 24) + 1
                                                            mem[_5605 + 228] = 1
                                                            mem[_5605 + 260] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], (Mask(8, 24, _5608) >> 24) + 1, 1, block.timestamp
                                                        else:
                                                            mem[_5605 + 196] = (Mask(13, 19, _5608) >> 19) + 512
                                                            mem[_5605 + 228] = 2
                                                            mem[_5605 + 260] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], (Mask(13, 19, _5608) >> 19) + 512, 2, block.timestamp
                                        else:
                                            mem[_5605 + 96] = 30
                                            mem[_5605 + 128] = 'SafeMath: subtraction overflow'
                                            if uint64(ext_call.return_data[0]) >> 192 > 30:
                                                mem[_5605 + 160] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[_5605 + 164] = 32
                                                idx = 32
                                                while idx < 30:
                                                    mem[idx + _5605 + 228] = mem[idx + _5605 + 128]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            mem[64] = _5605 + 224
                                            mem[_5605 + 160] = 26
                                            mem[_5605 + 192] = 'SafeMath: division by zero'
                                            if not -(uint64(ext_call.return_data[0]) >> 192) + 30:
                                                mem[_5605 + 224] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[_5605 + 228] = 32
                                                idx = 0
                                                while idx < 26:
                                                    mem[idx + _5605 + 292] = mem[idx + _5605 + 192]
                                                    idx = idx + 32
                                                    continue 
                                                mem[_5605 + 292] = mem[_5605 + 298 len 26]
                                                revert with 0, 32, 26, mem[_5605 + 292]
                                            if uint16(_5608) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 656:
                                                if not Mask(16, 16, _5608) >> 16:
                                                    mem[_5605 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5605 + 228] = ext_call.return_data[0]
                                                    mem[_5605 + 260] = 524288
                                                    mem[_5605 + 292] = 16
                                                    mem[_5605 + 324] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], 524288, 16, block.timestamp
                                                else:
                                                    if Mask(16, 16, _5608) >> 13 / Mask(16, 16, _5608) >> 16 != 8:
                                                        revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5605 + 325 len 31]
                                                    mem[_5605 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5605 + 228] = ext_call.return_data[0]
                                                    mem[_5605 + 260] = (Mask(16, 16, _5608) >> 13) + 524288
                                                    mem[_5605 + 292] = 16
                                                    mem[_5605 + 324] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(16, 16, _5608) >> 13) + 524288, 16, block.timestamp
                                            else:
                                                if uint16(_5608) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 2623:
                                                    if not Mask(16, 16, _5608) >> 16:
                                                        mem[_5605 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5605 + 228] = ext_call.return_data[0]
                                                        mem[_5605 + 260] = 131072
                                                        mem[_5605 + 292] = 8
                                                        mem[_5605 + 324] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], 131072, 8, block.timestamp
                                                    else:
                                                        if Mask(16, 16, _5608) >> 14 / Mask(16, 16, _5608) >> 16 != 4:
                                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5605 + 325 len 31]
                                                        mem[_5605 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5605 + 228] = ext_call.return_data[0]
                                                        mem[_5605 + 260] = (Mask(16, 16, _5608) >> 14) + 131072
                                                        mem[_5605 + 292] = 8
                                                        mem[_5605 + 324] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(16, 16, _5608) >> 14) + 131072, 8, block.timestamp
                                                else:
                                                    if uint16(_5608) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 9177:
                                                        mem[_5605 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5605 + 228] = ext_call.return_data[0]
                                                        mem[_5605 + 260] = (Mask(16, 16, _5608) >> 16) + 16384
                                                        mem[_5605 + 292] = 4
                                                        mem[_5605 + 324] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(16, 16, _5608) >> 16) + 16384, 4, block.timestamp
                                                    else:
                                                        mem[64] = _5605 + 288
                                                        mem[_5605 + 224] = 26
                                                        mem[_5605 + 256] = 'SafeMath: division by zero'
                                                        mem[_5605 + 288] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5605 + 292] = ext_call.return_data[0]
                                                        if uint16(_5608) / -(uint64(ext_call.return_data[0]) >> 192) + 30 >= 25561:
                                                            mem[_5605 + 324] = (Mask(8, 24, _5608) >> 24) + 1
                                                            mem[_5605 + 356] = 1
                                                            mem[_5605 + 388] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], (Mask(8, 24, _5608) >> 24) + 1, 1, block.timestamp
                                                        else:
                                                            mem[_5605 + 324] = (Mask(13, 19, _5608) >> 19) + 512
                                                            mem[_5605 + 356] = 2
                                                            mem[_5605 + 388] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], (Mask(13, 19, _5608) >> 19) + 512, 2, block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                        require idx < mem[96]
                        mem[(32 * idx) + 128] = ext_call.return_data[0]
                        idx = idx + 1
                        continue 
            else:
                if eth.balance(msg.sender) >= gasRefillLevel:
                    mem[100] = msg.sender
                    mem[132] = bool(ext_call.return_data[0])
                    mem[164] = arg2
                    require ext_code.size(gameContractAddress)
                    staticcall gameContractAddress.isValidCaller(address arg1, bool arg2, uint256 arg3) with:
                            gas gas_remaining wei
                           args msg.sender, bool(ext_call.return_data[0]), arg2
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        revert with 0, 'admin, operator, or worker'
                    require arg4.length <= test266151307()
                    mem[96] = arg4.length
                    mem[64] = (32 * arg4.length) + 128
                    if not arg4.length:
                        idx = 0
                        while idx < arg4.length:
                            require ext_code.size(gameContractAddress)
                            call gameContractAddress.createTokenFromCard(uint256 arg1, uint256 arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args arg2, arg3, cd[((32 * idx) + arg4 + 36)]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            if arg5 == -1:
                                emit 0x29ed85fa: arg5, 0, arg2, ext_call.return_data[0]
                                mem[mem[64]] = 0x9a43573c00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = arg1
                                mem[mem[64] + 36] = ext_call.return_data[0]
                                mem[mem[64] + 68] = 0
                                require ext_code.size(erc721ContractAddress)
                                call erc721ContractAddress.transferNewToken(bytes32 arg1, uint256 arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args arg1, ext_call.return_data[0], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if not arg2:
                                    mem[0] = cd[((32 * idx) + arg4 + 36)]
                                    mem[32] = sha3(arg3, 17)
                                    if not stor17[arg3][cd[((32 * idx) + arg4 + 36)]]:
                                        revert with 0, 'collectible must be on sale'
                                    if ext_call.return_data[64]:
                                        mem[mem[64]] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = ext_call.return_data[0]
                                        mem[mem[64] + 36] = ext_call.return_data[64]
                                        mem[mem[64] + 68] = 0
                                        mem[mem[64] + 100] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], ext_call.return_data[64], 0, block.timestamp
                                    else:
                                        _5189 = mem[64]
                                        mem[mem[64] + 32] = ext_call.return_data[0]
                                        mem[mem[64] + 64] = block.timestamp
                                        _5190 = mem[64]
                                        mem[mem[64]] = 64
                                        mem[64] = mem[64] + 96
                                        _5192 = sha3(mem[_5190 + 32 len mem[_5190]])
                                        if uint64(ext_call.return_data[0]) >> 192 >= 30:
                                            if uint16(sha3(mem[_5190 + 32 len mem[_5190]])) < 656:
                                                if not Mask(16, 16, sha3(mem[_5190 + 32 len mem[_5190]])) >> 16:
                                                    mem[_5189 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5189 + 100] = ext_call.return_data[0]
                                                    mem[_5189 + 132] = 524288
                                                    mem[_5189 + 164] = 16
                                                    mem[_5189 + 196] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], 524288, 16, block.timestamp
                                                else:
                                                    if Mask(16, 16, sha3(mem[_5190 + 32 len mem[_5190]])) >> 13 / Mask(16, 16, sha3(mem[_5190 + 32 len mem[_5190]])) >> 16 != 8:
                                                        revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5189 + 197 len 31]
                                                    mem[_5189 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5189 + 100] = ext_call.return_data[0]
                                                    mem[_5189 + 132] = (Mask(16, 16, _5192) >> 13) + 524288
                                                    mem[_5189 + 164] = 16
                                                    mem[_5189 + 196] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(16, 16, _5192) >> 13) + 524288, 16, block.timestamp
                                            else:
                                                if uint16(sha3(mem[_5190 + 32 len mem[_5190]])) < 2623:
                                                    if not Mask(16, 16, sha3(mem[_5190 + 32 len mem[_5190]])) >> 16:
                                                        mem[_5189 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5189 + 100] = ext_call.return_data[0]
                                                        mem[_5189 + 132] = 131072
                                                        mem[_5189 + 164] = 8
                                                        mem[_5189 + 196] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], 131072, 8, block.timestamp
                                                    else:
                                                        if Mask(16, 16, sha3(mem[_5190 + 32 len mem[_5190]])) >> 14 / Mask(16, 16, sha3(mem[_5190 + 32 len mem[_5190]])) >> 16 != 4:
                                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5189 + 197 len 31]
                                                        mem[_5189 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5189 + 100] = ext_call.return_data[0]
                                                        mem[_5189 + 132] = (Mask(16, 16, _5192) >> 14) + 131072
                                                        mem[_5189 + 164] = 8
                                                        mem[_5189 + 196] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(16, 16, _5192) >> 14) + 131072, 8, block.timestamp
                                                else:
                                                    if uint16(sha3(mem[_5190 + 32 len mem[_5190]])) < 9177:
                                                        mem[_5189 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5189 + 100] = ext_call.return_data[0]
                                                        mem[_5189 + 132] = (Mask(16, 16, _5192) >> 16) + 16384
                                                        mem[_5189 + 164] = 4
                                                        mem[_5189 + 196] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(16, 16, _5192) >> 16) + 16384, 4, block.timestamp
                                                    else:
                                                        mem[64] = _5189 + 160
                                                        mem[_5189 + 96] = 26
                                                        mem[_5189 + 128] = 'SafeMath: division by zero'
                                                        mem[_5189 + 160] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5189 + 164] = ext_call.return_data[0]
                                                        if uint16(sha3(mem[_5190 + 32 len mem[_5190]])) >= 25561:
                                                            mem[_5189 + 196] = (Mask(8, 24, _5192) >> 24) + 1
                                                            mem[_5189 + 228] = 1
                                                            mem[_5189 + 260] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], (Mask(8, 24, _5192) >> 24) + 1, 1, block.timestamp
                                                        else:
                                                            mem[_5189 + 196] = (Mask(13, 19, _5192) >> 19) + 512
                                                            mem[_5189 + 228] = 2
                                                            mem[_5189 + 260] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], (Mask(13, 19, _5192) >> 19) + 512, 2, block.timestamp
                                        else:
                                            mem[_5189 + 96] = 30
                                            mem[_5189 + 128] = 'SafeMath: subtraction overflow'
                                            if uint64(ext_call.return_data[0]) >> 192 > 30:
                                                mem[_5189 + 160] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[_5189 + 164] = 32
                                                idx = 32
                                                while idx < 30:
                                                    mem[idx + _5189 + 228] = mem[idx + _5189 + 128]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            mem[64] = _5189 + 224
                                            mem[_5189 + 160] = 26
                                            mem[_5189 + 192] = 'SafeMath: division by zero'
                                            if not -(uint64(ext_call.return_data[0]) >> 192) + 30:
                                                mem[_5189 + 224] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[_5189 + 228] = 32
                                                idx = 0
                                                while idx < 26:
                                                    mem[idx + _5189 + 292] = mem[idx + _5189 + 192]
                                                    idx = idx + 32
                                                    continue 
                                                mem[_5189 + 292] = mem[_5189 + 298 len 26]
                                                revert with 0, 32, 26, mem[_5189 + 292]
                                            if uint16(_5192) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 656:
                                                if not Mask(16, 16, _5192) >> 16:
                                                    mem[_5189 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5189 + 228] = ext_call.return_data[0]
                                                    mem[_5189 + 260] = 524288
                                                    mem[_5189 + 292] = 16
                                                    mem[_5189 + 324] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], 524288, 16, block.timestamp
                                                else:
                                                    if Mask(16, 16, _5192) >> 13 / Mask(16, 16, _5192) >> 16 != 8:
                                                        revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5189 + 325 len 31]
                                                    mem[_5189 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5189 + 228] = ext_call.return_data[0]
                                                    mem[_5189 + 260] = (Mask(16, 16, _5192) >> 13) + 524288
                                                    mem[_5189 + 292] = 16
                                                    mem[_5189 + 324] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(16, 16, _5192) >> 13) + 524288, 16, block.timestamp
                                            else:
                                                if uint16(_5192) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 2623:
                                                    if not Mask(16, 16, _5192) >> 16:
                                                        mem[_5189 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5189 + 228] = ext_call.return_data[0]
                                                        mem[_5189 + 260] = 131072
                                                        mem[_5189 + 292] = 8
                                                        mem[_5189 + 324] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], 131072, 8, block.timestamp
                                                    else:
                                                        if Mask(16, 16, _5192) >> 14 / Mask(16, 16, _5192) >> 16 != 4:
                                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5189 + 325 len 31]
                                                        mem[_5189 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5189 + 228] = ext_call.return_data[0]
                                                        mem[_5189 + 260] = (Mask(16, 16, _5192) >> 14) + 131072
                                                        mem[_5189 + 292] = 8
                                                        mem[_5189 + 324] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(16, 16, _5192) >> 14) + 131072, 8, block.timestamp
                                                else:
                                                    if uint16(_5192) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 9177:
                                                        mem[_5189 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5189 + 228] = ext_call.return_data[0]
                                                        mem[_5189 + 260] = (Mask(16, 16, _5192) >> 16) + 16384
                                                        mem[_5189 + 292] = 4
                                                        mem[_5189 + 324] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(16, 16, _5192) >> 16) + 16384, 4, block.timestamp
                                                    else:
                                                        mem[64] = _5189 + 288
                                                        mem[_5189 + 224] = 26
                                                        mem[_5189 + 256] = 'SafeMath: division by zero'
                                                        mem[_5189 + 288] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5189 + 292] = ext_call.return_data[0]
                                                        if uint16(_5192) / -(uint64(ext_call.return_data[0]) >> 192) + 30 >= 25561:
                                                            mem[_5189 + 324] = (Mask(8, 24, _5192) >> 24) + 1
                                                            mem[_5189 + 356] = 1
                                                            mem[_5189 + 388] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], (Mask(8, 24, _5192) >> 24) + 1, 1, block.timestamp
                                                        else:
                                                            mem[_5189 + 324] = (Mask(13, 19, _5192) >> 19) + 512
                                                            mem[_5189 + 356] = 2
                                                            mem[_5189 + 388] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], (Mask(13, 19, _5192) >> 19) + 512, 2, block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if ext_call.return_data[32] + block.timestamp < block.timestamp:
                                    revert with 0, 'SafeMath: addition overflow'
                                if not arg5:
                                    emit 0x29ed85fa: arg5, ext_call.return_data[32] + block.timestamp, arg2, ext_call.return_data[0]
                                    mem[mem[64]] = 0x9a43573c00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = arg1
                                    mem[mem[64] + 36] = ext_call.return_data[0]
                                    mem[mem[64] + 68] = ext_call.return_data[32] + block.timestamp
                                    require ext_code.size(erc721ContractAddress)
                                    call erc721ContractAddress.transferNewToken(bytes32 arg1, uint256 arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args arg1, ext_call.return_data[0], ext_call.return_data[32] + block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not arg2:
                                        mem[0] = cd[((32 * idx) + arg4 + 36)]
                                        mem[32] = sha3(arg3, 17)
                                        if not stor17[arg3][cd[((32 * idx) + arg4 + 36)]]:
                                            revert with 0, 'collectible must be on sale'
                                        if ext_call.return_data[64]:
                                            mem[mem[64]] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = ext_call.return_data[0]
                                            mem[mem[64] + 36] = ext_call.return_data[64]
                                            mem[mem[64] + 68] = 0
                                            mem[mem[64] + 100] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], ext_call.return_data[64], 0, block.timestamp
                                        else:
                                            _5514 = mem[64]
                                            mem[mem[64] + 32] = ext_call.return_data[0]
                                            mem[mem[64] + 64] = block.timestamp
                                            _5515 = mem[64]
                                            mem[mem[64]] = 64
                                            mem[64] = mem[64] + 96
                                            _5517 = sha3(mem[_5515 + 32 len mem[_5515]])
                                            if uint64(ext_call.return_data[0]) >> 192 >= 30:
                                                if uint16(sha3(mem[_5515 + 32 len mem[_5515]])) < 656:
                                                    if not Mask(16, 16, sha3(mem[_5515 + 32 len mem[_5515]])) >> 16:
                                                        mem[_5514 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5514 + 100] = ext_call.return_data[0]
                                                        mem[_5514 + 132] = 524288
                                                        mem[_5514 + 164] = 16
                                                        mem[_5514 + 196] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], 524288, 16, block.timestamp
                                                    else:
                                                        if Mask(16, 16, sha3(mem[_5515 + 32 len mem[_5515]])) >> 13 / Mask(16, 16, sha3(mem[_5515 + 32 len mem[_5515]])) >> 16 != 8:
                                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5514 + 197 len 31]
                                                        mem[_5514 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5514 + 100] = ext_call.return_data[0]
                                                        mem[_5514 + 132] = (Mask(16, 16, _5517) >> 13) + 524288
                                                        mem[_5514 + 164] = 16
                                                        mem[_5514 + 196] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(16, 16, _5517) >> 13) + 524288, 16, block.timestamp
                                                else:
                                                    if uint16(sha3(mem[_5515 + 32 len mem[_5515]])) < 2623:
                                                        if not Mask(16, 16, sha3(mem[_5515 + 32 len mem[_5515]])) >> 16:
                                                            mem[_5514 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                            mem[_5514 + 100] = ext_call.return_data[0]
                                                            mem[_5514 + 132] = 131072
                                                            mem[_5514 + 164] = 8
                                                            mem[_5514 + 196] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], 131072, 8, block.timestamp
                                                        else:
                                                            if Mask(16, 16, sha3(mem[_5515 + 32 len mem[_5515]])) >> 14 / Mask(16, 16, sha3(mem[_5515 + 32 len mem[_5515]])) >> 16 != 4:
                                                                revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5514 + 197 len 31]
                                                            mem[_5514 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                            mem[_5514 + 100] = ext_call.return_data[0]
                                                            mem[_5514 + 132] = (Mask(16, 16, _5517) >> 14) + 131072
                                                            mem[_5514 + 164] = 8
                                                            mem[_5514 + 196] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], (Mask(16, 16, _5517) >> 14) + 131072, 8, block.timestamp
                                                    else:
                                                        if uint16(sha3(mem[_5515 + 32 len mem[_5515]])) < 9177:
                                                            mem[_5514 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                            mem[_5514 + 100] = ext_call.return_data[0]
                                                            mem[_5514 + 132] = (Mask(16, 16, _5517) >> 16) + 16384
                                                            mem[_5514 + 164] = 4
                                                            mem[_5514 + 196] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], (Mask(16, 16, _5517) >> 16) + 16384, 4, block.timestamp
                                                        else:
                                                            mem[64] = _5514 + 160
                                                            mem[_5514 + 96] = 26
                                                            mem[_5514 + 128] = 'SafeMath: division by zero'
                                                            mem[_5514 + 160] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                            mem[_5514 + 164] = ext_call.return_data[0]
                                                            if uint16(sha3(mem[_5515 + 32 len mem[_5515]])) >= 25561:
                                                                mem[_5514 + 196] = (Mask(8, 24, _5517) >> 24) + 1
                                                                mem[_5514 + 228] = 1
                                                                mem[_5514 + 260] = block.timestamp
                                                                require ext_code.size(erc721ContractAddress)
                                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                     gas gas_remaining wei
                                                                    args ext_call.return_data[0], (Mask(8, 24, _5517) >> 24) + 1, 1, block.timestamp
                                                            else:
                                                                mem[_5514 + 196] = (Mask(13, 19, _5517) >> 19) + 512
                                                                mem[_5514 + 228] = 2
                                                                mem[_5514 + 260] = block.timestamp
                                                                require ext_code.size(erc721ContractAddress)
                                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                     gas gas_remaining wei
                                                                    args ext_call.return_data[0], (Mask(13, 19, _5517) >> 19) + 512, 2, block.timestamp
                                            else:
                                                mem[_5514 + 96] = 30
                                                mem[_5514 + 128] = 'SafeMath: subtraction overflow'
                                                if uint64(ext_call.return_data[0]) >> 192 > 30:
                                                    mem[_5514 + 160] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[_5514 + 164] = 32
                                                    idx = 32
                                                    while idx < 30:
                                                        mem[idx + _5514 + 228] = mem[idx + _5514 + 128]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                mem[64] = _5514 + 224
                                                mem[_5514 + 160] = 26
                                                mem[_5514 + 192] = 'SafeMath: division by zero'
                                                if not -(uint64(ext_call.return_data[0]) >> 192) + 30:
                                                    mem[_5514 + 224] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[_5514 + 228] = 32
                                                    idx = 0
                                                    while idx < 26:
                                                        mem[idx + _5514 + 292] = mem[idx + _5514 + 192]
                                                        idx = idx + 32
                                                        continue 
                                                    mem[_5514 + 292] = mem[_5514 + 298 len 26]
                                                    revert with 0, 32, 26, mem[_5514 + 292]
                                                if uint16(_5517) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 656:
                                                    if not Mask(16, 16, _5517) >> 16:
                                                        mem[_5514 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5514 + 228] = ext_call.return_data[0]
                                                        mem[_5514 + 260] = 524288
                                                        mem[_5514 + 292] = 16
                                                        mem[_5514 + 324] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], 524288, 16, block.timestamp
                                                    else:
                                                        if Mask(16, 16, _5517) >> 13 / Mask(16, 16, _5517) >> 16 != 8:
                                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5514 + 325 len 31]
                                                        mem[_5514 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5514 + 228] = ext_call.return_data[0]
                                                        mem[_5514 + 260] = (Mask(16, 16, _5517) >> 13) + 524288
                                                        mem[_5514 + 292] = 16
                                                        mem[_5514 + 324] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(16, 16, _5517) >> 13) + 524288, 16, block.timestamp
                                                else:
                                                    if uint16(_5517) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 2623:
                                                        if not Mask(16, 16, _5517) >> 16:
                                                            mem[_5514 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                            mem[_5514 + 228] = ext_call.return_data[0]
                                                            mem[_5514 + 260] = 131072
                                                            mem[_5514 + 292] = 8
                                                            mem[_5514 + 324] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], 131072, 8, block.timestamp
                                                        else:
                                                            if Mask(16, 16, _5517) >> 14 / Mask(16, 16, _5517) >> 16 != 4:
                                                                revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5514 + 325 len 31]
                                                            mem[_5514 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                            mem[_5514 + 228] = ext_call.return_data[0]
                                                            mem[_5514 + 260] = (Mask(16, 16, _5517) >> 14) + 131072
                                                            mem[_5514 + 292] = 8
                                                            mem[_5514 + 324] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], (Mask(16, 16, _5517) >> 14) + 131072, 8, block.timestamp
                                                    else:
                                                        if uint16(_5517) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 9177:
                                                            mem[_5514 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                            mem[_5514 + 228] = ext_call.return_data[0]
                                                            mem[_5514 + 260] = (Mask(16, 16, _5517) >> 16) + 16384
                                                            mem[_5514 + 292] = 4
                                                            mem[_5514 + 324] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], (Mask(16, 16, _5517) >> 16) + 16384, 4, block.timestamp
                                                        else:
                                                            mem[64] = _5514 + 288
                                                            mem[_5514 + 224] = 26
                                                            mem[_5514 + 256] = 'SafeMath: division by zero'
                                                            mem[_5514 + 288] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                            mem[_5514 + 292] = ext_call.return_data[0]
                                                            if uint16(_5517) / -(uint64(ext_call.return_data[0]) >> 192) + 30 >= 25561:
                                                                mem[_5514 + 324] = (Mask(8, 24, _5517) >> 24) + 1
                                                                mem[_5514 + 356] = 1
                                                                mem[_5514 + 388] = block.timestamp
                                                                require ext_code.size(erc721ContractAddress)
                                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                     gas gas_remaining wei
                                                                    args ext_call.return_data[0], (Mask(8, 24, _5517) >> 24) + 1, 1, block.timestamp
                                                            else:
                                                                mem[_5514 + 324] = (Mask(13, 19, _5517) >> 19) + 512
                                                                mem[_5514 + 356] = 2
                                                                mem[_5514 + 388] = block.timestamp
                                                                require ext_code.size(erc721ContractAddress)
                                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                     gas gas_remaining wei
                                                                    args ext_call.return_data[0], (Mask(13, 19, _5517) >> 19) + 512, 2, block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    mem[32] = sha3(arg2, 19)
                                    purchaseIdtoTokenIds[arg2][arg5].field_0++
                                    mem[0] = sha3(arg5, sha3(arg2, 19))
                                    purchaseIdtoTokenIds[arg2][arg5][purchaseIdtoTokenIds[arg2][arg5].field_0].field_0 = ext_call.return_data[0]
                                    emit 0x29ed85fa: arg5, ext_call.return_data[32] + block.timestamp, arg2, ext_call.return_data[0]
                                    mem[mem[64]] = 0x9a43573c00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = arg1
                                    mem[mem[64] + 36] = ext_call.return_data[0]
                                    mem[mem[64] + 68] = ext_call.return_data[32] + block.timestamp
                                    require ext_code.size(erc721ContractAddress)
                                    call erc721ContractAddress.transferNewToken(bytes32 arg1, uint256 arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args arg1, ext_call.return_data[0], ext_call.return_data[32] + block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not arg2:
                                        mem[0] = cd[((32 * idx) + arg4 + 36)]
                                        mem[32] = sha3(arg3, 17)
                                        if not stor17[arg3][cd[((32 * idx) + arg4 + 36)]]:
                                            revert with 0, 'collectible must be on sale'
                                        if ext_call.return_data[64]:
                                            mem[mem[64]] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = ext_call.return_data[0]
                                            mem[mem[64] + 36] = ext_call.return_data[64]
                                            mem[mem[64] + 68] = 0
                                            mem[mem[64] + 100] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], ext_call.return_data[64], 0, block.timestamp
                                        else:
                                            _5614 = mem[64]
                                            mem[mem[64] + 32] = ext_call.return_data[0]
                                            mem[mem[64] + 64] = block.timestamp
                                            _5615 = mem[64]
                                            mem[mem[64]] = 64
                                            mem[64] = mem[64] + 96
                                            _5617 = sha3(mem[_5615 + 32 len mem[_5615]])
                                            if uint64(ext_call.return_data[0]) >> 192 >= 30:
                                                if uint16(sha3(mem[_5615 + 32 len mem[_5615]])) < 656:
                                                    if not Mask(16, 16, sha3(mem[_5615 + 32 len mem[_5615]])) >> 16:
                                                        mem[_5614 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5614 + 100] = ext_call.return_data[0]
                                                        mem[_5614 + 132] = 524288
                                                        mem[_5614 + 164] = 16
                                                        mem[_5614 + 196] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], 524288, 16, block.timestamp
                                                    else:
                                                        if Mask(16, 16, sha3(mem[_5615 + 32 len mem[_5615]])) >> 13 / Mask(16, 16, sha3(mem[_5615 + 32 len mem[_5615]])) >> 16 != 8:
                                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5614 + 197 len 31]
                                                        mem[_5614 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5614 + 100] = ext_call.return_data[0]
                                                        mem[_5614 + 132] = (Mask(16, 16, _5617) >> 13) + 524288
                                                        mem[_5614 + 164] = 16
                                                        mem[_5614 + 196] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(16, 16, _5617) >> 13) + 524288, 16, block.timestamp
                                                else:
                                                    if uint16(sha3(mem[_5615 + 32 len mem[_5615]])) < 2623:
                                                        if not Mask(16, 16, sha3(mem[_5615 + 32 len mem[_5615]])) >> 16:
                                                            mem[_5614 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                            mem[_5614 + 100] = ext_call.return_data[0]
                                                            mem[_5614 + 132] = 131072
                                                            mem[_5614 + 164] = 8
                                                            mem[_5614 + 196] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], 131072, 8, block.timestamp
                                                        else:
                                                            if Mask(16, 16, sha3(mem[_5615 + 32 len mem[_5615]])) >> 14 / Mask(16, 16, sha3(mem[_5615 + 32 len mem[_5615]])) >> 16 != 4:
                                                                revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5614 + 197 len 31]
                                                            mem[_5614 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                            mem[_5614 + 100] = ext_call.return_data[0]
                                                            mem[_5614 + 132] = (Mask(16, 16, _5617) >> 14) + 131072
                                                            mem[_5614 + 164] = 8
                                                            mem[_5614 + 196] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], (Mask(16, 16, _5617) >> 14) + 131072, 8, block.timestamp
                                                    else:
                                                        if uint16(sha3(mem[_5615 + 32 len mem[_5615]])) < 9177:
                                                            mem[_5614 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                            mem[_5614 + 100] = ext_call.return_data[0]
                                                            mem[_5614 + 132] = (Mask(16, 16, _5617) >> 16) + 16384
                                                            mem[_5614 + 164] = 4
                                                            mem[_5614 + 196] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], (Mask(16, 16, _5617) >> 16) + 16384, 4, block.timestamp
                                                        else:
                                                            mem[64] = _5614 + 160
                                                            mem[_5614 + 96] = 26
                                                            mem[_5614 + 128] = 'SafeMath: division by zero'
                                                            mem[_5614 + 160] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                            mem[_5614 + 164] = ext_call.return_data[0]
                                                            if uint16(sha3(mem[_5615 + 32 len mem[_5615]])) >= 25561:
                                                                mem[_5614 + 196] = (Mask(8, 24, _5617) >> 24) + 1
                                                                mem[_5614 + 228] = 1
                                                                mem[_5614 + 260] = block.timestamp
                                                                require ext_code.size(erc721ContractAddress)
                                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                     gas gas_remaining wei
                                                                    args ext_call.return_data[0], (Mask(8, 24, _5617) >> 24) + 1, 1, block.timestamp
                                                            else:
                                                                mem[_5614 + 196] = (Mask(13, 19, _5617) >> 19) + 512
                                                                mem[_5614 + 228] = 2
                                                                mem[_5614 + 260] = block.timestamp
                                                                require ext_code.size(erc721ContractAddress)
                                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                     gas gas_remaining wei
                                                                    args ext_call.return_data[0], (Mask(13, 19, _5617) >> 19) + 512, 2, block.timestamp
                                            else:
                                                mem[_5614 + 96] = 30
                                                mem[_5614 + 128] = 'SafeMath: subtraction overflow'
                                                if uint64(ext_call.return_data[0]) >> 192 > 30:
                                                    mem[_5614 + 160] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[_5614 + 164] = 32
                                                    idx = 32
                                                    while idx < 30:
                                                        mem[idx + _5614 + 228] = mem[idx + _5614 + 128]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                mem[64] = _5614 + 224
                                                mem[_5614 + 160] = 26
                                                mem[_5614 + 192] = 'SafeMath: division by zero'
                                                if not -(uint64(ext_call.return_data[0]) >> 192) + 30:
                                                    mem[_5614 + 224] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[_5614 + 228] = 32
                                                    idx = 0
                                                    while idx < 26:
                                                        mem[idx + _5614 + 292] = mem[idx + _5614 + 192]
                                                        idx = idx + 32
                                                        continue 
                                                    mem[_5614 + 292] = mem[_5614 + 298 len 26]
                                                    revert with 0, 32, 26, mem[_5614 + 292]
                                                if uint16(_5617) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 656:
                                                    if not Mask(16, 16, _5617) >> 16:
                                                        mem[_5614 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5614 + 228] = ext_call.return_data[0]
                                                        mem[_5614 + 260] = 524288
                                                        mem[_5614 + 292] = 16
                                                        mem[_5614 + 324] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], 524288, 16, block.timestamp
                                                    else:
                                                        if Mask(16, 16, _5617) >> 13 / Mask(16, 16, _5617) >> 16 != 8:
                                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5614 + 325 len 31]
                                                        mem[_5614 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5614 + 228] = ext_call.return_data[0]
                                                        mem[_5614 + 260] = (Mask(16, 16, _5617) >> 13) + 524288
                                                        mem[_5614 + 292] = 16
                                                        mem[_5614 + 324] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(16, 16, _5617) >> 13) + 524288, 16, block.timestamp
                                                else:
                                                    if uint16(_5617) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 2623:
                                                        if not Mask(16, 16, _5617) >> 16:
                                                            mem[_5614 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                            mem[_5614 + 228] = ext_call.return_data[0]
                                                            mem[_5614 + 260] = 131072
                                                            mem[_5614 + 292] = 8
                                                            mem[_5614 + 324] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], 131072, 8, block.timestamp
                                                        else:
                                                            if Mask(16, 16, _5617) >> 14 / Mask(16, 16, _5617) >> 16 != 4:
                                                                revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5614 + 325 len 31]
                                                            mem[_5614 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                            mem[_5614 + 228] = ext_call.return_data[0]
                                                            mem[_5614 + 260] = (Mask(16, 16, _5617) >> 14) + 131072
                                                            mem[_5614 + 292] = 8
                                                            mem[_5614 + 324] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], (Mask(16, 16, _5617) >> 14) + 131072, 8, block.timestamp
                                                    else:
                                                        if uint16(_5617) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 9177:
                                                            mem[_5614 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                            mem[_5614 + 228] = ext_call.return_data[0]
                                                            mem[_5614 + 260] = (Mask(16, 16, _5617) >> 16) + 16384
                                                            mem[_5614 + 292] = 4
                                                            mem[_5614 + 324] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], (Mask(16, 16, _5617) >> 16) + 16384, 4, block.timestamp
                                                        else:
                                                            mem[64] = _5614 + 288
                                                            mem[_5614 + 224] = 26
                                                            mem[_5614 + 256] = 'SafeMath: division by zero'
                                                            mem[_5614 + 288] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                            mem[_5614 + 292] = ext_call.return_data[0]
                                                            if uint16(_5617) / -(uint64(ext_call.return_data[0]) >> 192) + 30 >= 25561:
                                                                mem[_5614 + 324] = (Mask(8, 24, _5617) >> 24) + 1
                                                                mem[_5614 + 356] = 1
                                                                mem[_5614 + 388] = block.timestamp
                                                                require ext_code.size(erc721ContractAddress)
                                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                     gas gas_remaining wei
                                                                    args ext_call.return_data[0], (Mask(8, 24, _5617) >> 24) + 1, 1, block.timestamp
                                                            else:
                                                                mem[_5614 + 324] = (Mask(13, 19, _5617) >> 19) + 512
                                                                mem[_5614 + 356] = 2
                                                                mem[_5614 + 388] = block.timestamp
                                                                require ext_code.size(erc721ContractAddress)
                                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                     gas gas_remaining wei
                                                                    args ext_call.return_data[0], (Mask(13, 19, _5617) >> 19) + 512, 2, block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                            require idx < mem[96]
                            mem[(32 * idx) + 128] = ext_call.return_data[0]
                            idx = idx + 1
                            continue 
                    else:
                        mem[128 len 32 * arg4.length] = call.data[calldata.size len 32 * arg4.length]
                        idx = 0
                        while idx < arg4.length:
                            require ext_code.size(gameContractAddress)
                            call gameContractAddress.createTokenFromCard(uint256 arg1, uint256 arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args arg2, arg3, cd[((32 * idx) + arg4 + 36)]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            if arg5 == -1:
                                emit 0x29ed85fa: arg5, 0, arg2, ext_call.return_data[0]
                                mem[mem[64]] = 0x9a43573c00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = arg1
                                mem[mem[64] + 36] = ext_call.return_data[0]
                                mem[mem[64] + 68] = 0
                                require ext_code.size(erc721ContractAddress)
                                call erc721ContractAddress.transferNewToken(bytes32 arg1, uint256 arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args arg1, ext_call.return_data[0], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if not arg2:
                                    mem[0] = cd[((32 * idx) + arg4 + 36)]
                                    mem[32] = sha3(arg3, 17)
                                    if not stor17[arg3][cd[((32 * idx) + arg4 + 36)]]:
                                        revert with 0, 'collectible must be on sale'
                                    if ext_call.return_data[64]:
                                        mem[mem[64]] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = ext_call.return_data[0]
                                        mem[mem[64] + 36] = ext_call.return_data[64]
                                        mem[mem[64] + 68] = 0
                                        mem[mem[64] + 100] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], ext_call.return_data[64], 0, block.timestamp
                                    else:
                                        _5193 = mem[64]
                                        mem[mem[64] + 32] = ext_call.return_data[0]
                                        mem[mem[64] + 64] = block.timestamp
                                        _5194 = mem[64]
                                        mem[mem[64]] = 64
                                        mem[64] = mem[64] + 96
                                        _5196 = sha3(mem[_5194 + 32 len mem[_5194]])
                                        if uint64(ext_call.return_data[0]) >> 192 >= 30:
                                            if uint16(sha3(mem[_5194 + 32 len mem[_5194]])) < 656:
                                                if not Mask(16, 16, sha3(mem[_5194 + 32 len mem[_5194]])) >> 16:
                                                    mem[_5193 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5193 + 100] = ext_call.return_data[0]
                                                    mem[_5193 + 132] = 524288
                                                    mem[_5193 + 164] = 16
                                                    mem[_5193 + 196] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], 524288, 16, block.timestamp
                                                else:
                                                    if Mask(16, 16, sha3(mem[_5194 + 32 len mem[_5194]])) >> 13 / Mask(16, 16, sha3(mem[_5194 + 32 len mem[_5194]])) >> 16 != 8:
                                                        revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5193 + 197 len 31]
                                                    mem[_5193 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5193 + 100] = ext_call.return_data[0]
                                                    mem[_5193 + 132] = (Mask(16, 16, _5196) >> 13) + 524288
                                                    mem[_5193 + 164] = 16
                                                    mem[_5193 + 196] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(16, 16, _5196) >> 13) + 524288, 16, block.timestamp
                                            else:
                                                if uint16(sha3(mem[_5194 + 32 len mem[_5194]])) < 2623:
                                                    if not Mask(16, 16, sha3(mem[_5194 + 32 len mem[_5194]])) >> 16:
                                                        mem[_5193 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5193 + 100] = ext_call.return_data[0]
                                                        mem[_5193 + 132] = 131072
                                                        mem[_5193 + 164] = 8
                                                        mem[_5193 + 196] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], 131072, 8, block.timestamp
                                                    else:
                                                        if Mask(16, 16, sha3(mem[_5194 + 32 len mem[_5194]])) >> 14 / Mask(16, 16, sha3(mem[_5194 + 32 len mem[_5194]])) >> 16 != 4:
                                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5193 + 197 len 31]
                                                        mem[_5193 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5193 + 100] = ext_call.return_data[0]
                                                        mem[_5193 + 132] = (Mask(16, 16, _5196) >> 14) + 131072
                                                        mem[_5193 + 164] = 8
                                                        mem[_5193 + 196] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(16, 16, _5196) >> 14) + 131072, 8, block.timestamp
                                                else:
                                                    if uint16(sha3(mem[_5194 + 32 len mem[_5194]])) < 9177:
                                                        mem[_5193 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5193 + 100] = ext_call.return_data[0]
                                                        mem[_5193 + 132] = (Mask(16, 16, _5196) >> 16) + 16384
                                                        mem[_5193 + 164] = 4
                                                        mem[_5193 + 196] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(16, 16, _5196) >> 16) + 16384, 4, block.timestamp
                                                    else:
                                                        mem[64] = _5193 + 160
                                                        mem[_5193 + 96] = 26
                                                        mem[_5193 + 128] = 'SafeMath: division by zero'
                                                        mem[_5193 + 160] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5193 + 164] = ext_call.return_data[0]
                                                        if uint16(sha3(mem[_5194 + 32 len mem[_5194]])) >= 25561:
                                                            mem[_5193 + 196] = (Mask(8, 24, _5196) >> 24) + 1
                                                            mem[_5193 + 228] = 1
                                                            mem[_5193 + 260] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], (Mask(8, 24, _5196) >> 24) + 1, 1, block.timestamp
                                                        else:
                                                            mem[_5193 + 196] = (Mask(13, 19, _5196) >> 19) + 512
                                                            mem[_5193 + 228] = 2
                                                            mem[_5193 + 260] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], (Mask(13, 19, _5196) >> 19) + 512, 2, block.timestamp
                                        else:
                                            mem[_5193 + 96] = 30
                                            mem[_5193 + 128] = 'SafeMath: subtraction overflow'
                                            if uint64(ext_call.return_data[0]) >> 192 > 30:
                                                mem[_5193 + 160] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[_5193 + 164] = 32
                                                idx = 32
                                                while idx < 30:
                                                    mem[idx + _5193 + 228] = mem[idx + _5193 + 128]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            mem[64] = _5193 + 224
                                            mem[_5193 + 160] = 26
                                            mem[_5193 + 192] = 'SafeMath: division by zero'
                                            if not -(uint64(ext_call.return_data[0]) >> 192) + 30:
                                                mem[_5193 + 224] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[_5193 + 228] = 32
                                                idx = 0
                                                while idx < 26:
                                                    mem[idx + _5193 + 292] = mem[idx + _5193 + 192]
                                                    idx = idx + 32
                                                    continue 
                                                mem[_5193 + 292] = mem[_5193 + 298 len 26]
                                                revert with 0, 32, 26, mem[_5193 + 292]
                                            if uint16(_5196) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 656:
                                                if not Mask(16, 16, _5196) >> 16:
                                                    mem[_5193 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5193 + 228] = ext_call.return_data[0]
                                                    mem[_5193 + 260] = 524288
                                                    mem[_5193 + 292] = 16
                                                    mem[_5193 + 324] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], 524288, 16, block.timestamp
                                                else:
                                                    if Mask(16, 16, _5196) >> 13 / Mask(16, 16, _5196) >> 16 != 8:
                                                        revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5193 + 325 len 31]
                                                    mem[_5193 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5193 + 228] = ext_call.return_data[0]
                                                    mem[_5193 + 260] = (Mask(16, 16, _5196) >> 13) + 524288
                                                    mem[_5193 + 292] = 16
                                                    mem[_5193 + 324] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(16, 16, _5196) >> 13) + 524288, 16, block.timestamp
                                            else:
                                                if uint16(_5196) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 2623:
                                                    if not Mask(16, 16, _5196) >> 16:
                                                        mem[_5193 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5193 + 228] = ext_call.return_data[0]
                                                        mem[_5193 + 260] = 131072
                                                        mem[_5193 + 292] = 8
                                                        mem[_5193 + 324] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], 131072, 8, block.timestamp
                                                    else:
                                                        if Mask(16, 16, _5196) >> 14 / Mask(16, 16, _5196) >> 16 != 4:
                                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5193 + 325 len 31]
                                                        mem[_5193 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5193 + 228] = ext_call.return_data[0]
                                                        mem[_5193 + 260] = (Mask(16, 16, _5196) >> 14) + 131072
                                                        mem[_5193 + 292] = 8
                                                        mem[_5193 + 324] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(16, 16, _5196) >> 14) + 131072, 8, block.timestamp
                                                else:
                                                    if uint16(_5196) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 9177:
                                                        mem[_5193 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5193 + 228] = ext_call.return_data[0]
                                                        mem[_5193 + 260] = (Mask(16, 16, _5196) >> 16) + 16384
                                                        mem[_5193 + 292] = 4
                                                        mem[_5193 + 324] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(16, 16, _5196) >> 16) + 16384, 4, block.timestamp
                                                    else:
                                                        mem[64] = _5193 + 288
                                                        mem[_5193 + 224] = 26
                                                        mem[_5193 + 256] = 'SafeMath: division by zero'
                                                        mem[_5193 + 288] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5193 + 292] = ext_call.return_data[0]
                                                        if uint16(_5196) / -(uint64(ext_call.return_data[0]) >> 192) + 30 >= 25561:
                                                            mem[_5193 + 324] = (Mask(8, 24, _5196) >> 24) + 1
                                                            mem[_5193 + 356] = 1
                                                            mem[_5193 + 388] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], (Mask(8, 24, _5196) >> 24) + 1, 1, block.timestamp
                                                        else:
                                                            mem[_5193 + 324] = (Mask(13, 19, _5196) >> 19) + 512
                                                            mem[_5193 + 356] = 2
                                                            mem[_5193 + 388] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], (Mask(13, 19, _5196) >> 19) + 512, 2, block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if ext_call.return_data[32] + block.timestamp < block.timestamp:
                                    revert with 0, 'SafeMath: addition overflow'
                                if not arg5:
                                    emit 0x29ed85fa: arg5, ext_call.return_data[32] + block.timestamp, arg2, ext_call.return_data[0]
                                    mem[mem[64]] = 0x9a43573c00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = arg1
                                    mem[mem[64] + 36] = ext_call.return_data[0]
                                    mem[mem[64] + 68] = ext_call.return_data[32] + block.timestamp
                                    require ext_code.size(erc721ContractAddress)
                                    call erc721ContractAddress.transferNewToken(bytes32 arg1, uint256 arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args arg1, ext_call.return_data[0], ext_call.return_data[32] + block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not arg2:
                                        mem[0] = cd[((32 * idx) + arg4 + 36)]
                                        mem[32] = sha3(arg3, 17)
                                        if not stor17[arg3][cd[((32 * idx) + arg4 + 36)]]:
                                            revert with 0, 'collectible must be on sale'
                                        if ext_call.return_data[64]:
                                            mem[mem[64]] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = ext_call.return_data[0]
                                            mem[mem[64] + 36] = ext_call.return_data[64]
                                            mem[mem[64] + 68] = 0
                                            mem[mem[64] + 100] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], ext_call.return_data[64], 0, block.timestamp
                                        else:
                                            _5519 = mem[64]
                                            mem[mem[64] + 32] = ext_call.return_data[0]
                                            mem[mem[64] + 64] = block.timestamp
                                            _5520 = mem[64]
                                            mem[mem[64]] = 64
                                            mem[64] = mem[64] + 96
                                            _5522 = sha3(mem[_5520 + 32 len mem[_5520]])
                                            if uint64(ext_call.return_data[0]) >> 192 >= 30:
                                                if uint16(sha3(mem[_5520 + 32 len mem[_5520]])) < 656:
                                                    if not Mask(16, 16, sha3(mem[_5520 + 32 len mem[_5520]])) >> 16:
                                                        mem[_5519 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5519 + 100] = ext_call.return_data[0]
                                                        mem[_5519 + 132] = 524288
                                                        mem[_5519 + 164] = 16
                                                        mem[_5519 + 196] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], 524288, 16, block.timestamp
                                                    else:
                                                        if Mask(16, 16, sha3(mem[_5520 + 32 len mem[_5520]])) >> 13 / Mask(16, 16, sha3(mem[_5520 + 32 len mem[_5520]])) >> 16 != 8:
                                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5519 + 197 len 31]
                                                        mem[_5519 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5519 + 100] = ext_call.return_data[0]
                                                        mem[_5519 + 132] = (Mask(16, 16, _5522) >> 13) + 524288
                                                        mem[_5519 + 164] = 16
                                                        mem[_5519 + 196] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(16, 16, _5522) >> 13) + 524288, 16, block.timestamp
                                                else:
                                                    if uint16(sha3(mem[_5520 + 32 len mem[_5520]])) < 2623:
                                                        if not Mask(16, 16, sha3(mem[_5520 + 32 len mem[_5520]])) >> 16:
                                                            mem[_5519 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                            mem[_5519 + 100] = ext_call.return_data[0]
                                                            mem[_5519 + 132] = 131072
                                                            mem[_5519 + 164] = 8
                                                            mem[_5519 + 196] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], 131072, 8, block.timestamp
                                                        else:
                                                            if Mask(16, 16, sha3(mem[_5520 + 32 len mem[_5520]])) >> 14 / Mask(16, 16, sha3(mem[_5520 + 32 len mem[_5520]])) >> 16 != 4:
                                                                revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5519 + 197 len 31]
                                                            mem[_5519 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                            mem[_5519 + 100] = ext_call.return_data[0]
                                                            mem[_5519 + 132] = (Mask(16, 16, _5522) >> 14) + 131072
                                                            mem[_5519 + 164] = 8
                                                            mem[_5519 + 196] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], (Mask(16, 16, _5522) >> 14) + 131072, 8, block.timestamp
                                                    else:
                                                        if uint16(sha3(mem[_5520 + 32 len mem[_5520]])) < 9177:
                                                            mem[_5519 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                            mem[_5519 + 100] = ext_call.return_data[0]
                                                            mem[_5519 + 132] = (Mask(16, 16, _5522) >> 16) + 16384
                                                            mem[_5519 + 164] = 4
                                                            mem[_5519 + 196] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], (Mask(16, 16, _5522) >> 16) + 16384, 4, block.timestamp
                                                        else:
                                                            mem[64] = _5519 + 160
                                                            mem[_5519 + 96] = 26
                                                            mem[_5519 + 128] = 'SafeMath: division by zero'
                                                            mem[_5519 + 160] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                            mem[_5519 + 164] = ext_call.return_data[0]
                                                            if uint16(sha3(mem[_5520 + 32 len mem[_5520]])) >= 25561:
                                                                mem[_5519 + 196] = (Mask(8, 24, _5522) >> 24) + 1
                                                                mem[_5519 + 228] = 1
                                                                mem[_5519 + 260] = block.timestamp
                                                                require ext_code.size(erc721ContractAddress)
                                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                     gas gas_remaining wei
                                                                    args ext_call.return_data[0], (Mask(8, 24, _5522) >> 24) + 1, 1, block.timestamp
                                                            else:
                                                                mem[_5519 + 196] = (Mask(13, 19, _5522) >> 19) + 512
                                                                mem[_5519 + 228] = 2
                                                                mem[_5519 + 260] = block.timestamp
                                                                require ext_code.size(erc721ContractAddress)
                                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                     gas gas_remaining wei
                                                                    args ext_call.return_data[0], (Mask(13, 19, _5522) >> 19) + 512, 2, block.timestamp
                                            else:
                                                mem[_5519 + 96] = 30
                                                mem[_5519 + 128] = 'SafeMath: subtraction overflow'
                                                if uint64(ext_call.return_data[0]) >> 192 > 30:
                                                    mem[_5519 + 160] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[_5519 + 164] = 32
                                                    idx = 32
                                                    while idx < 30:
                                                        mem[idx + _5519 + 228] = mem[idx + _5519 + 128]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                mem[64] = _5519 + 224
                                                mem[_5519 + 160] = 26
                                                mem[_5519 + 192] = 'SafeMath: division by zero'
                                                if not -(uint64(ext_call.return_data[0]) >> 192) + 30:
                                                    mem[_5519 + 224] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[_5519 + 228] = 32
                                                    idx = 0
                                                    while idx < 26:
                                                        mem[idx + _5519 + 292] = mem[idx + _5519 + 192]
                                                        idx = idx + 32
                                                        continue 
                                                    mem[_5519 + 292] = mem[_5519 + 298 len 26]
                                                    revert with 0, 32, 26, mem[_5519 + 292]
                                                if uint16(_5522) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 656:
                                                    if not Mask(16, 16, _5522) >> 16:
                                                        mem[_5519 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5519 + 228] = ext_call.return_data[0]
                                                        mem[_5519 + 260] = 524288
                                                        mem[_5519 + 292] = 16
                                                        mem[_5519 + 324] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], 524288, 16, block.timestamp
                                                    else:
                                                        if Mask(16, 16, _5522) >> 13 / Mask(16, 16, _5522) >> 16 != 8:
                                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5519 + 325 len 31]
                                                        mem[_5519 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5519 + 228] = ext_call.return_data[0]
                                                        mem[_5519 + 260] = (Mask(16, 16, _5522) >> 13) + 524288
                                                        mem[_5519 + 292] = 16
                                                        mem[_5519 + 324] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(16, 16, _5522) >> 13) + 524288, 16, block.timestamp
                                                else:
                                                    if uint16(_5522) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 2623:
                                                        if not Mask(16, 16, _5522) >> 16:
                                                            mem[_5519 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                            mem[_5519 + 228] = ext_call.return_data[0]
                                                            mem[_5519 + 260] = 131072
                                                            mem[_5519 + 292] = 8
                                                            mem[_5519 + 324] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], 131072, 8, block.timestamp
                                                        else:
                                                            if Mask(16, 16, _5522) >> 14 / Mask(16, 16, _5522) >> 16 != 4:
                                                                revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5519 + 325 len 31]
                                                            mem[_5519 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                            mem[_5519 + 228] = ext_call.return_data[0]
                                                            mem[_5519 + 260] = (Mask(16, 16, _5522) >> 14) + 131072
                                                            mem[_5519 + 292] = 8
                                                            mem[_5519 + 324] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], (Mask(16, 16, _5522) >> 14) + 131072, 8, block.timestamp
                                                    else:
                                                        if uint16(_5522) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 9177:
                                                            mem[_5519 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                            mem[_5519 + 228] = ext_call.return_data[0]
                                                            mem[_5519 + 260] = (Mask(16, 16, _5522) >> 16) + 16384
                                                            mem[_5519 + 292] = 4
                                                            mem[_5519 + 324] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], (Mask(16, 16, _5522) >> 16) + 16384, 4, block.timestamp
                                                        else:
                                                            mem[64] = _5519 + 288
                                                            mem[_5519 + 224] = 26
                                                            mem[_5519 + 256] = 'SafeMath: division by zero'
                                                            mem[_5519 + 288] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                            mem[_5519 + 292] = ext_call.return_data[0]
                                                            if uint16(_5522) / -(uint64(ext_call.return_data[0]) >> 192) + 30 >= 25561:
                                                                mem[_5519 + 324] = (Mask(8, 24, _5522) >> 24) + 1
                                                                mem[_5519 + 356] = 1
                                                                mem[_5519 + 388] = block.timestamp
                                                                require ext_code.size(erc721ContractAddress)
                                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                     gas gas_remaining wei
                                                                    args ext_call.return_data[0], (Mask(8, 24, _5522) >> 24) + 1, 1, block.timestamp
                                                            else:
                                                                mem[_5519 + 324] = (Mask(13, 19, _5522) >> 19) + 512
                                                                mem[_5519 + 356] = 2
                                                                mem[_5519 + 388] = block.timestamp
                                                                require ext_code.size(erc721ContractAddress)
                                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                     gas gas_remaining wei
                                                                    args ext_call.return_data[0], (Mask(13, 19, _5522) >> 19) + 512, 2, block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    mem[32] = sha3(arg2, 19)
                                    purchaseIdtoTokenIds[arg2][arg5].field_0++
                                    mem[0] = sha3(arg5, sha3(arg2, 19))
                                    purchaseIdtoTokenIds[arg2][arg5][purchaseIdtoTokenIds[arg2][arg5].field_0].field_0 = ext_call.return_data[0]
                                    emit 0x29ed85fa: arg5, ext_call.return_data[32] + block.timestamp, arg2, ext_call.return_data[0]
                                    mem[mem[64]] = 0x9a43573c00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = arg1
                                    mem[mem[64] + 36] = ext_call.return_data[0]
                                    mem[mem[64] + 68] = ext_call.return_data[32] + block.timestamp
                                    require ext_code.size(erc721ContractAddress)
                                    call erc721ContractAddress.transferNewToken(bytes32 arg1, uint256 arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args arg1, ext_call.return_data[0], ext_call.return_data[32] + block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not arg2:
                                        mem[0] = cd[((32 * idx) + arg4 + 36)]
                                        mem[32] = sha3(arg3, 17)
                                        if not stor17[arg3][cd[((32 * idx) + arg4 + 36)]]:
                                            revert with 0, 'collectible must be on sale'
                                        if ext_call.return_data[64]:
                                            mem[mem[64]] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = ext_call.return_data[0]
                                            mem[mem[64] + 36] = ext_call.return_data[64]
                                            mem[mem[64] + 68] = 0
                                            mem[mem[64] + 100] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], ext_call.return_data[64], 0, block.timestamp
                                        else:
                                            _5623 = mem[64]
                                            mem[mem[64] + 32] = ext_call.return_data[0]
                                            mem[mem[64] + 64] = block.timestamp
                                            _5624 = mem[64]
                                            mem[mem[64]] = 64
                                            mem[64] = mem[64] + 96
                                            _5626 = sha3(mem[_5624 + 32 len mem[_5624]])
                                            if uint64(ext_call.return_data[0]) >> 192 >= 30:
                                                if uint16(sha3(mem[_5624 + 32 len mem[_5624]])) < 656:
                                                    if not Mask(16, 16, sha3(mem[_5624 + 32 len mem[_5624]])) >> 16:
                                                        mem[_5623 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5623 + 100] = ext_call.return_data[0]
                                                        mem[_5623 + 132] = 524288
                                                        mem[_5623 + 164] = 16
                                                        mem[_5623 + 196] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], 524288, 16, block.timestamp
                                                    else:
                                                        if Mask(16, 16, sha3(mem[_5624 + 32 len mem[_5624]])) >> 13 / Mask(16, 16, sha3(mem[_5624 + 32 len mem[_5624]])) >> 16 != 8:
                                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5623 + 197 len 31]
                                                        mem[_5623 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5623 + 100] = ext_call.return_data[0]
                                                        mem[_5623 + 132] = (Mask(16, 16, _5626) >> 13) + 524288
                                                        mem[_5623 + 164] = 16
                                                        mem[_5623 + 196] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(16, 16, _5626) >> 13) + 524288, 16, block.timestamp
                                                else:
                                                    if uint16(sha3(mem[_5624 + 32 len mem[_5624]])) < 2623:
                                                        if not Mask(16, 16, sha3(mem[_5624 + 32 len mem[_5624]])) >> 16:
                                                            mem[_5623 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                            mem[_5623 + 100] = ext_call.return_data[0]
                                                            mem[_5623 + 132] = 131072
                                                            mem[_5623 + 164] = 8
                                                            mem[_5623 + 196] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], 131072, 8, block.timestamp
                                                        else:
                                                            if Mask(16, 16, sha3(mem[_5624 + 32 len mem[_5624]])) >> 14 / Mask(16, 16, sha3(mem[_5624 + 32 len mem[_5624]])) >> 16 != 4:
                                                                revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5623 + 197 len 31]
                                                            mem[_5623 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                            mem[_5623 + 100] = ext_call.return_data[0]
                                                            mem[_5623 + 132] = (Mask(16, 16, _5626) >> 14) + 131072
                                                            mem[_5623 + 164] = 8
                                                            mem[_5623 + 196] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], (Mask(16, 16, _5626) >> 14) + 131072, 8, block.timestamp
                                                    else:
                                                        if uint16(sha3(mem[_5624 + 32 len mem[_5624]])) < 9177:
                                                            mem[_5623 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                            mem[_5623 + 100] = ext_call.return_data[0]
                                                            mem[_5623 + 132] = (Mask(16, 16, _5626) >> 16) + 16384
                                                            mem[_5623 + 164] = 4
                                                            mem[_5623 + 196] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], (Mask(16, 16, _5626) >> 16) + 16384, 4, block.timestamp
                                                        else:
                                                            mem[64] = _5623 + 160
                                                            mem[_5623 + 96] = 26
                                                            mem[_5623 + 128] = 'SafeMath: division by zero'
                                                            mem[_5623 + 160] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                            mem[_5623 + 164] = ext_call.return_data[0]
                                                            if uint16(sha3(mem[_5624 + 32 len mem[_5624]])) >= 25561:
                                                                mem[_5623 + 196] = (Mask(8, 24, _5626) >> 24) + 1
                                                                mem[_5623 + 228] = 1
                                                                mem[_5623 + 260] = block.timestamp
                                                                require ext_code.size(erc721ContractAddress)
                                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                     gas gas_remaining wei
                                                                    args ext_call.return_data[0], (Mask(8, 24, _5626) >> 24) + 1, 1, block.timestamp
                                                            else:
                                                                mem[_5623 + 196] = (Mask(13, 19, _5626) >> 19) + 512
                                                                mem[_5623 + 228] = 2
                                                                mem[_5623 + 260] = block.timestamp
                                                                require ext_code.size(erc721ContractAddress)
                                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                     gas gas_remaining wei
                                                                    args ext_call.return_data[0], (Mask(13, 19, _5626) >> 19) + 512, 2, block.timestamp
                                            else:
                                                mem[_5623 + 96] = 30
                                                mem[_5623 + 128] = 'SafeMath: subtraction overflow'
                                                if uint64(ext_call.return_data[0]) >> 192 > 30:
                                                    mem[_5623 + 160] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[_5623 + 164] = 32
                                                    idx = 32
                                                    while idx < 30:
                                                        mem[idx + _5623 + 228] = mem[idx + _5623 + 128]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                mem[64] = _5623 + 224
                                                mem[_5623 + 160] = 26
                                                mem[_5623 + 192] = 'SafeMath: division by zero'
                                                if not -(uint64(ext_call.return_data[0]) >> 192) + 30:
                                                    mem[_5623 + 224] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[_5623 + 228] = 32
                                                    idx = 0
                                                    while idx < 26:
                                                        mem[idx + _5623 + 292] = mem[idx + _5623 + 192]
                                                        idx = idx + 32
                                                        continue 
                                                    mem[_5623 + 292] = mem[_5623 + 298 len 26]
                                                    revert with 0, 32, 26, mem[_5623 + 292]
                                                if uint16(_5626) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 656:
                                                    if not Mask(16, 16, _5626) >> 16:
                                                        mem[_5623 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5623 + 228] = ext_call.return_data[0]
                                                        mem[_5623 + 260] = 524288
                                                        mem[_5623 + 292] = 16
                                                        mem[_5623 + 324] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], 524288, 16, block.timestamp
                                                    else:
                                                        if Mask(16, 16, _5626) >> 13 / Mask(16, 16, _5626) >> 16 != 8:
                                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5623 + 325 len 31]
                                                        mem[_5623 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5623 + 228] = ext_call.return_data[0]
                                                        mem[_5623 + 260] = (Mask(16, 16, _5626) >> 13) + 524288
                                                        mem[_5623 + 292] = 16
                                                        mem[_5623 + 324] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(16, 16, _5626) >> 13) + 524288, 16, block.timestamp
                                                else:
                                                    if uint16(_5626) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 2623:
                                                        if not Mask(16, 16, _5626) >> 16:
                                                            mem[_5623 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                            mem[_5623 + 228] = ext_call.return_data[0]
                                                            mem[_5623 + 260] = 131072
                                                            mem[_5623 + 292] = 8
                                                            mem[_5623 + 324] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], 131072, 8, block.timestamp
                                                        else:
                                                            if Mask(16, 16, _5626) >> 14 / Mask(16, 16, _5626) >> 16 != 4:
                                                                revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5623 + 325 len 31]
                                                            mem[_5623 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                            mem[_5623 + 228] = ext_call.return_data[0]
                                                            mem[_5623 + 260] = (Mask(16, 16, _5626) >> 14) + 131072
                                                            mem[_5623 + 292] = 8
                                                            mem[_5623 + 324] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], (Mask(16, 16, _5626) >> 14) + 131072, 8, block.timestamp
                                                    else:
                                                        if uint16(_5626) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 9177:
                                                            mem[_5623 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                            mem[_5623 + 228] = ext_call.return_data[0]
                                                            mem[_5623 + 260] = (Mask(16, 16, _5626) >> 16) + 16384
                                                            mem[_5623 + 292] = 4
                                                            mem[_5623 + 324] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], (Mask(16, 16, _5626) >> 16) + 16384, 4, block.timestamp
                                                        else:
                                                            mem[64] = _5623 + 288
                                                            mem[_5623 + 224] = 26
                                                            mem[_5623 + 256] = 'SafeMath: division by zero'
                                                            mem[_5623 + 288] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                            mem[_5623 + 292] = ext_call.return_data[0]
                                                            if uint16(_5626) / -(uint64(ext_call.return_data[0]) >> 192) + 30 >= 25561:
                                                                mem[_5623 + 324] = (Mask(8, 24, _5626) >> 24) + 1
                                                                mem[_5623 + 356] = 1
                                                                mem[_5623 + 388] = block.timestamp
                                                                require ext_code.size(erc721ContractAddress)
                                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                     gas gas_remaining wei
                                                                    args ext_call.return_data[0], (Mask(8, 24, _5626) >> 24) + 1, 1, block.timestamp
                                                            else:
                                                                mem[_5623 + 324] = (Mask(13, 19, _5626) >> 19) + 512
                                                                mem[_5623 + 356] = 2
                                                                mem[_5623 + 388] = block.timestamp
                                                                require ext_code.size(erc721ContractAddress)
                                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                     gas gas_remaining wei
                                                                    args ext_call.return_data[0], (Mask(13, 19, _5626) >> 19) + 512, 2, block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                            require idx < mem[96]
                            mem[(32 * idx) + 128] = ext_call.return_data[0]
                            idx = idx + 1
                            continue 
                else:
                    call msg.sender with:
                       value gasGrantAmount wei
                         gas 2300 * is_zero(value) wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[100] = msg.sender
                    mem[132] = bool(ext_call.return_data[0])
                    mem[164] = arg2
                    require ext_code.size(gameContractAddress)
                    staticcall gameContractAddress.isValidCaller(address arg1, bool arg2, uint256 arg3) with:
                            gas gas_remaining wei
                           args msg.sender, bool(ext_call.return_data[0]), arg2
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        revert with 0, 'admin, operator, or worker'
                    require arg4.length <= test266151307()
                    mem[96] = arg4.length
                    mem[64] = (32 * arg4.length) + 128
                    if not arg4.length:
                        idx = 0
                        while idx < arg4.length:
                            require ext_code.size(gameContractAddress)
                            call gameContractAddress.createTokenFromCard(uint256 arg1, uint256 arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args arg2, arg3, cd[((32 * idx) + arg4 + 36)]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            if arg5 == -1:
                                emit 0x29ed85fa: arg5, 0, arg2, ext_call.return_data[0]
                                mem[mem[64]] = 0x9a43573c00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = arg1
                                mem[mem[64] + 36] = ext_call.return_data[0]
                                mem[mem[64] + 68] = 0
                                require ext_code.size(erc721ContractAddress)
                                call erc721ContractAddress.transferNewToken(bytes32 arg1, uint256 arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args arg1, ext_call.return_data[0], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if not arg2:
                                    mem[0] = cd[((32 * idx) + arg4 + 36)]
                                    mem[32] = sha3(arg3, 17)
                                    if not stor17[arg3][cd[((32 * idx) + arg4 + 36)]]:
                                        revert with 0, 'collectible must be on sale'
                                    if ext_call.return_data[64]:
                                        mem[mem[64]] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = ext_call.return_data[0]
                                        mem[mem[64] + 36] = ext_call.return_data[64]
                                        mem[mem[64] + 68] = 0
                                        mem[mem[64] + 100] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], ext_call.return_data[64], 0, block.timestamp
                                    else:
                                        _5197 = mem[64]
                                        mem[mem[64] + 32] = ext_call.return_data[0]
                                        mem[mem[64] + 64] = block.timestamp
                                        _5198 = mem[64]
                                        mem[mem[64]] = 64
                                        mem[64] = mem[64] + 96
                                        _5200 = sha3(mem[_5198 + 32 len mem[_5198]])
                                        if uint64(ext_call.return_data[0]) >> 192 >= 30:
                                            if uint16(sha3(mem[_5198 + 32 len mem[_5198]])) < 656:
                                                if not Mask(16, 16, sha3(mem[_5198 + 32 len mem[_5198]])) >> 16:
                                                    mem[_5197 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5197 + 100] = ext_call.return_data[0]
                                                    mem[_5197 + 132] = 524288
                                                    mem[_5197 + 164] = 16
                                                    mem[_5197 + 196] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], 524288, 16, block.timestamp
                                                else:
                                                    if Mask(16, 16, sha3(mem[_5198 + 32 len mem[_5198]])) >> 13 / Mask(16, 16, sha3(mem[_5198 + 32 len mem[_5198]])) >> 16 != 8:
                                                        revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5197 + 197 len 31]
                                                    mem[_5197 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5197 + 100] = ext_call.return_data[0]
                                                    mem[_5197 + 132] = (Mask(16, 16, _5200) >> 13) + 524288
                                                    mem[_5197 + 164] = 16
                                                    mem[_5197 + 196] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(16, 16, _5200) >> 13) + 524288, 16, block.timestamp
                                            else:
                                                if uint16(sha3(mem[_5198 + 32 len mem[_5198]])) < 2623:
                                                    if not Mask(16, 16, sha3(mem[_5198 + 32 len mem[_5198]])) >> 16:
                                                        mem[_5197 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5197 + 100] = ext_call.return_data[0]
                                                        mem[_5197 + 132] = 131072
                                                        mem[_5197 + 164] = 8
                                                        mem[_5197 + 196] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], 131072, 8, block.timestamp
                                                    else:
                                                        if Mask(16, 16, sha3(mem[_5198 + 32 len mem[_5198]])) >> 14 / Mask(16, 16, sha3(mem[_5198 + 32 len mem[_5198]])) >> 16 != 4:
                                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5197 + 197 len 31]
                                                        mem[_5197 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5197 + 100] = ext_call.return_data[0]
                                                        mem[_5197 + 132] = (Mask(16, 16, _5200) >> 14) + 131072
                                                        mem[_5197 + 164] = 8
                                                        mem[_5197 + 196] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(16, 16, _5200) >> 14) + 131072, 8, block.timestamp
                                                else:
                                                    if uint16(sha3(mem[_5198 + 32 len mem[_5198]])) < 9177:
                                                        mem[_5197 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5197 + 100] = ext_call.return_data[0]
                                                        mem[_5197 + 132] = (Mask(16, 16, _5200) >> 16) + 16384
                                                        mem[_5197 + 164] = 4
                                                        mem[_5197 + 196] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(16, 16, _5200) >> 16) + 16384, 4, block.timestamp
                                                    else:
                                                        mem[64] = _5197 + 160
                                                        mem[_5197 + 96] = 26
                                                        mem[_5197 + 128] = 'SafeMath: division by zero'
                                                        mem[_5197 + 160] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5197 + 164] = ext_call.return_data[0]
                                                        if uint16(sha3(mem[_5198 + 32 len mem[_5198]])) >= 25561:
                                                            mem[_5197 + 196] = (Mask(8, 24, _5200) >> 24) + 1
                                                            mem[_5197 + 228] = 1
                                                            mem[_5197 + 260] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], (Mask(8, 24, _5200) >> 24) + 1, 1, block.timestamp
                                                        else:
                                                            mem[_5197 + 196] = (Mask(13, 19, _5200) >> 19) + 512
                                                            mem[_5197 + 228] = 2
                                                            mem[_5197 + 260] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], (Mask(13, 19, _5200) >> 19) + 512, 2, block.timestamp
                                        else:
                                            mem[_5197 + 96] = 30
                                            mem[_5197 + 128] = 'SafeMath: subtraction overflow'
                                            if uint64(ext_call.return_data[0]) >> 192 > 30:
                                                mem[_5197 + 160] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[_5197 + 164] = 32
                                                idx = 32
                                                while idx < 30:
                                                    mem[idx + _5197 + 228] = mem[idx + _5197 + 128]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            mem[64] = _5197 + 224
                                            mem[_5197 + 160] = 26
                                            mem[_5197 + 192] = 'SafeMath: division by zero'
                                            if not -(uint64(ext_call.return_data[0]) >> 192) + 30:
                                                mem[_5197 + 224] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[_5197 + 228] = 32
                                                idx = 0
                                                while idx < 26:
                                                    mem[idx + _5197 + 292] = mem[idx + _5197 + 192]
                                                    idx = idx + 32
                                                    continue 
                                                mem[_5197 + 292] = mem[_5197 + 298 len 26]
                                                revert with 0, 32, 26, mem[_5197 + 292]
                                            if uint16(_5200) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 656:
                                                if not Mask(16, 16, _5200) >> 16:
                                                    mem[_5197 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5197 + 228] = ext_call.return_data[0]
                                                    mem[_5197 + 260] = 524288
                                                    mem[_5197 + 292] = 16
                                                    mem[_5197 + 324] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], 524288, 16, block.timestamp
                                                else:
                                                    if Mask(16, 16, _5200) >> 13 / Mask(16, 16, _5200) >> 16 != 8:
                                                        revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5197 + 325 len 31]
                                                    mem[_5197 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5197 + 228] = ext_call.return_data[0]
                                                    mem[_5197 + 260] = (Mask(16, 16, _5200) >> 13) + 524288
                                                    mem[_5197 + 292] = 16
                                                    mem[_5197 + 324] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(16, 16, _5200) >> 13) + 524288, 16, block.timestamp
                                            else:
                                                if uint16(_5200) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 2623:
                                                    if not Mask(16, 16, _5200) >> 16:
                                                        mem[_5197 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5197 + 228] = ext_call.return_data[0]
                                                        mem[_5197 + 260] = 131072
                                                        mem[_5197 + 292] = 8
                                                        mem[_5197 + 324] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], 131072, 8, block.timestamp
                                                    else:
                                                        if Mask(16, 16, _5200) >> 14 / Mask(16, 16, _5200) >> 16 != 4:
                                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5197 + 325 len 31]
                                                        mem[_5197 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5197 + 228] = ext_call.return_data[0]
                                                        mem[_5197 + 260] = (Mask(16, 16, _5200) >> 14) + 131072
                                                        mem[_5197 + 292] = 8
                                                        mem[_5197 + 324] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(16, 16, _5200) >> 14) + 131072, 8, block.timestamp
                                                else:
                                                    if uint16(_5200) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 9177:
                                                        mem[_5197 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5197 + 228] = ext_call.return_data[0]
                                                        mem[_5197 + 260] = (Mask(16, 16, _5200) >> 16) + 16384
                                                        mem[_5197 + 292] = 4
                                                        mem[_5197 + 324] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(16, 16, _5200) >> 16) + 16384, 4, block.timestamp
                                                    else:
                                                        mem[64] = _5197 + 288
                                                        mem[_5197 + 224] = 26
                                                        mem[_5197 + 256] = 'SafeMath: division by zero'
                                                        mem[_5197 + 288] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5197 + 292] = ext_call.return_data[0]
                                                        if uint16(_5200) / -(uint64(ext_call.return_data[0]) >> 192) + 30 >= 25561:
                                                            mem[_5197 + 324] = (Mask(8, 24, _5200) >> 24) + 1
                                                            mem[_5197 + 356] = 1
                                                            mem[_5197 + 388] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], (Mask(8, 24, _5200) >> 24) + 1, 1, block.timestamp
                                                        else:
                                                            mem[_5197 + 324] = (Mask(13, 19, _5200) >> 19) + 512
                                                            mem[_5197 + 356] = 2
                                                            mem[_5197 + 388] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], (Mask(13, 19, _5200) >> 19) + 512, 2, block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if ext_call.return_data[32] + block.timestamp < block.timestamp:
                                    revert with 0, 'SafeMath: addition overflow'
                                if not arg5:
                                    emit 0x29ed85fa: arg5, ext_call.return_data[32] + block.timestamp, arg2, ext_call.return_data[0]
                                    mem[mem[64]] = 0x9a43573c00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = arg1
                                    mem[mem[64] + 36] = ext_call.return_data[0]
                                    mem[mem[64] + 68] = ext_call.return_data[32] + block.timestamp
                                    require ext_code.size(erc721ContractAddress)
                                    call erc721ContractAddress.transferNewToken(bytes32 arg1, uint256 arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args arg1, ext_call.return_data[0], ext_call.return_data[32] + block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not arg2:
                                        mem[0] = cd[((32 * idx) + arg4 + 36)]
                                        mem[32] = sha3(arg3, 17)
                                        if not stor17[arg3][cd[((32 * idx) + arg4 + 36)]]:
                                            revert with 0, 'collectible must be on sale'
                                        if ext_call.return_data[64]:
                                            mem[mem[64]] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = ext_call.return_data[0]
                                            mem[mem[64] + 36] = ext_call.return_data[64]
                                            mem[mem[64] + 68] = 0
                                            mem[mem[64] + 100] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], ext_call.return_data[64], 0, block.timestamp
                                        else:
                                            _5524 = mem[64]
                                            mem[mem[64] + 32] = ext_call.return_data[0]
                                            mem[mem[64] + 64] = block.timestamp
                                            _5525 = mem[64]
                                            mem[mem[64]] = 64
                                            mem[64] = mem[64] + 96
                                            _5527 = sha3(mem[_5525 + 32 len mem[_5525]])
                                            if uint64(ext_call.return_data[0]) >> 192 >= 30:
                                                if uint16(sha3(mem[_5525 + 32 len mem[_5525]])) < 656:
                                                    if not Mask(16, 16, sha3(mem[_5525 + 32 len mem[_5525]])) >> 16:
                                                        mem[_5524 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5524 + 100] = ext_call.return_data[0]
                                                        mem[_5524 + 132] = 524288
                                                        mem[_5524 + 164] = 16
                                                        mem[_5524 + 196] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], 524288, 16, block.timestamp
                                                    else:
                                                        if Mask(16, 16, sha3(mem[_5525 + 32 len mem[_5525]])) >> 13 / Mask(16, 16, sha3(mem[_5525 + 32 len mem[_5525]])) >> 16 != 8:
                                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5524 + 197 len 31]
                                                        mem[_5524 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5524 + 100] = ext_call.return_data[0]
                                                        mem[_5524 + 132] = (Mask(16, 16, _5527) >> 13) + 524288
                                                        mem[_5524 + 164] = 16
                                                        mem[_5524 + 196] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(16, 16, _5527) >> 13) + 524288, 16, block.timestamp
                                                else:
                                                    if uint16(sha3(mem[_5525 + 32 len mem[_5525]])) < 2623:
                                                        if not Mask(16, 16, sha3(mem[_5525 + 32 len mem[_5525]])) >> 16:
                                                            mem[_5524 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                            mem[_5524 + 100] = ext_call.return_data[0]
                                                            mem[_5524 + 132] = 131072
                                                            mem[_5524 + 164] = 8
                                                            mem[_5524 + 196] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], 131072, 8, block.timestamp
                                                        else:
                                                            if Mask(16, 16, sha3(mem[_5525 + 32 len mem[_5525]])) >> 14 / Mask(16, 16, sha3(mem[_5525 + 32 len mem[_5525]])) >> 16 != 4:
                                                                revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5524 + 197 len 31]
                                                            mem[_5524 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                            mem[_5524 + 100] = ext_call.return_data[0]
                                                            mem[_5524 + 132] = (Mask(16, 16, _5527) >> 14) + 131072
                                                            mem[_5524 + 164] = 8
                                                            mem[_5524 + 196] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], (Mask(16, 16, _5527) >> 14) + 131072, 8, block.timestamp
                                                    else:
                                                        if uint16(sha3(mem[_5525 + 32 len mem[_5525]])) < 9177:
                                                            mem[_5524 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                            mem[_5524 + 100] = ext_call.return_data[0]
                                                            mem[_5524 + 132] = (Mask(16, 16, _5527) >> 16) + 16384
                                                            mem[_5524 + 164] = 4
                                                            mem[_5524 + 196] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], (Mask(16, 16, _5527) >> 16) + 16384, 4, block.timestamp
                                                        else:
                                                            mem[64] = _5524 + 160
                                                            mem[_5524 + 96] = 26
                                                            mem[_5524 + 128] = 'SafeMath: division by zero'
                                                            mem[_5524 + 160] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                            mem[_5524 + 164] = ext_call.return_data[0]
                                                            if uint16(sha3(mem[_5525 + 32 len mem[_5525]])) >= 25561:
                                                                mem[_5524 + 196] = (Mask(8, 24, _5527) >> 24) + 1
                                                                mem[_5524 + 228] = 1
                                                                mem[_5524 + 260] = block.timestamp
                                                                require ext_code.size(erc721ContractAddress)
                                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                     gas gas_remaining wei
                                                                    args ext_call.return_data[0], (Mask(8, 24, _5527) >> 24) + 1, 1, block.timestamp
                                                            else:
                                                                mem[_5524 + 196] = (Mask(13, 19, _5527) >> 19) + 512
                                                                mem[_5524 + 228] = 2
                                                                mem[_5524 + 260] = block.timestamp
                                                                require ext_code.size(erc721ContractAddress)
                                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                     gas gas_remaining wei
                                                                    args ext_call.return_data[0], (Mask(13, 19, _5527) >> 19) + 512, 2, block.timestamp
                                            else:
                                                mem[_5524 + 96] = 30
                                                mem[_5524 + 128] = 'SafeMath: subtraction overflow'
                                                if uint64(ext_call.return_data[0]) >> 192 > 30:
                                                    mem[_5524 + 160] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[_5524 + 164] = 32
                                                    idx = 32
                                                    while idx < 30:
                                                        mem[idx + _5524 + 228] = mem[idx + _5524 + 128]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                mem[64] = _5524 + 224
                                                mem[_5524 + 160] = 26
                                                mem[_5524 + 192] = 'SafeMath: division by zero'
                                                if not -(uint64(ext_call.return_data[0]) >> 192) + 30:
                                                    mem[_5524 + 224] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[_5524 + 228] = 32
                                                    idx = 0
                                                    while idx < 26:
                                                        mem[idx + _5524 + 292] = mem[idx + _5524 + 192]
                                                        idx = idx + 32
                                                        continue 
                                                    mem[_5524 + 292] = mem[_5524 + 298 len 26]
                                                    revert with 0, 32, 26, mem[_5524 + 292]
                                                if uint16(_5527) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 656:
                                                    if not Mask(16, 16, _5527) >> 16:
                                                        mem[_5524 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5524 + 228] = ext_call.return_data[0]
                                                        mem[_5524 + 260] = 524288
                                                        mem[_5524 + 292] = 16
                                                        mem[_5524 + 324] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], 524288, 16, block.timestamp
                                                    else:
                                                        if Mask(16, 16, _5527) >> 13 / Mask(16, 16, _5527) >> 16 != 8:
                                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5524 + 325 len 31]
                                                        mem[_5524 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5524 + 228] = ext_call.return_data[0]
                                                        mem[_5524 + 260] = (Mask(16, 16, _5527) >> 13) + 524288
                                                        mem[_5524 + 292] = 16
                                                        mem[_5524 + 324] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(16, 16, _5527) >> 13) + 524288, 16, block.timestamp
                                                else:
                                                    if uint16(_5527) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 2623:
                                                        if not Mask(16, 16, _5527) >> 16:
                                                            mem[_5524 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                            mem[_5524 + 228] = ext_call.return_data[0]
                                                            mem[_5524 + 260] = 131072
                                                            mem[_5524 + 292] = 8
                                                            mem[_5524 + 324] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], 131072, 8, block.timestamp
                                                        else:
                                                            if Mask(16, 16, _5527) >> 14 / Mask(16, 16, _5527) >> 16 != 4:
                                                                revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5524 + 325 len 31]
                                                            mem[_5524 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                            mem[_5524 + 228] = ext_call.return_data[0]
                                                            mem[_5524 + 260] = (Mask(16, 16, _5527) >> 14) + 131072
                                                            mem[_5524 + 292] = 8
                                                            mem[_5524 + 324] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], (Mask(16, 16, _5527) >> 14) + 131072, 8, block.timestamp
                                                    else:
                                                        if uint16(_5527) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 9177:
                                                            mem[_5524 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                            mem[_5524 + 228] = ext_call.return_data[0]
                                                            mem[_5524 + 260] = (Mask(16, 16, _5527) >> 16) + 16384
                                                            mem[_5524 + 292] = 4
                                                            mem[_5524 + 324] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], (Mask(16, 16, _5527) >> 16) + 16384, 4, block.timestamp
                                                        else:
                                                            mem[64] = _5524 + 288
                                                            mem[_5524 + 224] = 26
                                                            mem[_5524 + 256] = 'SafeMath: division by zero'
                                                            mem[_5524 + 288] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                            mem[_5524 + 292] = ext_call.return_data[0]
                                                            if uint16(_5527) / -(uint64(ext_call.return_data[0]) >> 192) + 30 >= 25561:
                                                                mem[_5524 + 324] = (Mask(8, 24, _5527) >> 24) + 1
                                                                mem[_5524 + 356] = 1
                                                                mem[_5524 + 388] = block.timestamp
                                                                require ext_code.size(erc721ContractAddress)
                                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                     gas gas_remaining wei
                                                                    args ext_call.return_data[0], (Mask(8, 24, _5527) >> 24) + 1, 1, block.timestamp
                                                            else:
                                                                mem[_5524 + 324] = (Mask(13, 19, _5527) >> 19) + 512
                                                                mem[_5524 + 356] = 2
                                                                mem[_5524 + 388] = block.timestamp
                                                                require ext_code.size(erc721ContractAddress)
                                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                     gas gas_remaining wei
                                                                    args ext_call.return_data[0], (Mask(13, 19, _5527) >> 19) + 512, 2, block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    mem[32] = sha3(arg2, 19)
                                    purchaseIdtoTokenIds[arg2][arg5].field_0++
                                    mem[0] = sha3(arg5, sha3(arg2, 19))
                                    purchaseIdtoTokenIds[arg2][arg5][purchaseIdtoTokenIds[arg2][arg5].field_0].field_0 = ext_call.return_data[0]
                                    emit 0x29ed85fa: arg5, ext_call.return_data[32] + block.timestamp, arg2, ext_call.return_data[0]
                                    mem[mem[64]] = 0x9a43573c00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = arg1
                                    mem[mem[64] + 36] = ext_call.return_data[0]
                                    mem[mem[64] + 68] = ext_call.return_data[32] + block.timestamp
                                    require ext_code.size(erc721ContractAddress)
                                    call erc721ContractAddress.transferNewToken(bytes32 arg1, uint256 arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args arg1, ext_call.return_data[0], ext_call.return_data[32] + block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not arg2:
                                        mem[0] = cd[((32 * idx) + arg4 + 36)]
                                        mem[32] = sha3(arg3, 17)
                                        if not stor17[arg3][cd[((32 * idx) + arg4 + 36)]]:
                                            revert with 0, 'collectible must be on sale'
                                        if ext_call.return_data[64]:
                                            mem[mem[64]] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = ext_call.return_data[0]
                                            mem[mem[64] + 36] = ext_call.return_data[64]
                                            mem[mem[64] + 68] = 0
                                            mem[mem[64] + 100] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], ext_call.return_data[64], 0, block.timestamp
                                        else:
                                            _5632 = mem[64]
                                            mem[mem[64] + 32] = ext_call.return_data[0]
                                            mem[mem[64] + 64] = block.timestamp
                                            _5633 = mem[64]
                                            mem[mem[64]] = 64
                                            mem[64] = mem[64] + 96
                                            _5635 = sha3(mem[_5633 + 32 len mem[_5633]])
                                            if uint64(ext_call.return_data[0]) >> 192 >= 30:
                                                if uint16(sha3(mem[_5633 + 32 len mem[_5633]])) < 656:
                                                    if not Mask(16, 16, sha3(mem[_5633 + 32 len mem[_5633]])) >> 16:
                                                        mem[_5632 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5632 + 100] = ext_call.return_data[0]
                                                        mem[_5632 + 132] = 524288
                                                        mem[_5632 + 164] = 16
                                                        mem[_5632 + 196] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], 524288, 16, block.timestamp
                                                    else:
                                                        if Mask(16, 16, sha3(mem[_5633 + 32 len mem[_5633]])) >> 13 / Mask(16, 16, sha3(mem[_5633 + 32 len mem[_5633]])) >> 16 != 8:
                                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5632 + 197 len 31]
                                                        mem[_5632 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5632 + 100] = ext_call.return_data[0]
                                                        mem[_5632 + 132] = (Mask(16, 16, _5635) >> 13) + 524288
                                                        mem[_5632 + 164] = 16
                                                        mem[_5632 + 196] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(16, 16, _5635) >> 13) + 524288, 16, block.timestamp
                                                else:
                                                    if uint16(sha3(mem[_5633 + 32 len mem[_5633]])) < 2623:
                                                        if not Mask(16, 16, sha3(mem[_5633 + 32 len mem[_5633]])) >> 16:
                                                            mem[_5632 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                            mem[_5632 + 100] = ext_call.return_data[0]
                                                            mem[_5632 + 132] = 131072
                                                            mem[_5632 + 164] = 8
                                                            mem[_5632 + 196] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], 131072, 8, block.timestamp
                                                        else:
                                                            if Mask(16, 16, sha3(mem[_5633 + 32 len mem[_5633]])) >> 14 / Mask(16, 16, sha3(mem[_5633 + 32 len mem[_5633]])) >> 16 != 4:
                                                                revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5632 + 197 len 31]
                                                            mem[_5632 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                            mem[_5632 + 100] = ext_call.return_data[0]
                                                            mem[_5632 + 132] = (Mask(16, 16, _5635) >> 14) + 131072
                                                            mem[_5632 + 164] = 8
                                                            mem[_5632 + 196] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], (Mask(16, 16, _5635) >> 14) + 131072, 8, block.timestamp
                                                    else:
                                                        if uint16(sha3(mem[_5633 + 32 len mem[_5633]])) < 9177:
                                                            mem[_5632 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                            mem[_5632 + 100] = ext_call.return_data[0]
                                                            mem[_5632 + 132] = (Mask(16, 16, _5635) >> 16) + 16384
                                                            mem[_5632 + 164] = 4
                                                            mem[_5632 + 196] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], (Mask(16, 16, _5635) >> 16) + 16384, 4, block.timestamp
                                                        else:
                                                            mem[64] = _5632 + 160
                                                            mem[_5632 + 96] = 26
                                                            mem[_5632 + 128] = 'SafeMath: division by zero'
                                                            mem[_5632 + 160] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                            mem[_5632 + 164] = ext_call.return_data[0]
                                                            if uint16(sha3(mem[_5633 + 32 len mem[_5633]])) >= 25561:
                                                                mem[_5632 + 196] = (Mask(8, 24, _5635) >> 24) + 1
                                                                mem[_5632 + 228] = 1
                                                                mem[_5632 + 260] = block.timestamp
                                                                require ext_code.size(erc721ContractAddress)
                                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                     gas gas_remaining wei
                                                                    args ext_call.return_data[0], (Mask(8, 24, _5635) >> 24) + 1, 1, block.timestamp
                                                            else:
                                                                mem[_5632 + 196] = (Mask(13, 19, _5635) >> 19) + 512
                                                                mem[_5632 + 228] = 2
                                                                mem[_5632 + 260] = block.timestamp
                                                                require ext_code.size(erc721ContractAddress)
                                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                     gas gas_remaining wei
                                                                    args ext_call.return_data[0], (Mask(13, 19, _5635) >> 19) + 512, 2, block.timestamp
                                            else:
                                                mem[_5632 + 96] = 30
                                                mem[_5632 + 128] = 'SafeMath: subtraction overflow'
                                                if uint64(ext_call.return_data[0]) >> 192 > 30:
                                                    mem[_5632 + 160] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[_5632 + 164] = 32
                                                    idx = 32
                                                    while idx < 30:
                                                        mem[idx + _5632 + 228] = mem[idx + _5632 + 128]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                mem[64] = _5632 + 224
                                                mem[_5632 + 160] = 26
                                                mem[_5632 + 192] = 'SafeMath: division by zero'
                                                if not -(uint64(ext_call.return_data[0]) >> 192) + 30:
                                                    mem[_5632 + 224] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[_5632 + 228] = 32
                                                    idx = 0
                                                    while idx < 26:
                                                        mem[idx + _5632 + 292] = mem[idx + _5632 + 192]
                                                        idx = idx + 32
                                                        continue 
                                                    mem[_5632 + 292] = mem[_5632 + 298 len 26]
                                                    revert with 0, 32, 26, mem[_5632 + 292]
                                                if uint16(_5635) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 656:
                                                    if not Mask(16, 16, _5635) >> 16:
                                                        mem[_5632 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5632 + 228] = ext_call.return_data[0]
                                                        mem[_5632 + 260] = 524288
                                                        mem[_5632 + 292] = 16
                                                        mem[_5632 + 324] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], 524288, 16, block.timestamp
                                                    else:
                                                        if Mask(16, 16, _5635) >> 13 / Mask(16, 16, _5635) >> 16 != 8:
                                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5632 + 325 len 31]
                                                        mem[_5632 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5632 + 228] = ext_call.return_data[0]
                                                        mem[_5632 + 260] = (Mask(16, 16, _5635) >> 13) + 524288
                                                        mem[_5632 + 292] = 16
                                                        mem[_5632 + 324] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(16, 16, _5635) >> 13) + 524288, 16, block.timestamp
                                                else:
                                                    if uint16(_5635) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 2623:
                                                        if not Mask(16, 16, _5635) >> 16:
                                                            mem[_5632 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                            mem[_5632 + 228] = ext_call.return_data[0]
                                                            mem[_5632 + 260] = 131072
                                                            mem[_5632 + 292] = 8
                                                            mem[_5632 + 324] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], 131072, 8, block.timestamp
                                                        else:
                                                            if Mask(16, 16, _5635) >> 14 / Mask(16, 16, _5635) >> 16 != 4:
                                                                revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5632 + 325 len 31]
                                                            mem[_5632 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                            mem[_5632 + 228] = ext_call.return_data[0]
                                                            mem[_5632 + 260] = (Mask(16, 16, _5635) >> 14) + 131072
                                                            mem[_5632 + 292] = 8
                                                            mem[_5632 + 324] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], (Mask(16, 16, _5635) >> 14) + 131072, 8, block.timestamp
                                                    else:
                                                        if uint16(_5635) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 9177:
                                                            mem[_5632 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                            mem[_5632 + 228] = ext_call.return_data[0]
                                                            mem[_5632 + 260] = (Mask(16, 16, _5635) >> 16) + 16384
                                                            mem[_5632 + 292] = 4
                                                            mem[_5632 + 324] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], (Mask(16, 16, _5635) >> 16) + 16384, 4, block.timestamp
                                                        else:
                                                            mem[64] = _5632 + 288
                                                            mem[_5632 + 224] = 26
                                                            mem[_5632 + 256] = 'SafeMath: division by zero'
                                                            mem[_5632 + 288] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                            mem[_5632 + 292] = ext_call.return_data[0]
                                                            if uint16(_5635) / -(uint64(ext_call.return_data[0]) >> 192) + 30 >= 25561:
                                                                mem[_5632 + 324] = (Mask(8, 24, _5635) >> 24) + 1
                                                                mem[_5632 + 356] = 1
                                                                mem[_5632 + 388] = block.timestamp
                                                                require ext_code.size(erc721ContractAddress)
                                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                     gas gas_remaining wei
                                                                    args ext_call.return_data[0], (Mask(8, 24, _5635) >> 24) + 1, 1, block.timestamp
                                                            else:
                                                                mem[_5632 + 324] = (Mask(13, 19, _5635) >> 19) + 512
                                                                mem[_5632 + 356] = 2
                                                                mem[_5632 + 388] = block.timestamp
                                                                require ext_code.size(erc721ContractAddress)
                                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                     gas gas_remaining wei
                                                                    args ext_call.return_data[0], (Mask(13, 19, _5635) >> 19) + 512, 2, block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                            require idx < mem[96]
                            mem[(32 * idx) + 128] = ext_call.return_data[0]
                            idx = idx + 1
                            continue 
                    else:
                        mem[128 len 32 * arg4.length] = call.data[calldata.size len 32 * arg4.length]
                        idx = 0
                        while idx < arg4.length:
                            require ext_code.size(gameContractAddress)
                            call gameContractAddress.createTokenFromCard(uint256 arg1, uint256 arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args arg2, arg3, cd[((32 * idx) + arg4 + 36)]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            if arg5 == -1:
                                emit 0x29ed85fa: arg5, 0, arg2, ext_call.return_data[0]
                                mem[mem[64]] = 0x9a43573c00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = arg1
                                mem[mem[64] + 36] = ext_call.return_data[0]
                                mem[mem[64] + 68] = 0
                                require ext_code.size(erc721ContractAddress)
                                call erc721ContractAddress.transferNewToken(bytes32 arg1, uint256 arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args arg1, ext_call.return_data[0], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if not arg2:
                                    mem[0] = cd[((32 * idx) + arg4 + 36)]
                                    mem[32] = sha3(arg3, 17)
                                    if not stor17[arg3][cd[((32 * idx) + arg4 + 36)]]:
                                        revert with 0, 'collectible must be on sale'
                                    if ext_call.return_data[64]:
                                        mem[mem[64]] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = ext_call.return_data[0]
                                        mem[mem[64] + 36] = ext_call.return_data[64]
                                        mem[mem[64] + 68] = 0
                                        mem[mem[64] + 100] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], ext_call.return_data[64], 0, block.timestamp
                                    else:
                                        _5201 = mem[64]
                                        mem[mem[64] + 32] = ext_call.return_data[0]
                                        mem[mem[64] + 64] = block.timestamp
                                        _5202 = mem[64]
                                        mem[mem[64]] = 64
                                        mem[64] = mem[64] + 96
                                        _5204 = sha3(mem[_5202 + 32 len mem[_5202]])
                                        if uint64(ext_call.return_data[0]) >> 192 >= 30:
                                            if uint16(sha3(mem[_5202 + 32 len mem[_5202]])) < 656:
                                                if not Mask(16, 16, sha3(mem[_5202 + 32 len mem[_5202]])) >> 16:
                                                    mem[_5201 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5201 + 100] = ext_call.return_data[0]
                                                    mem[_5201 + 132] = 524288
                                                    mem[_5201 + 164] = 16
                                                    mem[_5201 + 196] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], 524288, 16, block.timestamp
                                                else:
                                                    if Mask(16, 16, sha3(mem[_5202 + 32 len mem[_5202]])) >> 13 / Mask(16, 16, sha3(mem[_5202 + 32 len mem[_5202]])) >> 16 != 8:
                                                        revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5201 + 197 len 31]
                                                    mem[_5201 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5201 + 100] = ext_call.return_data[0]
                                                    mem[_5201 + 132] = (Mask(16, 16, _5204) >> 13) + 524288
                                                    mem[_5201 + 164] = 16
                                                    mem[_5201 + 196] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(16, 16, _5204) >> 13) + 524288, 16, block.timestamp
                                            else:
                                                if uint16(sha3(mem[_5202 + 32 len mem[_5202]])) < 2623:
                                                    if not Mask(16, 16, sha3(mem[_5202 + 32 len mem[_5202]])) >> 16:
                                                        mem[_5201 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5201 + 100] = ext_call.return_data[0]
                                                        mem[_5201 + 132] = 131072
                                                        mem[_5201 + 164] = 8
                                                        mem[_5201 + 196] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], 131072, 8, block.timestamp
                                                    else:
                                                        if Mask(16, 16, sha3(mem[_5202 + 32 len mem[_5202]])) >> 14 / Mask(16, 16, sha3(mem[_5202 + 32 len mem[_5202]])) >> 16 != 4:
                                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5201 + 197 len 31]
                                                        mem[_5201 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5201 + 100] = ext_call.return_data[0]
                                                        mem[_5201 + 132] = (Mask(16, 16, _5204) >> 14) + 131072
                                                        mem[_5201 + 164] = 8
                                                        mem[_5201 + 196] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(16, 16, _5204) >> 14) + 131072, 8, block.timestamp
                                                else:
                                                    if uint16(sha3(mem[_5202 + 32 len mem[_5202]])) < 9177:
                                                        mem[_5201 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5201 + 100] = ext_call.return_data[0]
                                                        mem[_5201 + 132] = (Mask(16, 16, _5204) >> 16) + 16384
                                                        mem[_5201 + 164] = 4
                                                        mem[_5201 + 196] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(16, 16, _5204) >> 16) + 16384, 4, block.timestamp
                                                    else:
                                                        mem[64] = _5201 + 160
                                                        mem[_5201 + 96] = 26
                                                        mem[_5201 + 128] = 'SafeMath: division by zero'
                                                        mem[_5201 + 160] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5201 + 164] = ext_call.return_data[0]
                                                        if uint16(sha3(mem[_5202 + 32 len mem[_5202]])) >= 25561:
                                                            mem[_5201 + 196] = (Mask(8, 24, _5204) >> 24) + 1
                                                            mem[_5201 + 228] = 1
                                                            mem[_5201 + 260] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], (Mask(8, 24, _5204) >> 24) + 1, 1, block.timestamp
                                                        else:
                                                            mem[_5201 + 196] = (Mask(13, 19, _5204) >> 19) + 512
                                                            mem[_5201 + 228] = 2
                                                            mem[_5201 + 260] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], (Mask(13, 19, _5204) >> 19) + 512, 2, block.timestamp
                                        else:
                                            mem[_5201 + 96] = 30
                                            mem[_5201 + 128] = 'SafeMath: subtraction overflow'
                                            if uint64(ext_call.return_data[0]) >> 192 > 30:
                                                mem[_5201 + 160] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[_5201 + 164] = 32
                                                idx = 32
                                                while idx < 30:
                                                    mem[idx + _5201 + 228] = mem[idx + _5201 + 128]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            mem[64] = _5201 + 224
                                            mem[_5201 + 160] = 26
                                            mem[_5201 + 192] = 'SafeMath: division by zero'
                                            if not -(uint64(ext_call.return_data[0]) >> 192) + 30:
                                                mem[_5201 + 224] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[_5201 + 228] = 32
                                                idx = 0
                                                while idx < 26:
                                                    mem[idx + _5201 + 292] = mem[idx + _5201 + 192]
                                                    idx = idx + 32
                                                    continue 
                                                mem[_5201 + 292] = mem[_5201 + 298 len 26]
                                                revert with 0, 32, 26, mem[_5201 + 292]
                                            if uint16(_5204) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 656:
                                                if not Mask(16, 16, _5204) >> 16:
                                                    mem[_5201 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5201 + 228] = ext_call.return_data[0]
                                                    mem[_5201 + 260] = 524288
                                                    mem[_5201 + 292] = 16
                                                    mem[_5201 + 324] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], 524288, 16, block.timestamp
                                                else:
                                                    if Mask(16, 16, _5204) >> 13 / Mask(16, 16, _5204) >> 16 != 8:
                                                        revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5201 + 325 len 31]
                                                    mem[_5201 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                    mem[_5201 + 228] = ext_call.return_data[0]
                                                    mem[_5201 + 260] = (Mask(16, 16, _5204) >> 13) + 524288
                                                    mem[_5201 + 292] = 16
                                                    mem[_5201 + 324] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(16, 16, _5204) >> 13) + 524288, 16, block.timestamp
                                            else:
                                                if uint16(_5204) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 2623:
                                                    if not Mask(16, 16, _5204) >> 16:
                                                        mem[_5201 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5201 + 228] = ext_call.return_data[0]
                                                        mem[_5201 + 260] = 131072
                                                        mem[_5201 + 292] = 8
                                                        mem[_5201 + 324] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], 131072, 8, block.timestamp
                                                    else:
                                                        if Mask(16, 16, _5204) >> 14 / Mask(16, 16, _5204) >> 16 != 4:
                                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5201 + 325 len 31]
                                                        mem[_5201 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5201 + 228] = ext_call.return_data[0]
                                                        mem[_5201 + 260] = (Mask(16, 16, _5204) >> 14) + 131072
                                                        mem[_5201 + 292] = 8
                                                        mem[_5201 + 324] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(16, 16, _5204) >> 14) + 131072, 8, block.timestamp
                                                else:
                                                    if uint16(_5204) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 9177:
                                                        mem[_5201 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5201 + 228] = ext_call.return_data[0]
                                                        mem[_5201 + 260] = (Mask(16, 16, _5204) >> 16) + 16384
                                                        mem[_5201 + 292] = 4
                                                        mem[_5201 + 324] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(16, 16, _5204) >> 16) + 16384, 4, block.timestamp
                                                    else:
                                                        mem[64] = _5201 + 288
                                                        mem[_5201 + 224] = 26
                                                        mem[_5201 + 256] = 'SafeMath: division by zero'
                                                        mem[_5201 + 288] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5201 + 292] = ext_call.return_data[0]
                                                        if uint16(_5204) / -(uint64(ext_call.return_data[0]) >> 192) + 30 >= 25561:
                                                            mem[_5201 + 324] = (Mask(8, 24, _5204) >> 24) + 1
                                                            mem[_5201 + 356] = 1
                                                            mem[_5201 + 388] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], (Mask(8, 24, _5204) >> 24) + 1, 1, block.timestamp
                                                        else:
                                                            mem[_5201 + 324] = (Mask(13, 19, _5204) >> 19) + 512
                                                            mem[_5201 + 356] = 2
                                                            mem[_5201 + 388] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], (Mask(13, 19, _5204) >> 19) + 512, 2, block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if ext_call.return_data[32] + block.timestamp < block.timestamp:
                                    revert with 0, 'SafeMath: addition overflow'
                                if not arg5:
                                    emit 0x29ed85fa: arg5, ext_call.return_data[32] + block.timestamp, arg2, ext_call.return_data[0]
                                    mem[mem[64]] = 0x9a43573c00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = arg1
                                    mem[mem[64] + 36] = ext_call.return_data[0]
                                    mem[mem[64] + 68] = ext_call.return_data[32] + block.timestamp
                                    require ext_code.size(erc721ContractAddress)
                                    call erc721ContractAddress.transferNewToken(bytes32 arg1, uint256 arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args arg1, ext_call.return_data[0], ext_call.return_data[32] + block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not arg2:
                                        mem[0] = cd[((32 * idx) + arg4 + 36)]
                                        mem[32] = sha3(arg3, 17)
                                        if not stor17[arg3][cd[((32 * idx) + arg4 + 36)]]:
                                            revert with 0, 'collectible must be on sale'
                                        if ext_call.return_data[64]:
                                            mem[mem[64]] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = ext_call.return_data[0]
                                            mem[mem[64] + 36] = ext_call.return_data[64]
                                            mem[mem[64] + 68] = 0
                                            mem[mem[64] + 100] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], ext_call.return_data[64], 0, block.timestamp
                                        else:
                                            _5529 = mem[64]
                                            mem[mem[64] + 32] = ext_call.return_data[0]
                                            mem[mem[64] + 64] = block.timestamp
                                            _5530 = mem[64]
                                            mem[mem[64]] = 64
                                            mem[64] = mem[64] + 96
                                            _5532 = sha3(mem[_5530 + 32 len mem[_5530]])
                                            if uint64(ext_call.return_data[0]) >> 192 >= 30:
                                                if uint16(sha3(mem[_5530 + 32 len mem[_5530]])) < 656:
                                                    if not Mask(16, 16, sha3(mem[_5530 + 32 len mem[_5530]])) >> 16:
                                                        mem[_5529 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5529 + 100] = ext_call.return_data[0]
                                                        mem[_5529 + 132] = 524288
                                                        mem[_5529 + 164] = 16
                                                        mem[_5529 + 196] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], 524288, 16, block.timestamp
                                                    else:
                                                        if Mask(16, 16, sha3(mem[_5530 + 32 len mem[_5530]])) >> 13 / Mask(16, 16, sha3(mem[_5530 + 32 len mem[_5530]])) >> 16 != 8:
                                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5529 + 197 len 31]
                                                        mem[_5529 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5529 + 100] = ext_call.return_data[0]
                                                        mem[_5529 + 132] = (Mask(16, 16, _5532) >> 13) + 524288
                                                        mem[_5529 + 164] = 16
                                                        mem[_5529 + 196] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(16, 16, _5532) >> 13) + 524288, 16, block.timestamp
                                                else:
                                                    if uint16(sha3(mem[_5530 + 32 len mem[_5530]])) < 2623:
                                                        if not Mask(16, 16, sha3(mem[_5530 + 32 len mem[_5530]])) >> 16:
                                                            mem[_5529 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                            mem[_5529 + 100] = ext_call.return_data[0]
                                                            mem[_5529 + 132] = 131072
                                                            mem[_5529 + 164] = 8
                                                            mem[_5529 + 196] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], 131072, 8, block.timestamp
                                                        else:
                                                            if Mask(16, 16, sha3(mem[_5530 + 32 len mem[_5530]])) >> 14 / Mask(16, 16, sha3(mem[_5530 + 32 len mem[_5530]])) >> 16 != 4:
                                                                revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5529 + 197 len 31]
                                                            mem[_5529 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                            mem[_5529 + 100] = ext_call.return_data[0]
                                                            mem[_5529 + 132] = (Mask(16, 16, _5532) >> 14) + 131072
                                                            mem[_5529 + 164] = 8
                                                            mem[_5529 + 196] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], (Mask(16, 16, _5532) >> 14) + 131072, 8, block.timestamp
                                                    else:
                                                        if uint16(sha3(mem[_5530 + 32 len mem[_5530]])) < 9177:
                                                            mem[_5529 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                            mem[_5529 + 100] = ext_call.return_data[0]
                                                            mem[_5529 + 132] = (Mask(16, 16, _5532) >> 16) + 16384
                                                            mem[_5529 + 164] = 4
                                                            mem[_5529 + 196] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], (Mask(16, 16, _5532) >> 16) + 16384, 4, block.timestamp
                                                        else:
                                                            mem[64] = _5529 + 160
                                                            mem[_5529 + 96] = 26
                                                            mem[_5529 + 128] = 'SafeMath: division by zero'
                                                            mem[_5529 + 160] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                            mem[_5529 + 164] = ext_call.return_data[0]
                                                            if uint16(sha3(mem[_5530 + 32 len mem[_5530]])) >= 25561:
                                                                mem[_5529 + 196] = (Mask(8, 24, _5532) >> 24) + 1
                                                                mem[_5529 + 228] = 1
                                                                mem[_5529 + 260] = block.timestamp
                                                                require ext_code.size(erc721ContractAddress)
                                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                     gas gas_remaining wei
                                                                    args ext_call.return_data[0], (Mask(8, 24, _5532) >> 24) + 1, 1, block.timestamp
                                                            else:
                                                                mem[_5529 + 196] = (Mask(13, 19, _5532) >> 19) + 512
                                                                mem[_5529 + 228] = 2
                                                                mem[_5529 + 260] = block.timestamp
                                                                require ext_code.size(erc721ContractAddress)
                                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                     gas gas_remaining wei
                                                                    args ext_call.return_data[0], (Mask(13, 19, _5532) >> 19) + 512, 2, block.timestamp
                                            else:
                                                mem[_5529 + 96] = 30
                                                mem[_5529 + 128] = 'SafeMath: subtraction overflow'
                                                if uint64(ext_call.return_data[0]) >> 192 > 30:
                                                    mem[_5529 + 160] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[_5529 + 164] = 32
                                                    idx = 32
                                                    while idx < 30:
                                                        mem[idx + _5529 + 228] = mem[idx + _5529 + 128]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                mem[64] = _5529 + 224
                                                mem[_5529 + 160] = 26
                                                mem[_5529 + 192] = 'SafeMath: division by zero'
                                                if not -(uint64(ext_call.return_data[0]) >> 192) + 30:
                                                    mem[_5529 + 224] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[_5529 + 228] = 32
                                                    idx = 0
                                                    while idx < 26:
                                                        mem[idx + _5529 + 292] = mem[idx + _5529 + 192]
                                                        idx = idx + 32
                                                        continue 
                                                    mem[_5529 + 292] = mem[_5529 + 298 len 26]
                                                    revert with 0, 32, 26, mem[_5529 + 292]
                                                if uint16(_5532) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 656:
                                                    if not Mask(16, 16, _5532) >> 16:
                                                        mem[_5529 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5529 + 228] = ext_call.return_data[0]
                                                        mem[_5529 + 260] = 524288
                                                        mem[_5529 + 292] = 16
                                                        mem[_5529 + 324] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], 524288, 16, block.timestamp
                                                    else:
                                                        if Mask(16, 16, _5532) >> 13 / Mask(16, 16, _5532) >> 16 != 8:
                                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5529 + 325 len 31]
                                                        mem[_5529 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5529 + 228] = ext_call.return_data[0]
                                                        mem[_5529 + 260] = (Mask(16, 16, _5532) >> 13) + 524288
                                                        mem[_5529 + 292] = 16
                                                        mem[_5529 + 324] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(16, 16, _5532) >> 13) + 524288, 16, block.timestamp
                                                else:
                                                    if uint16(_5532) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 2623:
                                                        if not Mask(16, 16, _5532) >> 16:
                                                            mem[_5529 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                            mem[_5529 + 228] = ext_call.return_data[0]
                                                            mem[_5529 + 260] = 131072
                                                            mem[_5529 + 292] = 8
                                                            mem[_5529 + 324] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], 131072, 8, block.timestamp
                                                        else:
                                                            if Mask(16, 16, _5532) >> 14 / Mask(16, 16, _5532) >> 16 != 4:
                                                                revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5529 + 325 len 31]
                                                            mem[_5529 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                            mem[_5529 + 228] = ext_call.return_data[0]
                                                            mem[_5529 + 260] = (Mask(16, 16, _5532) >> 14) + 131072
                                                            mem[_5529 + 292] = 8
                                                            mem[_5529 + 324] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], (Mask(16, 16, _5532) >> 14) + 131072, 8, block.timestamp
                                                    else:
                                                        if uint16(_5532) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 9177:
                                                            mem[_5529 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                            mem[_5529 + 228] = ext_call.return_data[0]
                                                            mem[_5529 + 260] = (Mask(16, 16, _5532) >> 16) + 16384
                                                            mem[_5529 + 292] = 4
                                                            mem[_5529 + 324] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], (Mask(16, 16, _5532) >> 16) + 16384, 4, block.timestamp
                                                        else:
                                                            mem[64] = _5529 + 288
                                                            mem[_5529 + 224] = 26
                                                            mem[_5529 + 256] = 'SafeMath: division by zero'
                                                            mem[_5529 + 288] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                            mem[_5529 + 292] = ext_call.return_data[0]
                                                            if uint16(_5532) / -(uint64(ext_call.return_data[0]) >> 192) + 30 >= 25561:
                                                                mem[_5529 + 324] = (Mask(8, 24, _5532) >> 24) + 1
                                                                mem[_5529 + 356] = 1
                                                                mem[_5529 + 388] = block.timestamp
                                                                require ext_code.size(erc721ContractAddress)
                                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                     gas gas_remaining wei
                                                                    args ext_call.return_data[0], (Mask(8, 24, _5532) >> 24) + 1, 1, block.timestamp
                                                            else:
                                                                mem[_5529 + 324] = (Mask(13, 19, _5532) >> 19) + 512
                                                                mem[_5529 + 356] = 2
                                                                mem[_5529 + 388] = block.timestamp
                                                                require ext_code.size(erc721ContractAddress)
                                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                     gas gas_remaining wei
                                                                    args ext_call.return_data[0], (Mask(13, 19, _5532) >> 19) + 512, 2, block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    mem[32] = sha3(arg2, 19)
                                    purchaseIdtoTokenIds[arg2][arg5].field_0++
                                    mem[0] = sha3(arg5, sha3(arg2, 19))
                                    purchaseIdtoTokenIds[arg2][arg5][purchaseIdtoTokenIds[arg2][arg5].field_0].field_0 = ext_call.return_data[0]
                                    emit 0x29ed85fa: arg5, ext_call.return_data[32] + block.timestamp, arg2, ext_call.return_data[0]
                                    mem[mem[64]] = 0x9a43573c00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = arg1
                                    mem[mem[64] + 36] = ext_call.return_data[0]
                                    mem[mem[64] + 68] = ext_call.return_data[32] + block.timestamp
                                    require ext_code.size(erc721ContractAddress)
                                    call erc721ContractAddress.transferNewToken(bytes32 arg1, uint256 arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args arg1, ext_call.return_data[0], ext_call.return_data[32] + block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not arg2:
                                        mem[0] = cd[((32 * idx) + arg4 + 36)]
                                        mem[32] = sha3(arg3, 17)
                                        if not stor17[arg3][cd[((32 * idx) + arg4 + 36)]]:
                                            revert with 0, 'collectible must be on sale'
                                        if ext_call.return_data[64]:
                                            mem[mem[64]] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = ext_call.return_data[0]
                                            mem[mem[64] + 36] = ext_call.return_data[64]
                                            mem[mem[64] + 68] = 0
                                            mem[mem[64] + 100] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], ext_call.return_data[64], 0, block.timestamp
                                        else:
                                            _5641 = mem[64]
                                            mem[mem[64] + 32] = ext_call.return_data[0]
                                            mem[mem[64] + 64] = block.timestamp
                                            _5642 = mem[64]
                                            mem[mem[64]] = 64
                                            mem[64] = mem[64] + 96
                                            _5644 = sha3(mem[_5642 + 32 len mem[_5642]])
                                            if uint64(ext_call.return_data[0]) >> 192 >= 30:
                                                if uint16(sha3(mem[_5642 + 32 len mem[_5642]])) < 656:
                                                    if not Mask(16, 16, sha3(mem[_5642 + 32 len mem[_5642]])) >> 16:
                                                        mem[_5641 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5641 + 100] = ext_call.return_data[0]
                                                        mem[_5641 + 132] = 524288
                                                        mem[_5641 + 164] = 16
                                                        mem[_5641 + 196] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], 524288, 16, block.timestamp
                                                    else:
                                                        if Mask(16, 16, sha3(mem[_5642 + 32 len mem[_5642]])) >> 13 / Mask(16, 16, sha3(mem[_5642 + 32 len mem[_5642]])) >> 16 != 8:
                                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5641 + 197 len 31]
                                                        mem[_5641 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5641 + 100] = ext_call.return_data[0]
                                                        mem[_5641 + 132] = (Mask(16, 16, _5644) >> 13) + 524288
                                                        mem[_5641 + 164] = 16
                                                        mem[_5641 + 196] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(16, 16, _5644) >> 13) + 524288, 16, block.timestamp
                                                else:
                                                    if uint16(sha3(mem[_5642 + 32 len mem[_5642]])) < 2623:
                                                        if not Mask(16, 16, sha3(mem[_5642 + 32 len mem[_5642]])) >> 16:
                                                            mem[_5641 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                            mem[_5641 + 100] = ext_call.return_data[0]
                                                            mem[_5641 + 132] = 131072
                                                            mem[_5641 + 164] = 8
                                                            mem[_5641 + 196] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], 131072, 8, block.timestamp
                                                        else:
                                                            if Mask(16, 16, sha3(mem[_5642 + 32 len mem[_5642]])) >> 14 / Mask(16, 16, sha3(mem[_5642 + 32 len mem[_5642]])) >> 16 != 4:
                                                                revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5641 + 197 len 31]
                                                            mem[_5641 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                            mem[_5641 + 100] = ext_call.return_data[0]
                                                            mem[_5641 + 132] = (Mask(16, 16, _5644) >> 14) + 131072
                                                            mem[_5641 + 164] = 8
                                                            mem[_5641 + 196] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], (Mask(16, 16, _5644) >> 14) + 131072, 8, block.timestamp
                                                    else:
                                                        if uint16(sha3(mem[_5642 + 32 len mem[_5642]])) < 9177:
                                                            mem[_5641 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                            mem[_5641 + 100] = ext_call.return_data[0]
                                                            mem[_5641 + 132] = (Mask(16, 16, _5644) >> 16) + 16384
                                                            mem[_5641 + 164] = 4
                                                            mem[_5641 + 196] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], (Mask(16, 16, _5644) >> 16) + 16384, 4, block.timestamp
                                                        else:
                                                            mem[64] = _5641 + 160
                                                            mem[_5641 + 96] = 26
                                                            mem[_5641 + 128] = 'SafeMath: division by zero'
                                                            mem[_5641 + 160] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                            mem[_5641 + 164] = ext_call.return_data[0]
                                                            if uint16(sha3(mem[_5642 + 32 len mem[_5642]])) >= 25561:
                                                                mem[_5641 + 196] = (Mask(8, 24, _5644) >> 24) + 1
                                                                mem[_5641 + 228] = 1
                                                                mem[_5641 + 260] = block.timestamp
                                                                require ext_code.size(erc721ContractAddress)
                                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                     gas gas_remaining wei
                                                                    args ext_call.return_data[0], (Mask(8, 24, _5644) >> 24) + 1, 1, block.timestamp
                                                            else:
                                                                mem[_5641 + 196] = (Mask(13, 19, _5644) >> 19) + 512
                                                                mem[_5641 + 228] = 2
                                                                mem[_5641 + 260] = block.timestamp
                                                                require ext_code.size(erc721ContractAddress)
                                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                     gas gas_remaining wei
                                                                    args ext_call.return_data[0], (Mask(13, 19, _5644) >> 19) + 512, 2, block.timestamp
                                            else:
                                                mem[_5641 + 96] = 30
                                                mem[_5641 + 128] = 'SafeMath: subtraction overflow'
                                                if uint64(ext_call.return_data[0]) >> 192 > 30:
                                                    mem[_5641 + 160] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[_5641 + 164] = 32
                                                    idx = 32
                                                    while idx < 30:
                                                        mem[idx + _5641 + 228] = mem[idx + _5641 + 128]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                mem[64] = _5641 + 224
                                                mem[_5641 + 160] = 26
                                                mem[_5641 + 192] = 'SafeMath: division by zero'
                                                if not -(uint64(ext_call.return_data[0]) >> 192) + 30:
                                                    mem[_5641 + 224] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[_5641 + 228] = 32
                                                    idx = 0
                                                    while idx < 26:
                                                        mem[idx + _5641 + 292] = mem[idx + _5641 + 192]
                                                        idx = idx + 32
                                                        continue 
                                                    mem[_5641 + 292] = mem[_5641 + 298 len 26]
                                                    revert with 0, 32, 26, mem[_5641 + 292]
                                                if uint16(_5644) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 656:
                                                    if not Mask(16, 16, _5644) >> 16:
                                                        mem[_5641 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5641 + 228] = ext_call.return_data[0]
                                                        mem[_5641 + 260] = 524288
                                                        mem[_5641 + 292] = 16
                                                        mem[_5641 + 324] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], 524288, 16, block.timestamp
                                                    else:
                                                        if Mask(16, 16, _5644) >> 13 / Mask(16, 16, _5644) >> 16 != 8:
                                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5641 + 325 len 31]
                                                        mem[_5641 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                        mem[_5641 + 228] = ext_call.return_data[0]
                                                        mem[_5641 + 260] = (Mask(16, 16, _5644) >> 13) + 524288
                                                        mem[_5641 + 292] = 16
                                                        mem[_5641 + 324] = block.timestamp
                                                        require ext_code.size(erc721ContractAddress)
                                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0], (Mask(16, 16, _5644) >> 13) + 524288, 16, block.timestamp
                                                else:
                                                    if uint16(_5644) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 2623:
                                                        if not Mask(16, 16, _5644) >> 16:
                                                            mem[_5641 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                            mem[_5641 + 228] = ext_call.return_data[0]
                                                            mem[_5641 + 260] = 131072
                                                            mem[_5641 + 292] = 8
                                                            mem[_5641 + 324] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], 131072, 8, block.timestamp
                                                        else:
                                                            if Mask(16, 16, _5644) >> 14 / Mask(16, 16, _5644) >> 16 != 4:
                                                                revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5641 + 325 len 31]
                                                            mem[_5641 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                            mem[_5641 + 228] = ext_call.return_data[0]
                                                            mem[_5641 + 260] = (Mask(16, 16, _5644) >> 14) + 131072
                                                            mem[_5641 + 292] = 8
                                                            mem[_5641 + 324] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], (Mask(16, 16, _5644) >> 14) + 131072, 8, block.timestamp
                                                    else:
                                                        if uint16(_5644) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 9177:
                                                            mem[_5641 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                            mem[_5641 + 228] = ext_call.return_data[0]
                                                            mem[_5641 + 260] = (Mask(16, 16, _5644) >> 16) + 16384
                                                            mem[_5641 + 292] = 4
                                                            mem[_5641 + 324] = block.timestamp
                                                            require ext_code.size(erc721ContractAddress)
                                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0], (Mask(16, 16, _5644) >> 16) + 16384, 4, block.timestamp
                                                        else:
                                                            mem[64] = _5641 + 288
                                                            mem[_5641 + 224] = 26
                                                            mem[_5641 + 256] = 'SafeMath: division by zero'
                                                            mem[_5641 + 288] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                            mem[_5641 + 292] = ext_call.return_data[0]
                                                            if uint16(_5644) / -(uint64(ext_call.return_data[0]) >> 192) + 30 >= 25561:
                                                                mem[_5641 + 324] = (Mask(8, 24, _5644) >> 24) + 1
                                                                mem[_5641 + 356] = 1
                                                                mem[_5641 + 388] = block.timestamp
                                                                require ext_code.size(erc721ContractAddress)
                                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                     gas gas_remaining wei
                                                                    args ext_call.return_data[0], (Mask(8, 24, _5644) >> 24) + 1, 1, block.timestamp
                                                            else:
                                                                mem[_5641 + 324] = (Mask(13, 19, _5644) >> 19) + 512
                                                                mem[_5641 + 356] = 2
                                                                mem[_5641 + 388] = block.timestamp
                                                                require ext_code.size(erc721ContractAddress)
                                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                                     gas gas_remaining wei
                                                                    args ext_call.return_data[0], (Mask(13, 19, _5644) >> 19) + 512, 2, block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                            require idx < mem[96]
                            mem[(32 * idx) + 128] = ext_call.return_data[0]
                            idx = idx + 1
                            continue 
        mem[mem[64]] = 32
        mem[mem[64] + 32] = mem[96]
        mem[mem[64] + 64 len floor32(mem[96])] = mem[128 len floor32(mem[96])]
        return 32, mem[mem[64] + 32 len (32 * mem[96]) + 32]
    mem[96] = calldata.size
    mem[128 len calldata.size] = call.data[0 len calldata.size]
    mem[calldata.size + 128] = 0
    require ext_code.size(minionManagerAddress)
    staticcall minionManagerAddress.0xc2babfd7 with:
            gas gas_remaining wei
           args mem[calldata.size + 108 len 20]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        mem[ceil32(calldata.size) + 132] = mem[calldata.size + 108 len 20]
        mem[ceil32(calldata.size) + 164] = bool(ext_call.return_data[0])
        mem[ceil32(calldata.size) + 196] = arg2
        require ext_code.size(gameContractAddress)
        staticcall gameContractAddress.isValidCaller(address arg1, bool arg2, uint256 arg3) with:
                gas gas_remaining wei
               args mem[calldata.size + 108 len 20], bool(ext_call.return_data[0]), arg2
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            revert with 0, 'admin, operator, or worker'
        require arg4.length <= test266151307()
        mem[ceil32(calldata.size) + 128] = arg4.length
        mem[64] = ceil32(calldata.size) + (32 * arg4.length) + 160
        if not arg4.length:
            idx = 0
            while idx < arg4.length:
                require ext_code.size(gameContractAddress)
                call gameContractAddress.createTokenFromCard(uint256 arg1, uint256 arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args arg2, arg3, cd[((32 * idx) + arg4 + 36)]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 96
                if arg5 == -1:
                    emit 0x29ed85fa: arg5, 0, arg2, ext_call.return_data[0]
                    mem[mem[64]] = 0x9a43573c00000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = arg1
                    mem[mem[64] + 36] = ext_call.return_data[0]
                    mem[mem[64] + 68] = 0
                    require ext_code.size(erc721ContractAddress)
                    call erc721ContractAddress.transferNewToken(bytes32 arg1, uint256 arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args arg1, ext_call.return_data[0], 0
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    if not arg2:
                        mem[0] = cd[((32 * idx) + arg4 + 36)]
                        mem[32] = sha3(arg3, 17)
                        if not stor17[arg3][cd[((32 * idx) + arg4 + 36)]]:
                            revert with 0, 'collectible must be on sale'
                        if ext_call.return_data[64]:
                            mem[mem[64]] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = ext_call.return_data[0]
                            mem[mem[64] + 36] = ext_call.return_data[64]
                            mem[mem[64] + 68] = 0
                            mem[mem[64] + 100] = block.timestamp
                            require ext_code.size(erc721ContractAddress)
                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], ext_call.return_data[64], 0, block.timestamp
                        else:
                            _5205 = mem[64]
                            mem[mem[64] + 32] = ext_call.return_data[0]
                            mem[mem[64] + 64] = block.timestamp
                            _5206 = mem[64]
                            mem[mem[64]] = 64
                            mem[64] = mem[64] + 96
                            _5208 = sha3(mem[_5206 + 32 len mem[_5206]])
                            if uint64(ext_call.return_data[0]) >> 192 >= 30:
                                if uint16(sha3(mem[_5206 + 32 len mem[_5206]])) < 656:
                                    if not Mask(16, 16, sha3(mem[_5206 + 32 len mem[_5206]])) >> 16:
                                        mem[_5205 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5205 + 100] = ext_call.return_data[0]
                                        mem[_5205 + 132] = 524288
                                        mem[_5205 + 164] = 16
                                        mem[_5205 + 196] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 524288, 16, block.timestamp
                                    else:
                                        if Mask(16, 16, sha3(mem[_5206 + 32 len mem[_5206]])) >> 13 / Mask(16, 16, sha3(mem[_5206 + 32 len mem[_5206]])) >> 16 != 8:
                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5205 + 197 len 31]
                                        mem[_5205 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5205 + 100] = ext_call.return_data[0]
                                        mem[_5205 + 132] = (Mask(16, 16, _5208) >> 13) + 524288
                                        mem[_5205 + 164] = 16
                                        mem[_5205 + 196] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], (Mask(16, 16, _5208) >> 13) + 524288, 16, block.timestamp
                                else:
                                    if uint16(sha3(mem[_5206 + 32 len mem[_5206]])) < 2623:
                                        if not Mask(16, 16, sha3(mem[_5206 + 32 len mem[_5206]])) >> 16:
                                            mem[_5205 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5205 + 100] = ext_call.return_data[0]
                                            mem[_5205 + 132] = 131072
                                            mem[_5205 + 164] = 8
                                            mem[_5205 + 196] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 131072, 8, block.timestamp
                                        else:
                                            if Mask(16, 16, sha3(mem[_5206 + 32 len mem[_5206]])) >> 14 / Mask(16, 16, sha3(mem[_5206 + 32 len mem[_5206]])) >> 16 != 4:
                                                revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5205 + 197 len 31]
                                            mem[_5205 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5205 + 100] = ext_call.return_data[0]
                                            mem[_5205 + 132] = (Mask(16, 16, _5208) >> 14) + 131072
                                            mem[_5205 + 164] = 8
                                            mem[_5205 + 196] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(16, 16, _5208) >> 14) + 131072, 8, block.timestamp
                                    else:
                                        if uint16(sha3(mem[_5206 + 32 len mem[_5206]])) < 9177:
                                            mem[_5205 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5205 + 100] = ext_call.return_data[0]
                                            mem[_5205 + 132] = (Mask(16, 16, _5208) >> 16) + 16384
                                            mem[_5205 + 164] = 4
                                            mem[_5205 + 196] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(16, 16, _5208) >> 16) + 16384, 4, block.timestamp
                                        else:
                                            mem[64] = _5205 + 160
                                            mem[_5205 + 96] = 26
                                            mem[_5205 + 128] = 'SafeMath: division by zero'
                                            mem[_5205 + 160] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5205 + 164] = ext_call.return_data[0]
                                            if uint16(sha3(mem[_5206 + 32 len mem[_5206]])) >= 25561:
                                                mem[_5205 + 196] = (Mask(8, 24, _5208) >> 24) + 1
                                                mem[_5205 + 228] = 1
                                                mem[_5205 + 260] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(8, 24, _5208) >> 24) + 1, 1, block.timestamp
                                            else:
                                                mem[_5205 + 196] = (Mask(13, 19, _5208) >> 19) + 512
                                                mem[_5205 + 228] = 2
                                                mem[_5205 + 260] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(13, 19, _5208) >> 19) + 512, 2, block.timestamp
                            else:
                                mem[_5205 + 96] = 30
                                mem[_5205 + 128] = 'SafeMath: subtraction overflow'
                                if uint64(ext_call.return_data[0]) >> 192 > 30:
                                    mem[_5205 + 160] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_5205 + 164] = 32
                                    idx = 32
                                    while idx < 30:
                                        mem[idx + _5205 + 228] = mem[idx + _5205 + 128]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 'SafeMath: subtraction overflow'
                                mem[64] = _5205 + 224
                                mem[_5205 + 160] = 26
                                mem[_5205 + 192] = 'SafeMath: division by zero'
                                if not -(uint64(ext_call.return_data[0]) >> 192) + 30:
                                    mem[_5205 + 224] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_5205 + 228] = 32
                                    idx = 0
                                    while idx < 26:
                                        mem[idx + _5205 + 292] = mem[idx + _5205 + 192]
                                        idx = idx + 32
                                        continue 
                                    mem[_5205 + 292] = mem[_5205 + 298 len 26]
                                    revert with 0, 32, 26, mem[_5205 + 292]
                                if uint16(_5208) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 656:
                                    if not Mask(16, 16, _5208) >> 16:
                                        mem[_5205 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5205 + 228] = ext_call.return_data[0]
                                        mem[_5205 + 260] = 524288
                                        mem[_5205 + 292] = 16
                                        mem[_5205 + 324] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 524288, 16, block.timestamp
                                    else:
                                        if Mask(16, 16, _5208) >> 13 / Mask(16, 16, _5208) >> 16 != 8:
                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5205 + 325 len 31]
                                        mem[_5205 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5205 + 228] = ext_call.return_data[0]
                                        mem[_5205 + 260] = (Mask(16, 16, _5208) >> 13) + 524288
                                        mem[_5205 + 292] = 16
                                        mem[_5205 + 324] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], (Mask(16, 16, _5208) >> 13) + 524288, 16, block.timestamp
                                else:
                                    if uint16(_5208) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 2623:
                                        if not Mask(16, 16, _5208) >> 16:
                                            mem[_5205 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5205 + 228] = ext_call.return_data[0]
                                            mem[_5205 + 260] = 131072
                                            mem[_5205 + 292] = 8
                                            mem[_5205 + 324] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 131072, 8, block.timestamp
                                        else:
                                            if Mask(16, 16, _5208) >> 14 / Mask(16, 16, _5208) >> 16 != 4:
                                                revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5205 + 325 len 31]
                                            mem[_5205 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5205 + 228] = ext_call.return_data[0]
                                            mem[_5205 + 260] = (Mask(16, 16, _5208) >> 14) + 131072
                                            mem[_5205 + 292] = 8
                                            mem[_5205 + 324] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(16, 16, _5208) >> 14) + 131072, 8, block.timestamp
                                    else:
                                        if uint16(_5208) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 9177:
                                            mem[_5205 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5205 + 228] = ext_call.return_data[0]
                                            mem[_5205 + 260] = (Mask(16, 16, _5208) >> 16) + 16384
                                            mem[_5205 + 292] = 4
                                            mem[_5205 + 324] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(16, 16, _5208) >> 16) + 16384, 4, block.timestamp
                                        else:
                                            mem[64] = _5205 + 288
                                            mem[_5205 + 224] = 26
                                            mem[_5205 + 256] = 'SafeMath: division by zero'
                                            mem[_5205 + 288] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5205 + 292] = ext_call.return_data[0]
                                            if uint16(_5208) / -(uint64(ext_call.return_data[0]) >> 192) + 30 >= 25561:
                                                mem[_5205 + 324] = (Mask(8, 24, _5208) >> 24) + 1
                                                mem[_5205 + 356] = 1
                                                mem[_5205 + 388] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(8, 24, _5208) >> 24) + 1, 1, block.timestamp
                                            else:
                                                mem[_5205 + 324] = (Mask(13, 19, _5208) >> 19) + 512
                                                mem[_5205 + 356] = 2
                                                mem[_5205 + 388] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(13, 19, _5208) >> 19) + 512, 2, block.timestamp
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                else:
                    if ext_call.return_data[32] + block.timestamp < block.timestamp:
                        revert with 0, 'SafeMath: addition overflow'
                    if not arg5:
                        emit 0x29ed85fa: arg5, ext_call.return_data[32] + block.timestamp, arg2, ext_call.return_data[0]
                        mem[mem[64]] = 0x9a43573c00000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = arg1
                        mem[mem[64] + 36] = ext_call.return_data[0]
                        mem[mem[64] + 68] = ext_call.return_data[32] + block.timestamp
                        require ext_code.size(erc721ContractAddress)
                        call erc721ContractAddress.transferNewToken(bytes32 arg1, uint256 arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args arg1, ext_call.return_data[0], ext_call.return_data[32] + block.timestamp
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if not arg2:
                            mem[0] = cd[((32 * idx) + arg4 + 36)]
                            mem[32] = sha3(arg3, 17)
                            if not stor17[arg3][cd[((32 * idx) + arg4 + 36)]]:
                                revert with 0, 'collectible must be on sale'
                            if ext_call.return_data[64]:
                                mem[mem[64]] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = ext_call.return_data[0]
                                mem[mem[64] + 36] = ext_call.return_data[64]
                                mem[mem[64] + 68] = 0
                                mem[mem[64] + 100] = block.timestamp
                                require ext_code.size(erc721ContractAddress)
                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], ext_call.return_data[64], 0, block.timestamp
                            else:
                                _5534 = mem[64]
                                mem[mem[64] + 32] = ext_call.return_data[0]
                                mem[mem[64] + 64] = block.timestamp
                                _5535 = mem[64]
                                mem[mem[64]] = 64
                                mem[64] = mem[64] + 96
                                _5537 = sha3(mem[_5535 + 32 len mem[_5535]])
                                if uint64(ext_call.return_data[0]) >> 192 >= 30:
                                    if uint16(sha3(mem[_5535 + 32 len mem[_5535]])) < 656:
                                        if not Mask(16, 16, sha3(mem[_5535 + 32 len mem[_5535]])) >> 16:
                                            mem[_5534 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5534 + 100] = ext_call.return_data[0]
                                            mem[_5534 + 132] = 524288
                                            mem[_5534 + 164] = 16
                                            mem[_5534 + 196] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 524288, 16, block.timestamp
                                        else:
                                            if Mask(16, 16, sha3(mem[_5535 + 32 len mem[_5535]])) >> 13 / Mask(16, 16, sha3(mem[_5535 + 32 len mem[_5535]])) >> 16 != 8:
                                                revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5534 + 197 len 31]
                                            mem[_5534 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5534 + 100] = ext_call.return_data[0]
                                            mem[_5534 + 132] = (Mask(16, 16, _5537) >> 13) + 524288
                                            mem[_5534 + 164] = 16
                                            mem[_5534 + 196] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(16, 16, _5537) >> 13) + 524288, 16, block.timestamp
                                    else:
                                        if uint16(sha3(mem[_5535 + 32 len mem[_5535]])) < 2623:
                                            if not Mask(16, 16, sha3(mem[_5535 + 32 len mem[_5535]])) >> 16:
                                                mem[_5534 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5534 + 100] = ext_call.return_data[0]
                                                mem[_5534 + 132] = 131072
                                                mem[_5534 + 164] = 8
                                                mem[_5534 + 196] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 131072, 8, block.timestamp
                                            else:
                                                if Mask(16, 16, sha3(mem[_5535 + 32 len mem[_5535]])) >> 14 / Mask(16, 16, sha3(mem[_5535 + 32 len mem[_5535]])) >> 16 != 4:
                                                    revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5534 + 197 len 31]
                                                mem[_5534 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5534 + 100] = ext_call.return_data[0]
                                                mem[_5534 + 132] = (Mask(16, 16, _5537) >> 14) + 131072
                                                mem[_5534 + 164] = 8
                                                mem[_5534 + 196] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(16, 16, _5537) >> 14) + 131072, 8, block.timestamp
                                        else:
                                            if uint16(sha3(mem[_5535 + 32 len mem[_5535]])) < 9177:
                                                mem[_5534 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5534 + 100] = ext_call.return_data[0]
                                                mem[_5534 + 132] = (Mask(16, 16, _5537) >> 16) + 16384
                                                mem[_5534 + 164] = 4
                                                mem[_5534 + 196] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(16, 16, _5537) >> 16) + 16384, 4, block.timestamp
                                            else:
                                                mem[64] = _5534 + 160
                                                mem[_5534 + 96] = 26
                                                mem[_5534 + 128] = 'SafeMath: division by zero'
                                                mem[_5534 + 160] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5534 + 164] = ext_call.return_data[0]
                                                if uint16(sha3(mem[_5535 + 32 len mem[_5535]])) >= 25561:
                                                    mem[_5534 + 196] = (Mask(8, 24, _5537) >> 24) + 1
                                                    mem[_5534 + 228] = 1
                                                    mem[_5534 + 260] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(8, 24, _5537) >> 24) + 1, 1, block.timestamp
                                                else:
                                                    mem[_5534 + 196] = (Mask(13, 19, _5537) >> 19) + 512
                                                    mem[_5534 + 228] = 2
                                                    mem[_5534 + 260] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(13, 19, _5537) >> 19) + 512, 2, block.timestamp
                                else:
                                    mem[_5534 + 96] = 30
                                    mem[_5534 + 128] = 'SafeMath: subtraction overflow'
                                    if uint64(ext_call.return_data[0]) >> 192 > 30:
                                        mem[_5534 + 160] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[_5534 + 164] = 32
                                        idx = 32
                                        while idx < 30:
                                            mem[idx + _5534 + 228] = mem[idx + _5534 + 128]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    mem[64] = _5534 + 224
                                    mem[_5534 + 160] = 26
                                    mem[_5534 + 192] = 'SafeMath: division by zero'
                                    if not -(uint64(ext_call.return_data[0]) >> 192) + 30:
                                        mem[_5534 + 224] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[_5534 + 228] = 32
                                        idx = 0
                                        while idx < 26:
                                            mem[idx + _5534 + 292] = mem[idx + _5534 + 192]
                                            idx = idx + 32
                                            continue 
                                        mem[_5534 + 292] = mem[_5534 + 298 len 26]
                                        revert with 0, 32, 26, mem[_5534 + 292]
                                    if uint16(_5537) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 656:
                                        if not Mask(16, 16, _5537) >> 16:
                                            mem[_5534 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5534 + 228] = ext_call.return_data[0]
                                            mem[_5534 + 260] = 524288
                                            mem[_5534 + 292] = 16
                                            mem[_5534 + 324] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 524288, 16, block.timestamp
                                        else:
                                            if Mask(16, 16, _5537) >> 13 / Mask(16, 16, _5537) >> 16 != 8:
                                                revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5534 + 325 len 31]
                                            mem[_5534 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5534 + 228] = ext_call.return_data[0]
                                            mem[_5534 + 260] = (Mask(16, 16, _5537) >> 13) + 524288
                                            mem[_5534 + 292] = 16
                                            mem[_5534 + 324] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(16, 16, _5537) >> 13) + 524288, 16, block.timestamp
                                    else:
                                        if uint16(_5537) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 2623:
                                            if not Mask(16, 16, _5537) >> 16:
                                                mem[_5534 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5534 + 228] = ext_call.return_data[0]
                                                mem[_5534 + 260] = 131072
                                                mem[_5534 + 292] = 8
                                                mem[_5534 + 324] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 131072, 8, block.timestamp
                                            else:
                                                if Mask(16, 16, _5537) >> 14 / Mask(16, 16, _5537) >> 16 != 4:
                                                    revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5534 + 325 len 31]
                                                mem[_5534 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5534 + 228] = ext_call.return_data[0]
                                                mem[_5534 + 260] = (Mask(16, 16, _5537) >> 14) + 131072
                                                mem[_5534 + 292] = 8
                                                mem[_5534 + 324] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(16, 16, _5537) >> 14) + 131072, 8, block.timestamp
                                        else:
                                            if uint16(_5537) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 9177:
                                                mem[_5534 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5534 + 228] = ext_call.return_data[0]
                                                mem[_5534 + 260] = (Mask(16, 16, _5537) >> 16) + 16384
                                                mem[_5534 + 292] = 4
                                                mem[_5534 + 324] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(16, 16, _5537) >> 16) + 16384, 4, block.timestamp
                                            else:
                                                mem[64] = _5534 + 288
                                                mem[_5534 + 224] = 26
                                                mem[_5534 + 256] = 'SafeMath: division by zero'
                                                mem[_5534 + 288] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5534 + 292] = ext_call.return_data[0]
                                                if uint16(_5537) / -(uint64(ext_call.return_data[0]) >> 192) + 30 >= 25561:
                                                    mem[_5534 + 324] = (Mask(8, 24, _5537) >> 24) + 1
                                                    mem[_5534 + 356] = 1
                                                    mem[_5534 + 388] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(8, 24, _5537) >> 24) + 1, 1, block.timestamp
                                                else:
                                                    mem[_5534 + 324] = (Mask(13, 19, _5537) >> 19) + 512
                                                    mem[_5534 + 356] = 2
                                                    mem[_5534 + 388] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(13, 19, _5537) >> 19) + 512, 2, block.timestamp
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                    else:
                        mem[32] = sha3(arg2, 19)
                        purchaseIdtoTokenIds[arg2][arg5].field_0++
                        mem[0] = sha3(arg5, sha3(arg2, 19))
                        purchaseIdtoTokenIds[arg2][arg5][purchaseIdtoTokenIds[arg2][arg5].field_0].field_0 = ext_call.return_data[0]
                        emit 0x29ed85fa: arg5, ext_call.return_data[32] + block.timestamp, arg2, ext_call.return_data[0]
                        mem[mem[64]] = 0x9a43573c00000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = arg1
                        mem[mem[64] + 36] = ext_call.return_data[0]
                        mem[mem[64] + 68] = ext_call.return_data[32] + block.timestamp
                        require ext_code.size(erc721ContractAddress)
                        call erc721ContractAddress.transferNewToken(bytes32 arg1, uint256 arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args arg1, ext_call.return_data[0], ext_call.return_data[32] + block.timestamp
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if not arg2:
                            mem[0] = cd[((32 * idx) + arg4 + 36)]
                            mem[32] = sha3(arg3, 17)
                            if not stor17[arg3][cd[((32 * idx) + arg4 + 36)]]:
                                revert with 0, 'collectible must be on sale'
                            if ext_call.return_data[64]:
                                mem[mem[64]] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = ext_call.return_data[0]
                                mem[mem[64] + 36] = ext_call.return_data[64]
                                mem[mem[64] + 68] = 0
                                mem[mem[64] + 100] = block.timestamp
                                require ext_code.size(erc721ContractAddress)
                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], ext_call.return_data[64], 0, block.timestamp
                            else:
                                _5650 = mem[64]
                                mem[mem[64] + 32] = ext_call.return_data[0]
                                mem[mem[64] + 64] = block.timestamp
                                _5651 = mem[64]
                                mem[mem[64]] = 64
                                mem[64] = mem[64] + 96
                                _5653 = sha3(mem[_5651 + 32 len mem[_5651]])
                                if uint64(ext_call.return_data[0]) >> 192 >= 30:
                                    if uint16(sha3(mem[_5651 + 32 len mem[_5651]])) < 656:
                                        if not Mask(16, 16, sha3(mem[_5651 + 32 len mem[_5651]])) >> 16:
                                            mem[_5650 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5650 + 100] = ext_call.return_data[0]
                                            mem[_5650 + 132] = 524288
                                            mem[_5650 + 164] = 16
                                            mem[_5650 + 196] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 524288, 16, block.timestamp
                                        else:
                                            if Mask(16, 16, sha3(mem[_5651 + 32 len mem[_5651]])) >> 13 / Mask(16, 16, sha3(mem[_5651 + 32 len mem[_5651]])) >> 16 != 8:
                                                revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5650 + 197 len 31]
                                            mem[_5650 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5650 + 100] = ext_call.return_data[0]
                                            mem[_5650 + 132] = (Mask(16, 16, _5653) >> 13) + 524288
                                            mem[_5650 + 164] = 16
                                            mem[_5650 + 196] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(16, 16, _5653) >> 13) + 524288, 16, block.timestamp
                                    else:
                                        if uint16(sha3(mem[_5651 + 32 len mem[_5651]])) < 2623:
                                            if not Mask(16, 16, sha3(mem[_5651 + 32 len mem[_5651]])) >> 16:
                                                mem[_5650 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5650 + 100] = ext_call.return_data[0]
                                                mem[_5650 + 132] = 131072
                                                mem[_5650 + 164] = 8
                                                mem[_5650 + 196] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 131072, 8, block.timestamp
                                            else:
                                                if Mask(16, 16, sha3(mem[_5651 + 32 len mem[_5651]])) >> 14 / Mask(16, 16, sha3(mem[_5651 + 32 len mem[_5651]])) >> 16 != 4:
                                                    revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5650 + 197 len 31]
                                                mem[_5650 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5650 + 100] = ext_call.return_data[0]
                                                mem[_5650 + 132] = (Mask(16, 16, _5653) >> 14) + 131072
                                                mem[_5650 + 164] = 8
                                                mem[_5650 + 196] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(16, 16, _5653) >> 14) + 131072, 8, block.timestamp
                                        else:
                                            if uint16(sha3(mem[_5651 + 32 len mem[_5651]])) < 9177:
                                                mem[_5650 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5650 + 100] = ext_call.return_data[0]
                                                mem[_5650 + 132] = (Mask(16, 16, _5653) >> 16) + 16384
                                                mem[_5650 + 164] = 4
                                                mem[_5650 + 196] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(16, 16, _5653) >> 16) + 16384, 4, block.timestamp
                                            else:
                                                mem[64] = _5650 + 160
                                                mem[_5650 + 96] = 26
                                                mem[_5650 + 128] = 'SafeMath: division by zero'
                                                mem[_5650 + 160] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5650 + 164] = ext_call.return_data[0]
                                                if uint16(sha3(mem[_5651 + 32 len mem[_5651]])) >= 25561:
                                                    mem[_5650 + 196] = (Mask(8, 24, _5653) >> 24) + 1
                                                    mem[_5650 + 228] = 1
                                                    mem[_5650 + 260] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(8, 24, _5653) >> 24) + 1, 1, block.timestamp
                                                else:
                                                    mem[_5650 + 196] = (Mask(13, 19, _5653) >> 19) + 512
                                                    mem[_5650 + 228] = 2
                                                    mem[_5650 + 260] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(13, 19, _5653) >> 19) + 512, 2, block.timestamp
                                else:
                                    mem[_5650 + 96] = 30
                                    mem[_5650 + 128] = 'SafeMath: subtraction overflow'
                                    if uint64(ext_call.return_data[0]) >> 192 > 30:
                                        mem[_5650 + 160] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[_5650 + 164] = 32
                                        idx = 32
                                        while idx < 30:
                                            mem[idx + _5650 + 228] = mem[idx + _5650 + 128]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    mem[64] = _5650 + 224
                                    mem[_5650 + 160] = 26
                                    mem[_5650 + 192] = 'SafeMath: division by zero'
                                    if not -(uint64(ext_call.return_data[0]) >> 192) + 30:
                                        mem[_5650 + 224] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[_5650 + 228] = 32
                                        idx = 0
                                        while idx < 26:
                                            mem[idx + _5650 + 292] = mem[idx + _5650 + 192]
                                            idx = idx + 32
                                            continue 
                                        mem[_5650 + 292] = mem[_5650 + 298 len 26]
                                        revert with 0, 32, 26, mem[_5650 + 292]
                                    if uint16(_5653) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 656:
                                        if not Mask(16, 16, _5653) >> 16:
                                            mem[_5650 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5650 + 228] = ext_call.return_data[0]
                                            mem[_5650 + 260] = 524288
                                            mem[_5650 + 292] = 16
                                            mem[_5650 + 324] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 524288, 16, block.timestamp
                                        else:
                                            if Mask(16, 16, _5653) >> 13 / Mask(16, 16, _5653) >> 16 != 8:
                                                revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5650 + 325 len 31]
                                            mem[_5650 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5650 + 228] = ext_call.return_data[0]
                                            mem[_5650 + 260] = (Mask(16, 16, _5653) >> 13) + 524288
                                            mem[_5650 + 292] = 16
                                            mem[_5650 + 324] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(16, 16, _5653) >> 13) + 524288, 16, block.timestamp
                                    else:
                                        if uint16(_5653) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 2623:
                                            if not Mask(16, 16, _5653) >> 16:
                                                mem[_5650 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5650 + 228] = ext_call.return_data[0]
                                                mem[_5650 + 260] = 131072
                                                mem[_5650 + 292] = 8
                                                mem[_5650 + 324] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 131072, 8, block.timestamp
                                            else:
                                                if Mask(16, 16, _5653) >> 14 / Mask(16, 16, _5653) >> 16 != 4:
                                                    revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5650 + 325 len 31]
                                                mem[_5650 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5650 + 228] = ext_call.return_data[0]
                                                mem[_5650 + 260] = (Mask(16, 16, _5653) >> 14) + 131072
                                                mem[_5650 + 292] = 8
                                                mem[_5650 + 324] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(16, 16, _5653) >> 14) + 131072, 8, block.timestamp
                                        else:
                                            if uint16(_5653) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 9177:
                                                mem[_5650 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5650 + 228] = ext_call.return_data[0]
                                                mem[_5650 + 260] = (Mask(16, 16, _5653) >> 16) + 16384
                                                mem[_5650 + 292] = 4
                                                mem[_5650 + 324] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(16, 16, _5653) >> 16) + 16384, 4, block.timestamp
                                            else:
                                                mem[64] = _5650 + 288
                                                mem[_5650 + 224] = 26
                                                mem[_5650 + 256] = 'SafeMath: division by zero'
                                                mem[_5650 + 288] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5650 + 292] = ext_call.return_data[0]
                                                if uint16(_5653) / -(uint64(ext_call.return_data[0]) >> 192) + 30 >= 25561:
                                                    mem[_5650 + 324] = (Mask(8, 24, _5653) >> 24) + 1
                                                    mem[_5650 + 356] = 1
                                                    mem[_5650 + 388] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(8, 24, _5653) >> 24) + 1, 1, block.timestamp
                                                else:
                                                    mem[_5650 + 324] = (Mask(13, 19, _5653) >> 19) + 512
                                                    mem[_5650 + 356] = 2
                                                    mem[_5650 + 388] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(13, 19, _5653) >> 19) + 512, 2, block.timestamp
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                require idx < mem[ceil32(calldata.size) + 128]
                mem[(32 * idx) + ceil32(calldata.size) + 160] = ext_call.return_data[0]
                idx = idx + 1
                continue 
            mem[mem[64]] = 32
            mem[mem[64] + 32] = mem[ceil32(calldata.size) + 128]
            _4671 = mem[ceil32(calldata.size) + 128]
            mem[mem[64] + 64 len floor32(mem[ceil32(calldata.size) + 128])] = mem[ceil32(calldata.size) + 160 len floor32(mem[ceil32(calldata.size) + 128])]
            return 32, mem[mem[64] + 32 len (32 * _4671) + 32]
        mem[ceil32(calldata.size) + 160 len 32 * arg4.length] = call.data[calldata.size len 32 * arg4.length]
        idx = 0
        while idx < arg4.length:
            require ext_code.size(gameContractAddress)
            call gameContractAddress.createTokenFromCard(uint256 arg1, uint256 arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args arg2, arg3, cd[((32 * idx) + arg4 + 36)]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 96
            if arg5 == -1:
                emit 0x29ed85fa: arg5, 0, arg2, ext_call.return_data[0]
                mem[mem[64]] = 0x9a43573c00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = arg1
                mem[mem[64] + 36] = ext_call.return_data[0]
                mem[mem[64] + 68] = 0
                require ext_code.size(erc721ContractAddress)
                call erc721ContractAddress.transferNewToken(bytes32 arg1, uint256 arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args arg1, ext_call.return_data[0], 0
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                if not arg2:
                    mem[0] = cd[((32 * idx) + arg4 + 36)]
                    mem[32] = sha3(arg3, 17)
                    if not stor17[arg3][cd[((32 * idx) + arg4 + 36)]]:
                        revert with 0, 'collectible must be on sale'
                    if ext_call.return_data[64]:
                        mem[mem[64]] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = ext_call.return_data[0]
                        mem[mem[64] + 36] = ext_call.return_data[64]
                        mem[mem[64] + 68] = 0
                        mem[mem[64] + 100] = block.timestamp
                        require ext_code.size(erc721ContractAddress)
                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0], ext_call.return_data[64], 0, block.timestamp
                    else:
                        _5209 = mem[64]
                        mem[mem[64] + 32] = ext_call.return_data[0]
                        mem[mem[64] + 64] = block.timestamp
                        _5210 = mem[64]
                        mem[mem[64]] = 64
                        mem[64] = mem[64] + 96
                        _5212 = sha3(mem[_5210 + 32 len mem[_5210]])
                        if uint64(ext_call.return_data[0]) >> 192 >= 30:
                            if uint16(sha3(mem[_5210 + 32 len mem[_5210]])) < 656:
                                if not Mask(16, 16, sha3(mem[_5210 + 32 len mem[_5210]])) >> 16:
                                    mem[_5209 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                    mem[_5209 + 100] = ext_call.return_data[0]
                                    mem[_5209 + 132] = 524288
                                    mem[_5209 + 164] = 16
                                    mem[_5209 + 196] = block.timestamp
                                    require ext_code.size(erc721ContractAddress)
                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 524288, 16, block.timestamp
                                else:
                                    if Mask(16, 16, sha3(mem[_5210 + 32 len mem[_5210]])) >> 13 / Mask(16, 16, sha3(mem[_5210 + 32 len mem[_5210]])) >> 16 != 8:
                                        revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5209 + 197 len 31]
                                    mem[_5209 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                    mem[_5209 + 100] = ext_call.return_data[0]
                                    mem[_5209 + 132] = (Mask(16, 16, _5212) >> 13) + 524288
                                    mem[_5209 + 164] = 16
                                    mem[_5209 + 196] = block.timestamp
                                    require ext_code.size(erc721ContractAddress)
                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], (Mask(16, 16, _5212) >> 13) + 524288, 16, block.timestamp
                            else:
                                if uint16(sha3(mem[_5210 + 32 len mem[_5210]])) < 2623:
                                    if not Mask(16, 16, sha3(mem[_5210 + 32 len mem[_5210]])) >> 16:
                                        mem[_5209 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5209 + 100] = ext_call.return_data[0]
                                        mem[_5209 + 132] = 131072
                                        mem[_5209 + 164] = 8
                                        mem[_5209 + 196] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 131072, 8, block.timestamp
                                    else:
                                        if Mask(16, 16, sha3(mem[_5210 + 32 len mem[_5210]])) >> 14 / Mask(16, 16, sha3(mem[_5210 + 32 len mem[_5210]])) >> 16 != 4:
                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5209 + 197 len 31]
                                        mem[_5209 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5209 + 100] = ext_call.return_data[0]
                                        mem[_5209 + 132] = (Mask(16, 16, _5212) >> 14) + 131072
                                        mem[_5209 + 164] = 8
                                        mem[_5209 + 196] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], (Mask(16, 16, _5212) >> 14) + 131072, 8, block.timestamp
                                else:
                                    if uint16(sha3(mem[_5210 + 32 len mem[_5210]])) < 9177:
                                        mem[_5209 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5209 + 100] = ext_call.return_data[0]
                                        mem[_5209 + 132] = (Mask(16, 16, _5212) >> 16) + 16384
                                        mem[_5209 + 164] = 4
                                        mem[_5209 + 196] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], (Mask(16, 16, _5212) >> 16) + 16384, 4, block.timestamp
                                    else:
                                        mem[64] = _5209 + 160
                                        mem[_5209 + 96] = 26
                                        mem[_5209 + 128] = 'SafeMath: division by zero'
                                        mem[_5209 + 160] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5209 + 164] = ext_call.return_data[0]
                                        if uint16(sha3(mem[_5210 + 32 len mem[_5210]])) >= 25561:
                                            mem[_5209 + 196] = (Mask(8, 24, _5212) >> 24) + 1
                                            mem[_5209 + 228] = 1
                                            mem[_5209 + 260] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(8, 24, _5212) >> 24) + 1, 1, block.timestamp
                                        else:
                                            mem[_5209 + 196] = (Mask(13, 19, _5212) >> 19) + 512
                                            mem[_5209 + 228] = 2
                                            mem[_5209 + 260] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(13, 19, _5212) >> 19) + 512, 2, block.timestamp
                        else:
                            mem[_5209 + 96] = 30
                            mem[_5209 + 128] = 'SafeMath: subtraction overflow'
                            if uint64(ext_call.return_data[0]) >> 192 > 30:
                                mem[_5209 + 160] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_5209 + 164] = 32
                                idx = 32
                                while idx < 30:
                                    mem[idx + _5209 + 228] = mem[idx + _5209 + 128]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 'SafeMath: subtraction overflow'
                            mem[64] = _5209 + 224
                            mem[_5209 + 160] = 26
                            mem[_5209 + 192] = 'SafeMath: division by zero'
                            if not -(uint64(ext_call.return_data[0]) >> 192) + 30:
                                mem[_5209 + 224] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_5209 + 228] = 32
                                idx = 0
                                while idx < 26:
                                    mem[idx + _5209 + 292] = mem[idx + _5209 + 192]
                                    idx = idx + 32
                                    continue 
                                mem[_5209 + 292] = mem[_5209 + 298 len 26]
                                revert with 0, 32, 26, mem[_5209 + 292]
                            if uint16(_5212) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 656:
                                if not Mask(16, 16, _5212) >> 16:
                                    mem[_5209 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                    mem[_5209 + 228] = ext_call.return_data[0]
                                    mem[_5209 + 260] = 524288
                                    mem[_5209 + 292] = 16
                                    mem[_5209 + 324] = block.timestamp
                                    require ext_code.size(erc721ContractAddress)
                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 524288, 16, block.timestamp
                                else:
                                    if Mask(16, 16, _5212) >> 13 / Mask(16, 16, _5212) >> 16 != 8:
                                        revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5209 + 325 len 31]
                                    mem[_5209 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                    mem[_5209 + 228] = ext_call.return_data[0]
                                    mem[_5209 + 260] = (Mask(16, 16, _5212) >> 13) + 524288
                                    mem[_5209 + 292] = 16
                                    mem[_5209 + 324] = block.timestamp
                                    require ext_code.size(erc721ContractAddress)
                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], (Mask(16, 16, _5212) >> 13) + 524288, 16, block.timestamp
                            else:
                                if uint16(_5212) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 2623:
                                    if not Mask(16, 16, _5212) >> 16:
                                        mem[_5209 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5209 + 228] = ext_call.return_data[0]
                                        mem[_5209 + 260] = 131072
                                        mem[_5209 + 292] = 8
                                        mem[_5209 + 324] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 131072, 8, block.timestamp
                                    else:
                                        if Mask(16, 16, _5212) >> 14 / Mask(16, 16, _5212) >> 16 != 4:
                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5209 + 325 len 31]
                                        mem[_5209 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5209 + 228] = ext_call.return_data[0]
                                        mem[_5209 + 260] = (Mask(16, 16, _5212) >> 14) + 131072
                                        mem[_5209 + 292] = 8
                                        mem[_5209 + 324] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], (Mask(16, 16, _5212) >> 14) + 131072, 8, block.timestamp
                                else:
                                    if uint16(_5212) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 9177:
                                        mem[_5209 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5209 + 228] = ext_call.return_data[0]
                                        mem[_5209 + 260] = (Mask(16, 16, _5212) >> 16) + 16384
                                        mem[_5209 + 292] = 4
                                        mem[_5209 + 324] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], (Mask(16, 16, _5212) >> 16) + 16384, 4, block.timestamp
                                    else:
                                        mem[64] = _5209 + 288
                                        mem[_5209 + 224] = 26
                                        mem[_5209 + 256] = 'SafeMath: division by zero'
                                        mem[_5209 + 288] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5209 + 292] = ext_call.return_data[0]
                                        if uint16(_5212) / -(uint64(ext_call.return_data[0]) >> 192) + 30 >= 25561:
                                            mem[_5209 + 324] = (Mask(8, 24, _5212) >> 24) + 1
                                            mem[_5209 + 356] = 1
                                            mem[_5209 + 388] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(8, 24, _5212) >> 24) + 1, 1, block.timestamp
                                        else:
                                            mem[_5209 + 324] = (Mask(13, 19, _5212) >> 19) + 512
                                            mem[_5209 + 356] = 2
                                            mem[_5209 + 388] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(13, 19, _5212) >> 19) + 512, 2, block.timestamp
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
            else:
                if ext_call.return_data[32] + block.timestamp < block.timestamp:
                    revert with 0, 'SafeMath: addition overflow'
                if not arg5:
                    emit 0x29ed85fa: arg5, ext_call.return_data[32] + block.timestamp, arg2, ext_call.return_data[0]
                    mem[mem[64]] = 0x9a43573c00000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = arg1
                    mem[mem[64] + 36] = ext_call.return_data[0]
                    mem[mem[64] + 68] = ext_call.return_data[32] + block.timestamp
                    require ext_code.size(erc721ContractAddress)
                    call erc721ContractAddress.transferNewToken(bytes32 arg1, uint256 arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args arg1, ext_call.return_data[0], ext_call.return_data[32] + block.timestamp
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    if not arg2:
                        mem[0] = cd[((32 * idx) + arg4 + 36)]
                        mem[32] = sha3(arg3, 17)
                        if not stor17[arg3][cd[((32 * idx) + arg4 + 36)]]:
                            revert with 0, 'collectible must be on sale'
                        if ext_call.return_data[64]:
                            mem[mem[64]] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = ext_call.return_data[0]
                            mem[mem[64] + 36] = ext_call.return_data[64]
                            mem[mem[64] + 68] = 0
                            mem[mem[64] + 100] = block.timestamp
                            require ext_code.size(erc721ContractAddress)
                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], ext_call.return_data[64], 0, block.timestamp
                        else:
                            _5539 = mem[64]
                            mem[mem[64] + 32] = ext_call.return_data[0]
                            mem[mem[64] + 64] = block.timestamp
                            _5540 = mem[64]
                            mem[mem[64]] = 64
                            mem[64] = mem[64] + 96
                            _5542 = sha3(mem[_5540 + 32 len mem[_5540]])
                            if uint64(ext_call.return_data[0]) >> 192 >= 30:
                                if uint16(sha3(mem[_5540 + 32 len mem[_5540]])) < 656:
                                    if not Mask(16, 16, sha3(mem[_5540 + 32 len mem[_5540]])) >> 16:
                                        mem[_5539 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5539 + 100] = ext_call.return_data[0]
                                        mem[_5539 + 132] = 524288
                                        mem[_5539 + 164] = 16
                                        mem[_5539 + 196] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 524288, 16, block.timestamp
                                    else:
                                        if Mask(16, 16, sha3(mem[_5540 + 32 len mem[_5540]])) >> 13 / Mask(16, 16, sha3(mem[_5540 + 32 len mem[_5540]])) >> 16 != 8:
                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5539 + 197 len 31]
                                        mem[_5539 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5539 + 100] = ext_call.return_data[0]
                                        mem[_5539 + 132] = (Mask(16, 16, _5542) >> 13) + 524288
                                        mem[_5539 + 164] = 16
                                        mem[_5539 + 196] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], (Mask(16, 16, _5542) >> 13) + 524288, 16, block.timestamp
                                else:
                                    if uint16(sha3(mem[_5540 + 32 len mem[_5540]])) < 2623:
                                        if not Mask(16, 16, sha3(mem[_5540 + 32 len mem[_5540]])) >> 16:
                                            mem[_5539 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5539 + 100] = ext_call.return_data[0]
                                            mem[_5539 + 132] = 131072
                                            mem[_5539 + 164] = 8
                                            mem[_5539 + 196] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 131072, 8, block.timestamp
                                        else:
                                            if Mask(16, 16, sha3(mem[_5540 + 32 len mem[_5540]])) >> 14 / Mask(16, 16, sha3(mem[_5540 + 32 len mem[_5540]])) >> 16 != 4:
                                                revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5539 + 197 len 31]
                                            mem[_5539 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5539 + 100] = ext_call.return_data[0]
                                            mem[_5539 + 132] = (Mask(16, 16, _5542) >> 14) + 131072
                                            mem[_5539 + 164] = 8
                                            mem[_5539 + 196] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(16, 16, _5542) >> 14) + 131072, 8, block.timestamp
                                    else:
                                        if uint16(sha3(mem[_5540 + 32 len mem[_5540]])) < 9177:
                                            mem[_5539 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5539 + 100] = ext_call.return_data[0]
                                            mem[_5539 + 132] = (Mask(16, 16, _5542) >> 16) + 16384
                                            mem[_5539 + 164] = 4
                                            mem[_5539 + 196] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(16, 16, _5542) >> 16) + 16384, 4, block.timestamp
                                        else:
                                            mem[64] = _5539 + 160
                                            mem[_5539 + 96] = 26
                                            mem[_5539 + 128] = 'SafeMath: division by zero'
                                            mem[_5539 + 160] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5539 + 164] = ext_call.return_data[0]
                                            if uint16(sha3(mem[_5540 + 32 len mem[_5540]])) >= 25561:
                                                mem[_5539 + 196] = (Mask(8, 24, _5542) >> 24) + 1
                                                mem[_5539 + 228] = 1
                                                mem[_5539 + 260] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(8, 24, _5542) >> 24) + 1, 1, block.timestamp
                                            else:
                                                mem[_5539 + 196] = (Mask(13, 19, _5542) >> 19) + 512
                                                mem[_5539 + 228] = 2
                                                mem[_5539 + 260] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(13, 19, _5542) >> 19) + 512, 2, block.timestamp
                            else:
                                mem[_5539 + 96] = 30
                                mem[_5539 + 128] = 'SafeMath: subtraction overflow'
                                if uint64(ext_call.return_data[0]) >> 192 > 30:
                                    mem[_5539 + 160] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_5539 + 164] = 32
                                    idx = 32
                                    while idx < 30:
                                        mem[idx + _5539 + 228] = mem[idx + _5539 + 128]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 'SafeMath: subtraction overflow'
                                mem[64] = _5539 + 224
                                mem[_5539 + 160] = 26
                                mem[_5539 + 192] = 'SafeMath: division by zero'
                                if not -(uint64(ext_call.return_data[0]) >> 192) + 30:
                                    mem[_5539 + 224] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_5539 + 228] = 32
                                    idx = 0
                                    while idx < 26:
                                        mem[idx + _5539 + 292] = mem[idx + _5539 + 192]
                                        idx = idx + 32
                                        continue 
                                    mem[_5539 + 292] = mem[_5539 + 298 len 26]
                                    revert with 0, 32, 26, mem[_5539 + 292]
                                if uint16(_5542) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 656:
                                    if not Mask(16, 16, _5542) >> 16:
                                        mem[_5539 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5539 + 228] = ext_call.return_data[0]
                                        mem[_5539 + 260] = 524288
                                        mem[_5539 + 292] = 16
                                        mem[_5539 + 324] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 524288, 16, block.timestamp
                                    else:
                                        if Mask(16, 16, _5542) >> 13 / Mask(16, 16, _5542) >> 16 != 8:
                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5539 + 325 len 31]
                                        mem[_5539 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5539 + 228] = ext_call.return_data[0]
                                        mem[_5539 + 260] = (Mask(16, 16, _5542) >> 13) + 524288
                                        mem[_5539 + 292] = 16
                                        mem[_5539 + 324] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], (Mask(16, 16, _5542) >> 13) + 524288, 16, block.timestamp
                                else:
                                    if uint16(_5542) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 2623:
                                        if not Mask(16, 16, _5542) >> 16:
                                            mem[_5539 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5539 + 228] = ext_call.return_data[0]
                                            mem[_5539 + 260] = 131072
                                            mem[_5539 + 292] = 8
                                            mem[_5539 + 324] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 131072, 8, block.timestamp
                                        else:
                                            if Mask(16, 16, _5542) >> 14 / Mask(16, 16, _5542) >> 16 != 4:
                                                revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5539 + 325 len 31]
                                            mem[_5539 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5539 + 228] = ext_call.return_data[0]
                                            mem[_5539 + 260] = (Mask(16, 16, _5542) >> 14) + 131072
                                            mem[_5539 + 292] = 8
                                            mem[_5539 + 324] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(16, 16, _5542) >> 14) + 131072, 8, block.timestamp
                                    else:
                                        if uint16(_5542) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 9177:
                                            mem[_5539 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5539 + 228] = ext_call.return_data[0]
                                            mem[_5539 + 260] = (Mask(16, 16, _5542) >> 16) + 16384
                                            mem[_5539 + 292] = 4
                                            mem[_5539 + 324] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(16, 16, _5542) >> 16) + 16384, 4, block.timestamp
                                        else:
                                            mem[64] = _5539 + 288
                                            mem[_5539 + 224] = 26
                                            mem[_5539 + 256] = 'SafeMath: division by zero'
                                            mem[_5539 + 288] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5539 + 292] = ext_call.return_data[0]
                                            if uint16(_5542) / -(uint64(ext_call.return_data[0]) >> 192) + 30 >= 25561:
                                                mem[_5539 + 324] = (Mask(8, 24, _5542) >> 24) + 1
                                                mem[_5539 + 356] = 1
                                                mem[_5539 + 388] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(8, 24, _5542) >> 24) + 1, 1, block.timestamp
                                            else:
                                                mem[_5539 + 324] = (Mask(13, 19, _5542) >> 19) + 512
                                                mem[_5539 + 356] = 2
                                                mem[_5539 + 388] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(13, 19, _5542) >> 19) + 512, 2, block.timestamp
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                else:
                    mem[32] = sha3(arg2, 19)
                    purchaseIdtoTokenIds[arg2][arg5].field_0++
                    mem[0] = sha3(arg5, sha3(arg2, 19))
                    purchaseIdtoTokenIds[arg2][arg5][purchaseIdtoTokenIds[arg2][arg5].field_0].field_0 = ext_call.return_data[0]
                    emit 0x29ed85fa: arg5, ext_call.return_data[32] + block.timestamp, arg2, ext_call.return_data[0]
                    mem[mem[64]] = 0x9a43573c00000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = arg1
                    mem[mem[64] + 36] = ext_call.return_data[0]
                    mem[mem[64] + 68] = ext_call.return_data[32] + block.timestamp
                    require ext_code.size(erc721ContractAddress)
                    call erc721ContractAddress.transferNewToken(bytes32 arg1, uint256 arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args arg1, ext_call.return_data[0], ext_call.return_data[32] + block.timestamp
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    if not arg2:
                        mem[0] = cd[((32 * idx) + arg4 + 36)]
                        mem[32] = sha3(arg3, 17)
                        if not stor17[arg3][cd[((32 * idx) + arg4 + 36)]]:
                            revert with 0, 'collectible must be on sale'
                        if ext_call.return_data[64]:
                            mem[mem[64]] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = ext_call.return_data[0]
                            mem[mem[64] + 36] = ext_call.return_data[64]
                            mem[mem[64] + 68] = 0
                            mem[mem[64] + 100] = block.timestamp
                            require ext_code.size(erc721ContractAddress)
                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], ext_call.return_data[64], 0, block.timestamp
                        else:
                            _5659 = mem[64]
                            mem[mem[64] + 32] = ext_call.return_data[0]
                            mem[mem[64] + 64] = block.timestamp
                            _5660 = mem[64]
                            mem[mem[64]] = 64
                            mem[64] = mem[64] + 96
                            _5662 = sha3(mem[_5660 + 32 len mem[_5660]])
                            if uint64(ext_call.return_data[0]) >> 192 >= 30:
                                if uint16(sha3(mem[_5660 + 32 len mem[_5660]])) < 656:
                                    if not Mask(16, 16, sha3(mem[_5660 + 32 len mem[_5660]])) >> 16:
                                        mem[_5659 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5659 + 100] = ext_call.return_data[0]
                                        mem[_5659 + 132] = 524288
                                        mem[_5659 + 164] = 16
                                        mem[_5659 + 196] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 524288, 16, block.timestamp
                                    else:
                                        if Mask(16, 16, sha3(mem[_5660 + 32 len mem[_5660]])) >> 13 / Mask(16, 16, sha3(mem[_5660 + 32 len mem[_5660]])) >> 16 != 8:
                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5659 + 197 len 31]
                                        mem[_5659 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5659 + 100] = ext_call.return_data[0]
                                        mem[_5659 + 132] = (Mask(16, 16, _5662) >> 13) + 524288
                                        mem[_5659 + 164] = 16
                                        mem[_5659 + 196] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], (Mask(16, 16, _5662) >> 13) + 524288, 16, block.timestamp
                                else:
                                    if uint16(sha3(mem[_5660 + 32 len mem[_5660]])) < 2623:
                                        if not Mask(16, 16, sha3(mem[_5660 + 32 len mem[_5660]])) >> 16:
                                            mem[_5659 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5659 + 100] = ext_call.return_data[0]
                                            mem[_5659 + 132] = 131072
                                            mem[_5659 + 164] = 8
                                            mem[_5659 + 196] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 131072, 8, block.timestamp
                                        else:
                                            if Mask(16, 16, sha3(mem[_5660 + 32 len mem[_5660]])) >> 14 / Mask(16, 16, sha3(mem[_5660 + 32 len mem[_5660]])) >> 16 != 4:
                                                revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5659 + 197 len 31]
                                            mem[_5659 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5659 + 100] = ext_call.return_data[0]
                                            mem[_5659 + 132] = (Mask(16, 16, _5662) >> 14) + 131072
                                            mem[_5659 + 164] = 8
                                            mem[_5659 + 196] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(16, 16, _5662) >> 14) + 131072, 8, block.timestamp
                                    else:
                                        if uint16(sha3(mem[_5660 + 32 len mem[_5660]])) < 9177:
                                            mem[_5659 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5659 + 100] = ext_call.return_data[0]
                                            mem[_5659 + 132] = (Mask(16, 16, _5662) >> 16) + 16384
                                            mem[_5659 + 164] = 4
                                            mem[_5659 + 196] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(16, 16, _5662) >> 16) + 16384, 4, block.timestamp
                                        else:
                                            mem[64] = _5659 + 160
                                            mem[_5659 + 96] = 26
                                            mem[_5659 + 128] = 'SafeMath: division by zero'
                                            mem[_5659 + 160] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5659 + 164] = ext_call.return_data[0]
                                            if uint16(sha3(mem[_5660 + 32 len mem[_5660]])) >= 25561:
                                                mem[_5659 + 196] = (Mask(8, 24, _5662) >> 24) + 1
                                                mem[_5659 + 228] = 1
                                                mem[_5659 + 260] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(8, 24, _5662) >> 24) + 1, 1, block.timestamp
                                            else:
                                                mem[_5659 + 196] = (Mask(13, 19, _5662) >> 19) + 512
                                                mem[_5659 + 228] = 2
                                                mem[_5659 + 260] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(13, 19, _5662) >> 19) + 512, 2, block.timestamp
                            else:
                                mem[_5659 + 96] = 30
                                mem[_5659 + 128] = 'SafeMath: subtraction overflow'
                                if uint64(ext_call.return_data[0]) >> 192 > 30:
                                    mem[_5659 + 160] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_5659 + 164] = 32
                                    idx = 32
                                    while idx < 30:
                                        mem[idx + _5659 + 228] = mem[idx + _5659 + 128]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 'SafeMath: subtraction overflow'
                                mem[64] = _5659 + 224
                                mem[_5659 + 160] = 26
                                mem[_5659 + 192] = 'SafeMath: division by zero'
                                if not -(uint64(ext_call.return_data[0]) >> 192) + 30:
                                    mem[_5659 + 224] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_5659 + 228] = 32
                                    idx = 0
                                    while idx < 26:
                                        mem[idx + _5659 + 292] = mem[idx + _5659 + 192]
                                        idx = idx + 32
                                        continue 
                                    mem[_5659 + 292] = mem[_5659 + 298 len 26]
                                    revert with 0, 32, 26, mem[_5659 + 292]
                                if uint16(_5662) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 656:
                                    if not Mask(16, 16, _5662) >> 16:
                                        mem[_5659 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5659 + 228] = ext_call.return_data[0]
                                        mem[_5659 + 260] = 524288
                                        mem[_5659 + 292] = 16
                                        mem[_5659 + 324] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 524288, 16, block.timestamp
                                    else:
                                        if Mask(16, 16, _5662) >> 13 / Mask(16, 16, _5662) >> 16 != 8:
                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5659 + 325 len 31]
                                        mem[_5659 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5659 + 228] = ext_call.return_data[0]
                                        mem[_5659 + 260] = (Mask(16, 16, _5662) >> 13) + 524288
                                        mem[_5659 + 292] = 16
                                        mem[_5659 + 324] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], (Mask(16, 16, _5662) >> 13) + 524288, 16, block.timestamp
                                else:
                                    if uint16(_5662) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 2623:
                                        if not Mask(16, 16, _5662) >> 16:
                                            mem[_5659 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5659 + 228] = ext_call.return_data[0]
                                            mem[_5659 + 260] = 131072
                                            mem[_5659 + 292] = 8
                                            mem[_5659 + 324] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 131072, 8, block.timestamp
                                        else:
                                            if Mask(16, 16, _5662) >> 14 / Mask(16, 16, _5662) >> 16 != 4:
                                                revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5659 + 325 len 31]
                                            mem[_5659 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5659 + 228] = ext_call.return_data[0]
                                            mem[_5659 + 260] = (Mask(16, 16, _5662) >> 14) + 131072
                                            mem[_5659 + 292] = 8
                                            mem[_5659 + 324] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(16, 16, _5662) >> 14) + 131072, 8, block.timestamp
                                    else:
                                        if uint16(_5662) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 9177:
                                            mem[_5659 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5659 + 228] = ext_call.return_data[0]
                                            mem[_5659 + 260] = (Mask(16, 16, _5662) >> 16) + 16384
                                            mem[_5659 + 292] = 4
                                            mem[_5659 + 324] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(16, 16, _5662) >> 16) + 16384, 4, block.timestamp
                                        else:
                                            mem[64] = _5659 + 288
                                            mem[_5659 + 224] = 26
                                            mem[_5659 + 256] = 'SafeMath: division by zero'
                                            mem[_5659 + 288] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5659 + 292] = ext_call.return_data[0]
                                            if uint16(_5662) / -(uint64(ext_call.return_data[0]) >> 192) + 30 >= 25561:
                                                mem[_5659 + 324] = (Mask(8, 24, _5662) >> 24) + 1
                                                mem[_5659 + 356] = 1
                                                mem[_5659 + 388] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(8, 24, _5662) >> 24) + 1, 1, block.timestamp
                                            else:
                                                mem[_5659 + 324] = (Mask(13, 19, _5662) >> 19) + 512
                                                mem[_5659 + 356] = 2
                                                mem[_5659 + 388] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(13, 19, _5662) >> 19) + 512, 2, block.timestamp
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
            require idx < mem[ceil32(calldata.size) + 128]
            mem[(32 * idx) + ceil32(calldata.size) + 160] = ext_call.return_data[0]
            idx = idx + 1
            continue 
        mem[mem[64]] = 32
        mem[mem[64] + 32] = mem[ceil32(calldata.size) + 128]
        _4674 = mem[ceil32(calldata.size) + 128]
        mem[mem[64] + 64 len floor32(mem[ceil32(calldata.size) + 128])] = mem[ceil32(calldata.size) + 160 len floor32(mem[ceil32(calldata.size) + 128])]
        return 32, mem[mem[64] + 32 len (32 * _4674) + 32]
    if gasGrantAmount <= 0:
        mem[ceil32(calldata.size) + 132] = mem[calldata.size + 108 len 20]
        mem[ceil32(calldata.size) + 164] = bool(ext_call.return_data[0])
        mem[ceil32(calldata.size) + 196] = arg2
        require ext_code.size(gameContractAddress)
        staticcall gameContractAddress.isValidCaller(address arg1, bool arg2, uint256 arg3) with:
                gas gas_remaining wei
               args mem[calldata.size + 108 len 20], bool(ext_call.return_data[0]), arg2
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            revert with 0, 'admin, operator, or worker'
        require arg4.length <= test266151307()
        mem[ceil32(calldata.size) + 128] = arg4.length
        mem[64] = ceil32(calldata.size) + (32 * arg4.length) + 160
        if not arg4.length:
            idx = 0
            while idx < arg4.length:
                require ext_code.size(gameContractAddress)
                call gameContractAddress.createTokenFromCard(uint256 arg1, uint256 arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args arg2, arg3, cd[((32 * idx) + arg4 + 36)]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 96
                if arg5 == -1:
                    emit 0x29ed85fa: arg5, 0, arg2, ext_call.return_data[0]
                    mem[mem[64]] = 0x9a43573c00000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = arg1
                    mem[mem[64] + 36] = ext_call.return_data[0]
                    mem[mem[64] + 68] = 0
                    require ext_code.size(erc721ContractAddress)
                    call erc721ContractAddress.transferNewToken(bytes32 arg1, uint256 arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args arg1, ext_call.return_data[0], 0
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    if not arg2:
                        mem[0] = cd[((32 * idx) + arg4 + 36)]
                        mem[32] = sha3(arg3, 17)
                        if not stor17[arg3][cd[((32 * idx) + arg4 + 36)]]:
                            revert with 0, 'collectible must be on sale'
                        if ext_call.return_data[64]:
                            mem[mem[64]] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = ext_call.return_data[0]
                            mem[mem[64] + 36] = ext_call.return_data[64]
                            mem[mem[64] + 68] = 0
                            mem[mem[64] + 100] = block.timestamp
                            require ext_code.size(erc721ContractAddress)
                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], ext_call.return_data[64], 0, block.timestamp
                        else:
                            _5213 = mem[64]
                            mem[mem[64] + 32] = ext_call.return_data[0]
                            mem[mem[64] + 64] = block.timestamp
                            _5214 = mem[64]
                            mem[mem[64]] = 64
                            mem[64] = mem[64] + 96
                            _5216 = sha3(mem[_5214 + 32 len mem[_5214]])
                            if uint64(ext_call.return_data[0]) >> 192 >= 30:
                                if uint16(sha3(mem[_5214 + 32 len mem[_5214]])) < 656:
                                    if not Mask(16, 16, sha3(mem[_5214 + 32 len mem[_5214]])) >> 16:
                                        mem[_5213 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5213 + 100] = ext_call.return_data[0]
                                        mem[_5213 + 132] = 524288
                                        mem[_5213 + 164] = 16
                                        mem[_5213 + 196] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 524288, 16, block.timestamp
                                    else:
                                        if Mask(16, 16, sha3(mem[_5214 + 32 len mem[_5214]])) >> 13 / Mask(16, 16, sha3(mem[_5214 + 32 len mem[_5214]])) >> 16 != 8:
                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5213 + 197 len 31]
                                        mem[_5213 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5213 + 100] = ext_call.return_data[0]
                                        mem[_5213 + 132] = (Mask(16, 16, _5216) >> 13) + 524288
                                        mem[_5213 + 164] = 16
                                        mem[_5213 + 196] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], (Mask(16, 16, _5216) >> 13) + 524288, 16, block.timestamp
                                else:
                                    if uint16(sha3(mem[_5214 + 32 len mem[_5214]])) < 2623:
                                        if not Mask(16, 16, sha3(mem[_5214 + 32 len mem[_5214]])) >> 16:
                                            mem[_5213 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5213 + 100] = ext_call.return_data[0]
                                            mem[_5213 + 132] = 131072
                                            mem[_5213 + 164] = 8
                                            mem[_5213 + 196] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 131072, 8, block.timestamp
                                        else:
                                            if Mask(16, 16, sha3(mem[_5214 + 32 len mem[_5214]])) >> 14 / Mask(16, 16, sha3(mem[_5214 + 32 len mem[_5214]])) >> 16 != 4:
                                                revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5213 + 197 len 31]
                                            mem[_5213 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5213 + 100] = ext_call.return_data[0]
                                            mem[_5213 + 132] = (Mask(16, 16, _5216) >> 14) + 131072
                                            mem[_5213 + 164] = 8
                                            mem[_5213 + 196] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(16, 16, _5216) >> 14) + 131072, 8, block.timestamp
                                    else:
                                        if uint16(sha3(mem[_5214 + 32 len mem[_5214]])) < 9177:
                                            mem[_5213 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5213 + 100] = ext_call.return_data[0]
                                            mem[_5213 + 132] = (Mask(16, 16, _5216) >> 16) + 16384
                                            mem[_5213 + 164] = 4
                                            mem[_5213 + 196] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(16, 16, _5216) >> 16) + 16384, 4, block.timestamp
                                        else:
                                            mem[64] = _5213 + 160
                                            mem[_5213 + 96] = 26
                                            mem[_5213 + 128] = 'SafeMath: division by zero'
                                            mem[_5213 + 160] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5213 + 164] = ext_call.return_data[0]
                                            if uint16(sha3(mem[_5214 + 32 len mem[_5214]])) >= 25561:
                                                mem[_5213 + 196] = (Mask(8, 24, _5216) >> 24) + 1
                                                mem[_5213 + 228] = 1
                                                mem[_5213 + 260] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(8, 24, _5216) >> 24) + 1, 1, block.timestamp
                                            else:
                                                mem[_5213 + 196] = (Mask(13, 19, _5216) >> 19) + 512
                                                mem[_5213 + 228] = 2
                                                mem[_5213 + 260] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(13, 19, _5216) >> 19) + 512, 2, block.timestamp
                            else:
                                mem[_5213 + 96] = 30
                                mem[_5213 + 128] = 'SafeMath: subtraction overflow'
                                if uint64(ext_call.return_data[0]) >> 192 > 30:
                                    mem[_5213 + 160] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_5213 + 164] = 32
                                    idx = 32
                                    while idx < 30:
                                        mem[idx + _5213 + 228] = mem[idx + _5213 + 128]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 'SafeMath: subtraction overflow'
                                mem[64] = _5213 + 224
                                mem[_5213 + 160] = 26
                                mem[_5213 + 192] = 'SafeMath: division by zero'
                                if not -(uint64(ext_call.return_data[0]) >> 192) + 30:
                                    mem[_5213 + 224] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_5213 + 228] = 32
                                    idx = 0
                                    while idx < 26:
                                        mem[idx + _5213 + 292] = mem[idx + _5213 + 192]
                                        idx = idx + 32
                                        continue 
                                    mem[_5213 + 292] = mem[_5213 + 298 len 26]
                                    revert with 0, 32, 26, mem[_5213 + 292]
                                if uint16(_5216) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 656:
                                    if not Mask(16, 16, _5216) >> 16:
                                        mem[_5213 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5213 + 228] = ext_call.return_data[0]
                                        mem[_5213 + 260] = 524288
                                        mem[_5213 + 292] = 16
                                        mem[_5213 + 324] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 524288, 16, block.timestamp
                                    else:
                                        if Mask(16, 16, _5216) >> 13 / Mask(16, 16, _5216) >> 16 != 8:
                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5213 + 325 len 31]
                                        mem[_5213 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5213 + 228] = ext_call.return_data[0]
                                        mem[_5213 + 260] = (Mask(16, 16, _5216) >> 13) + 524288
                                        mem[_5213 + 292] = 16
                                        mem[_5213 + 324] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], (Mask(16, 16, _5216) >> 13) + 524288, 16, block.timestamp
                                else:
                                    if uint16(_5216) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 2623:
                                        if not Mask(16, 16, _5216) >> 16:
                                            mem[_5213 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5213 + 228] = ext_call.return_data[0]
                                            mem[_5213 + 260] = 131072
                                            mem[_5213 + 292] = 8
                                            mem[_5213 + 324] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 131072, 8, block.timestamp
                                        else:
                                            if Mask(16, 16, _5216) >> 14 / Mask(16, 16, _5216) >> 16 != 4:
                                                revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5213 + 325 len 31]
                                            mem[_5213 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5213 + 228] = ext_call.return_data[0]
                                            mem[_5213 + 260] = (Mask(16, 16, _5216) >> 14) + 131072
                                            mem[_5213 + 292] = 8
                                            mem[_5213 + 324] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(16, 16, _5216) >> 14) + 131072, 8, block.timestamp
                                    else:
                                        if uint16(_5216) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 9177:
                                            mem[_5213 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5213 + 228] = ext_call.return_data[0]
                                            mem[_5213 + 260] = (Mask(16, 16, _5216) >> 16) + 16384
                                            mem[_5213 + 292] = 4
                                            mem[_5213 + 324] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(16, 16, _5216) >> 16) + 16384, 4, block.timestamp
                                        else:
                                            mem[64] = _5213 + 288
                                            mem[_5213 + 224] = 26
                                            mem[_5213 + 256] = 'SafeMath: division by zero'
                                            mem[_5213 + 288] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5213 + 292] = ext_call.return_data[0]
                                            if uint16(_5216) / -(uint64(ext_call.return_data[0]) >> 192) + 30 >= 25561:
                                                mem[_5213 + 324] = (Mask(8, 24, _5216) >> 24) + 1
                                                mem[_5213 + 356] = 1
                                                mem[_5213 + 388] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(8, 24, _5216) >> 24) + 1, 1, block.timestamp
                                            else:
                                                mem[_5213 + 324] = (Mask(13, 19, _5216) >> 19) + 512
                                                mem[_5213 + 356] = 2
                                                mem[_5213 + 388] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(13, 19, _5216) >> 19) + 512, 2, block.timestamp
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                else:
                    if ext_call.return_data[32] + block.timestamp < block.timestamp:
                        revert with 0, 'SafeMath: addition overflow'
                    if not arg5:
                        emit 0x29ed85fa: arg5, ext_call.return_data[32] + block.timestamp, arg2, ext_call.return_data[0]
                        mem[mem[64]] = 0x9a43573c00000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = arg1
                        mem[mem[64] + 36] = ext_call.return_data[0]
                        mem[mem[64] + 68] = ext_call.return_data[32] + block.timestamp
                        require ext_code.size(erc721ContractAddress)
                        call erc721ContractAddress.transferNewToken(bytes32 arg1, uint256 arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args arg1, ext_call.return_data[0], ext_call.return_data[32] + block.timestamp
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if not arg2:
                            mem[0] = cd[((32 * idx) + arg4 + 36)]
                            mem[32] = sha3(arg3, 17)
                            if not stor17[arg3][cd[((32 * idx) + arg4 + 36)]]:
                                revert with 0, 'collectible must be on sale'
                            if ext_call.return_data[64]:
                                mem[mem[64]] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = ext_call.return_data[0]
                                mem[mem[64] + 36] = ext_call.return_data[64]
                                mem[mem[64] + 68] = 0
                                mem[mem[64] + 100] = block.timestamp
                                require ext_code.size(erc721ContractAddress)
                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], ext_call.return_data[64], 0, block.timestamp
                            else:
                                _5544 = mem[64]
                                mem[mem[64] + 32] = ext_call.return_data[0]
                                mem[mem[64] + 64] = block.timestamp
                                _5545 = mem[64]
                                mem[mem[64]] = 64
                                mem[64] = mem[64] + 96
                                _5547 = sha3(mem[_5545 + 32 len mem[_5545]])
                                if uint64(ext_call.return_data[0]) >> 192 >= 30:
                                    if uint16(sha3(mem[_5545 + 32 len mem[_5545]])) < 656:
                                        if not Mask(16, 16, sha3(mem[_5545 + 32 len mem[_5545]])) >> 16:
                                            mem[_5544 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5544 + 100] = ext_call.return_data[0]
                                            mem[_5544 + 132] = 524288
                                            mem[_5544 + 164] = 16
                                            mem[_5544 + 196] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 524288, 16, block.timestamp
                                        else:
                                            if Mask(16, 16, sha3(mem[_5545 + 32 len mem[_5545]])) >> 13 / Mask(16, 16, sha3(mem[_5545 + 32 len mem[_5545]])) >> 16 != 8:
                                                revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5544 + 197 len 31]
                                            mem[_5544 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5544 + 100] = ext_call.return_data[0]
                                            mem[_5544 + 132] = (Mask(16, 16, _5547) >> 13) + 524288
                                            mem[_5544 + 164] = 16
                                            mem[_5544 + 196] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(16, 16, _5547) >> 13) + 524288, 16, block.timestamp
                                    else:
                                        if uint16(sha3(mem[_5545 + 32 len mem[_5545]])) < 2623:
                                            if not Mask(16, 16, sha3(mem[_5545 + 32 len mem[_5545]])) >> 16:
                                                mem[_5544 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5544 + 100] = ext_call.return_data[0]
                                                mem[_5544 + 132] = 131072
                                                mem[_5544 + 164] = 8
                                                mem[_5544 + 196] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 131072, 8, block.timestamp
                                            else:
                                                if Mask(16, 16, sha3(mem[_5545 + 32 len mem[_5545]])) >> 14 / Mask(16, 16, sha3(mem[_5545 + 32 len mem[_5545]])) >> 16 != 4:
                                                    revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5544 + 197 len 31]
                                                mem[_5544 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5544 + 100] = ext_call.return_data[0]
                                                mem[_5544 + 132] = (Mask(16, 16, _5547) >> 14) + 131072
                                                mem[_5544 + 164] = 8
                                                mem[_5544 + 196] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(16, 16, _5547) >> 14) + 131072, 8, block.timestamp
                                        else:
                                            if uint16(sha3(mem[_5545 + 32 len mem[_5545]])) < 9177:
                                                mem[_5544 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5544 + 100] = ext_call.return_data[0]
                                                mem[_5544 + 132] = (Mask(16, 16, _5547) >> 16) + 16384
                                                mem[_5544 + 164] = 4
                                                mem[_5544 + 196] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(16, 16, _5547) >> 16) + 16384, 4, block.timestamp
                                            else:
                                                mem[64] = _5544 + 160
                                                mem[_5544 + 96] = 26
                                                mem[_5544 + 128] = 'SafeMath: division by zero'
                                                mem[_5544 + 160] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5544 + 164] = ext_call.return_data[0]
                                                if uint16(sha3(mem[_5545 + 32 len mem[_5545]])) >= 25561:
                                                    mem[_5544 + 196] = (Mask(8, 24, _5547) >> 24) + 1
                                                    mem[_5544 + 228] = 1
                                                    mem[_5544 + 260] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(8, 24, _5547) >> 24) + 1, 1, block.timestamp
                                                else:
                                                    mem[_5544 + 196] = (Mask(13, 19, _5547) >> 19) + 512
                                                    mem[_5544 + 228] = 2
                                                    mem[_5544 + 260] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(13, 19, _5547) >> 19) + 512, 2, block.timestamp
                                else:
                                    mem[_5544 + 96] = 30
                                    mem[_5544 + 128] = 'SafeMath: subtraction overflow'
                                    if uint64(ext_call.return_data[0]) >> 192 > 30:
                                        mem[_5544 + 160] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[_5544 + 164] = 32
                                        idx = 32
                                        while idx < 30:
                                            mem[idx + _5544 + 228] = mem[idx + _5544 + 128]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    mem[64] = _5544 + 224
                                    mem[_5544 + 160] = 26
                                    mem[_5544 + 192] = 'SafeMath: division by zero'
                                    if not -(uint64(ext_call.return_data[0]) >> 192) + 30:
                                        mem[_5544 + 224] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[_5544 + 228] = 32
                                        idx = 0
                                        while idx < 26:
                                            mem[idx + _5544 + 292] = mem[idx + _5544 + 192]
                                            idx = idx + 32
                                            continue 
                                        mem[_5544 + 292] = mem[_5544 + 298 len 26]
                                        revert with 0, 32, 26, mem[_5544 + 292]
                                    if uint16(_5547) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 656:
                                        if not Mask(16, 16, _5547) >> 16:
                                            mem[_5544 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5544 + 228] = ext_call.return_data[0]
                                            mem[_5544 + 260] = 524288
                                            mem[_5544 + 292] = 16
                                            mem[_5544 + 324] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 524288, 16, block.timestamp
                                        else:
                                            if Mask(16, 16, _5547) >> 13 / Mask(16, 16, _5547) >> 16 != 8:
                                                revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5544 + 325 len 31]
                                            mem[_5544 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5544 + 228] = ext_call.return_data[0]
                                            mem[_5544 + 260] = (Mask(16, 16, _5547) >> 13) + 524288
                                            mem[_5544 + 292] = 16
                                            mem[_5544 + 324] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(16, 16, _5547) >> 13) + 524288, 16, block.timestamp
                                    else:
                                        if uint16(_5547) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 2623:
                                            if not Mask(16, 16, _5547) >> 16:
                                                mem[_5544 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5544 + 228] = ext_call.return_data[0]
                                                mem[_5544 + 260] = 131072
                                                mem[_5544 + 292] = 8
                                                mem[_5544 + 324] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 131072, 8, block.timestamp
                                            else:
                                                if Mask(16, 16, _5547) >> 14 / Mask(16, 16, _5547) >> 16 != 4:
                                                    revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5544 + 325 len 31]
                                                mem[_5544 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5544 + 228] = ext_call.return_data[0]
                                                mem[_5544 + 260] = (Mask(16, 16, _5547) >> 14) + 131072
                                                mem[_5544 + 292] = 8
                                                mem[_5544 + 324] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(16, 16, _5547) >> 14) + 131072, 8, block.timestamp
                                        else:
                                            if uint16(_5547) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 9177:
                                                mem[_5544 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5544 + 228] = ext_call.return_data[0]
                                                mem[_5544 + 260] = (Mask(16, 16, _5547) >> 16) + 16384
                                                mem[_5544 + 292] = 4
                                                mem[_5544 + 324] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(16, 16, _5547) >> 16) + 16384, 4, block.timestamp
                                            else:
                                                mem[64] = _5544 + 288
                                                mem[_5544 + 224] = 26
                                                mem[_5544 + 256] = 'SafeMath: division by zero'
                                                mem[_5544 + 288] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5544 + 292] = ext_call.return_data[0]
                                                if uint16(_5547) / -(uint64(ext_call.return_data[0]) >> 192) + 30 >= 25561:
                                                    mem[_5544 + 324] = (Mask(8, 24, _5547) >> 24) + 1
                                                    mem[_5544 + 356] = 1
                                                    mem[_5544 + 388] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(8, 24, _5547) >> 24) + 1, 1, block.timestamp
                                                else:
                                                    mem[_5544 + 324] = (Mask(13, 19, _5547) >> 19) + 512
                                                    mem[_5544 + 356] = 2
                                                    mem[_5544 + 388] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(13, 19, _5547) >> 19) + 512, 2, block.timestamp
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                    else:
                        mem[32] = sha3(arg2, 19)
                        purchaseIdtoTokenIds[arg2][arg5].field_0++
                        mem[0] = sha3(arg5, sha3(arg2, 19))
                        purchaseIdtoTokenIds[arg2][arg5][purchaseIdtoTokenIds[arg2][arg5].field_0].field_0 = ext_call.return_data[0]
                        emit 0x29ed85fa: arg5, ext_call.return_data[32] + block.timestamp, arg2, ext_call.return_data[0]
                        mem[mem[64]] = 0x9a43573c00000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = arg1
                        mem[mem[64] + 36] = ext_call.return_data[0]
                        mem[mem[64] + 68] = ext_call.return_data[32] + block.timestamp
                        require ext_code.size(erc721ContractAddress)
                        call erc721ContractAddress.transferNewToken(bytes32 arg1, uint256 arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args arg1, ext_call.return_data[0], ext_call.return_data[32] + block.timestamp
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if not arg2:
                            mem[0] = cd[((32 * idx) + arg4 + 36)]
                            mem[32] = sha3(arg3, 17)
                            if not stor17[arg3][cd[((32 * idx) + arg4 + 36)]]:
                                revert with 0, 'collectible must be on sale'
                            if ext_call.return_data[64]:
                                mem[mem[64]] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = ext_call.return_data[0]
                                mem[mem[64] + 36] = ext_call.return_data[64]
                                mem[mem[64] + 68] = 0
                                mem[mem[64] + 100] = block.timestamp
                                require ext_code.size(erc721ContractAddress)
                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], ext_call.return_data[64], 0, block.timestamp
                            else:
                                _5668 = mem[64]
                                mem[mem[64] + 32] = ext_call.return_data[0]
                                mem[mem[64] + 64] = block.timestamp
                                _5669 = mem[64]
                                mem[mem[64]] = 64
                                mem[64] = mem[64] + 96
                                _5671 = sha3(mem[_5669 + 32 len mem[_5669]])
                                if uint64(ext_call.return_data[0]) >> 192 >= 30:
                                    if uint16(sha3(mem[_5669 + 32 len mem[_5669]])) < 656:
                                        if not Mask(16, 16, sha3(mem[_5669 + 32 len mem[_5669]])) >> 16:
                                            mem[_5668 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5668 + 100] = ext_call.return_data[0]
                                            mem[_5668 + 132] = 524288
                                            mem[_5668 + 164] = 16
                                            mem[_5668 + 196] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 524288, 16, block.timestamp
                                        else:
                                            if Mask(16, 16, sha3(mem[_5669 + 32 len mem[_5669]])) >> 13 / Mask(16, 16, sha3(mem[_5669 + 32 len mem[_5669]])) >> 16 != 8:
                                                revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5668 + 197 len 31]
                                            mem[_5668 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5668 + 100] = ext_call.return_data[0]
                                            mem[_5668 + 132] = (Mask(16, 16, _5671) >> 13) + 524288
                                            mem[_5668 + 164] = 16
                                            mem[_5668 + 196] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(16, 16, _5671) >> 13) + 524288, 16, block.timestamp
                                    else:
                                        if uint16(sha3(mem[_5669 + 32 len mem[_5669]])) < 2623:
                                            if not Mask(16, 16, sha3(mem[_5669 + 32 len mem[_5669]])) >> 16:
                                                mem[_5668 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5668 + 100] = ext_call.return_data[0]
                                                mem[_5668 + 132] = 131072
                                                mem[_5668 + 164] = 8
                                                mem[_5668 + 196] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 131072, 8, block.timestamp
                                            else:
                                                if Mask(16, 16, sha3(mem[_5669 + 32 len mem[_5669]])) >> 14 / Mask(16, 16, sha3(mem[_5669 + 32 len mem[_5669]])) >> 16 != 4:
                                                    revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5668 + 197 len 31]
                                                mem[_5668 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5668 + 100] = ext_call.return_data[0]
                                                mem[_5668 + 132] = (Mask(16, 16, _5671) >> 14) + 131072
                                                mem[_5668 + 164] = 8
                                                mem[_5668 + 196] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(16, 16, _5671) >> 14) + 131072, 8, block.timestamp
                                        else:
                                            if uint16(sha3(mem[_5669 + 32 len mem[_5669]])) < 9177:
                                                mem[_5668 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5668 + 100] = ext_call.return_data[0]
                                                mem[_5668 + 132] = (Mask(16, 16, _5671) >> 16) + 16384
                                                mem[_5668 + 164] = 4
                                                mem[_5668 + 196] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(16, 16, _5671) >> 16) + 16384, 4, block.timestamp
                                            else:
                                                mem[64] = _5668 + 160
                                                mem[_5668 + 96] = 26
                                                mem[_5668 + 128] = 'SafeMath: division by zero'
                                                mem[_5668 + 160] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5668 + 164] = ext_call.return_data[0]
                                                if uint16(sha3(mem[_5669 + 32 len mem[_5669]])) >= 25561:
                                                    mem[_5668 + 196] = (Mask(8, 24, _5671) >> 24) + 1
                                                    mem[_5668 + 228] = 1
                                                    mem[_5668 + 260] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(8, 24, _5671) >> 24) + 1, 1, block.timestamp
                                                else:
                                                    mem[_5668 + 196] = (Mask(13, 19, _5671) >> 19) + 512
                                                    mem[_5668 + 228] = 2
                                                    mem[_5668 + 260] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(13, 19, _5671) >> 19) + 512, 2, block.timestamp
                                else:
                                    mem[_5668 + 96] = 30
                                    mem[_5668 + 128] = 'SafeMath: subtraction overflow'
                                    if uint64(ext_call.return_data[0]) >> 192 > 30:
                                        mem[_5668 + 160] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[_5668 + 164] = 32
                                        idx = 32
                                        while idx < 30:
                                            mem[idx + _5668 + 228] = mem[idx + _5668 + 128]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    mem[64] = _5668 + 224
                                    mem[_5668 + 160] = 26
                                    mem[_5668 + 192] = 'SafeMath: division by zero'
                                    if not -(uint64(ext_call.return_data[0]) >> 192) + 30:
                                        mem[_5668 + 224] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[_5668 + 228] = 32
                                        idx = 0
                                        while idx < 26:
                                            mem[idx + _5668 + 292] = mem[idx + _5668 + 192]
                                            idx = idx + 32
                                            continue 
                                        mem[_5668 + 292] = mem[_5668 + 298 len 26]
                                        revert with 0, 32, 26, mem[_5668 + 292]
                                    if uint16(_5671) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 656:
                                        if not Mask(16, 16, _5671) >> 16:
                                            mem[_5668 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5668 + 228] = ext_call.return_data[0]
                                            mem[_5668 + 260] = 524288
                                            mem[_5668 + 292] = 16
                                            mem[_5668 + 324] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 524288, 16, block.timestamp
                                        else:
                                            if Mask(16, 16, _5671) >> 13 / Mask(16, 16, _5671) >> 16 != 8:
                                                revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5668 + 325 len 31]
                                            mem[_5668 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5668 + 228] = ext_call.return_data[0]
                                            mem[_5668 + 260] = (Mask(16, 16, _5671) >> 13) + 524288
                                            mem[_5668 + 292] = 16
                                            mem[_5668 + 324] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(16, 16, _5671) >> 13) + 524288, 16, block.timestamp
                                    else:
                                        if uint16(_5671) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 2623:
                                            if not Mask(16, 16, _5671) >> 16:
                                                mem[_5668 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5668 + 228] = ext_call.return_data[0]
                                                mem[_5668 + 260] = 131072
                                                mem[_5668 + 292] = 8
                                                mem[_5668 + 324] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 131072, 8, block.timestamp
                                            else:
                                                if Mask(16, 16, _5671) >> 14 / Mask(16, 16, _5671) >> 16 != 4:
                                                    revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5668 + 325 len 31]
                                                mem[_5668 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5668 + 228] = ext_call.return_data[0]
                                                mem[_5668 + 260] = (Mask(16, 16, _5671) >> 14) + 131072
                                                mem[_5668 + 292] = 8
                                                mem[_5668 + 324] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(16, 16, _5671) >> 14) + 131072, 8, block.timestamp
                                        else:
                                            if uint16(_5671) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 9177:
                                                mem[_5668 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5668 + 228] = ext_call.return_data[0]
                                                mem[_5668 + 260] = (Mask(16, 16, _5671) >> 16) + 16384
                                                mem[_5668 + 292] = 4
                                                mem[_5668 + 324] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(16, 16, _5671) >> 16) + 16384, 4, block.timestamp
                                            else:
                                                mem[64] = _5668 + 288
                                                mem[_5668 + 224] = 26
                                                mem[_5668 + 256] = 'SafeMath: division by zero'
                                                mem[_5668 + 288] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5668 + 292] = ext_call.return_data[0]
                                                if uint16(_5671) / -(uint64(ext_call.return_data[0]) >> 192) + 30 >= 25561:
                                                    mem[_5668 + 324] = (Mask(8, 24, _5671) >> 24) + 1
                                                    mem[_5668 + 356] = 1
                                                    mem[_5668 + 388] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(8, 24, _5671) >> 24) + 1, 1, block.timestamp
                                                else:
                                                    mem[_5668 + 324] = (Mask(13, 19, _5671) >> 19) + 512
                                                    mem[_5668 + 356] = 2
                                                    mem[_5668 + 388] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(13, 19, _5671) >> 19) + 512, 2, block.timestamp
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                require idx < mem[ceil32(calldata.size) + 128]
                mem[(32 * idx) + ceil32(calldata.size) + 160] = ext_call.return_data[0]
                idx = idx + 1
                continue 
            mem[mem[64]] = 32
            mem[mem[64] + 32] = mem[ceil32(calldata.size) + 128]
            _4677 = mem[ceil32(calldata.size) + 128]
            mem[mem[64] + 64 len floor32(mem[ceil32(calldata.size) + 128])] = mem[ceil32(calldata.size) + 160 len floor32(mem[ceil32(calldata.size) + 128])]
            return 32, mem[mem[64] + 32 len (32 * _4677) + 32]
        mem[ceil32(calldata.size) + 160 len 32 * arg4.length] = call.data[calldata.size len 32 * arg4.length]
        idx = 0
        while idx < arg4.length:
            require ext_code.size(gameContractAddress)
            call gameContractAddress.createTokenFromCard(uint256 arg1, uint256 arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args arg2, arg3, cd[((32 * idx) + arg4 + 36)]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 96
            if arg5 == -1:
                emit 0x29ed85fa: arg5, 0, arg2, ext_call.return_data[0]
                mem[mem[64]] = 0x9a43573c00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = arg1
                mem[mem[64] + 36] = ext_call.return_data[0]
                mem[mem[64] + 68] = 0
                require ext_code.size(erc721ContractAddress)
                call erc721ContractAddress.transferNewToken(bytes32 arg1, uint256 arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args arg1, ext_call.return_data[0], 0
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                if not arg2:
                    mem[0] = cd[((32 * idx) + arg4 + 36)]
                    mem[32] = sha3(arg3, 17)
                    if not stor17[arg3][cd[((32 * idx) + arg4 + 36)]]:
                        revert with 0, 'collectible must be on sale'
                    if ext_call.return_data[64]:
                        mem[mem[64]] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = ext_call.return_data[0]
                        mem[mem[64] + 36] = ext_call.return_data[64]
                        mem[mem[64] + 68] = 0
                        mem[mem[64] + 100] = block.timestamp
                        require ext_code.size(erc721ContractAddress)
                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0], ext_call.return_data[64], 0, block.timestamp
                    else:
                        _5217 = mem[64]
                        mem[mem[64] + 32] = ext_call.return_data[0]
                        mem[mem[64] + 64] = block.timestamp
                        _5218 = mem[64]
                        mem[mem[64]] = 64
                        mem[64] = mem[64] + 96
                        _5220 = sha3(mem[_5218 + 32 len mem[_5218]])
                        if uint64(ext_call.return_data[0]) >> 192 >= 30:
                            if uint16(sha3(mem[_5218 + 32 len mem[_5218]])) < 656:
                                if not Mask(16, 16, sha3(mem[_5218 + 32 len mem[_5218]])) >> 16:
                                    mem[_5217 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                    mem[_5217 + 100] = ext_call.return_data[0]
                                    mem[_5217 + 132] = 524288
                                    mem[_5217 + 164] = 16
                                    mem[_5217 + 196] = block.timestamp
                                    require ext_code.size(erc721ContractAddress)
                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 524288, 16, block.timestamp
                                else:
                                    if Mask(16, 16, sha3(mem[_5218 + 32 len mem[_5218]])) >> 13 / Mask(16, 16, sha3(mem[_5218 + 32 len mem[_5218]])) >> 16 != 8:
                                        revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5217 + 197 len 31]
                                    mem[_5217 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                    mem[_5217 + 100] = ext_call.return_data[0]
                                    mem[_5217 + 132] = (Mask(16, 16, _5220) >> 13) + 524288
                                    mem[_5217 + 164] = 16
                                    mem[_5217 + 196] = block.timestamp
                                    require ext_code.size(erc721ContractAddress)
                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], (Mask(16, 16, _5220) >> 13) + 524288, 16, block.timestamp
                            else:
                                if uint16(sha3(mem[_5218 + 32 len mem[_5218]])) < 2623:
                                    if not Mask(16, 16, sha3(mem[_5218 + 32 len mem[_5218]])) >> 16:
                                        mem[_5217 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5217 + 100] = ext_call.return_data[0]
                                        mem[_5217 + 132] = 131072
                                        mem[_5217 + 164] = 8
                                        mem[_5217 + 196] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 131072, 8, block.timestamp
                                    else:
                                        if Mask(16, 16, sha3(mem[_5218 + 32 len mem[_5218]])) >> 14 / Mask(16, 16, sha3(mem[_5218 + 32 len mem[_5218]])) >> 16 != 4:
                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5217 + 197 len 31]
                                        mem[_5217 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5217 + 100] = ext_call.return_data[0]
                                        mem[_5217 + 132] = (Mask(16, 16, _5220) >> 14) + 131072
                                        mem[_5217 + 164] = 8
                                        mem[_5217 + 196] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], (Mask(16, 16, _5220) >> 14) + 131072, 8, block.timestamp
                                else:
                                    if uint16(sha3(mem[_5218 + 32 len mem[_5218]])) < 9177:
                                        mem[_5217 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5217 + 100] = ext_call.return_data[0]
                                        mem[_5217 + 132] = (Mask(16, 16, _5220) >> 16) + 16384
                                        mem[_5217 + 164] = 4
                                        mem[_5217 + 196] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], (Mask(16, 16, _5220) >> 16) + 16384, 4, block.timestamp
                                    else:
                                        mem[64] = _5217 + 160
                                        mem[_5217 + 96] = 26
                                        mem[_5217 + 128] = 'SafeMath: division by zero'
                                        mem[_5217 + 160] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5217 + 164] = ext_call.return_data[0]
                                        if uint16(sha3(mem[_5218 + 32 len mem[_5218]])) >= 25561:
                                            mem[_5217 + 196] = (Mask(8, 24, _5220) >> 24) + 1
                                            mem[_5217 + 228] = 1
                                            mem[_5217 + 260] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(8, 24, _5220) >> 24) + 1, 1, block.timestamp
                                        else:
                                            mem[_5217 + 196] = (Mask(13, 19, _5220) >> 19) + 512
                                            mem[_5217 + 228] = 2
                                            mem[_5217 + 260] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(13, 19, _5220) >> 19) + 512, 2, block.timestamp
                        else:
                            mem[_5217 + 96] = 30
                            mem[_5217 + 128] = 'SafeMath: subtraction overflow'
                            if uint64(ext_call.return_data[0]) >> 192 > 30:
                                mem[_5217 + 160] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_5217 + 164] = 32
                                idx = 32
                                while idx < 30:
                                    mem[idx + _5217 + 228] = mem[idx + _5217 + 128]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 'SafeMath: subtraction overflow'
                            mem[64] = _5217 + 224
                            mem[_5217 + 160] = 26
                            mem[_5217 + 192] = 'SafeMath: division by zero'
                            if not -(uint64(ext_call.return_data[0]) >> 192) + 30:
                                mem[_5217 + 224] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_5217 + 228] = 32
                                idx = 0
                                while idx < 26:
                                    mem[idx + _5217 + 292] = mem[idx + _5217 + 192]
                                    idx = idx + 32
                                    continue 
                                mem[_5217 + 292] = mem[_5217 + 298 len 26]
                                revert with 0, 32, 26, mem[_5217 + 292]
                            if uint16(_5220) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 656:
                                if not Mask(16, 16, _5220) >> 16:
                                    mem[_5217 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                    mem[_5217 + 228] = ext_call.return_data[0]
                                    mem[_5217 + 260] = 524288
                                    mem[_5217 + 292] = 16
                                    mem[_5217 + 324] = block.timestamp
                                    require ext_code.size(erc721ContractAddress)
                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 524288, 16, block.timestamp
                                else:
                                    if Mask(16, 16, _5220) >> 13 / Mask(16, 16, _5220) >> 16 != 8:
                                        revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5217 + 325 len 31]
                                    mem[_5217 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                    mem[_5217 + 228] = ext_call.return_data[0]
                                    mem[_5217 + 260] = (Mask(16, 16, _5220) >> 13) + 524288
                                    mem[_5217 + 292] = 16
                                    mem[_5217 + 324] = block.timestamp
                                    require ext_code.size(erc721ContractAddress)
                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], (Mask(16, 16, _5220) >> 13) + 524288, 16, block.timestamp
                            else:
                                if uint16(_5220) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 2623:
                                    if not Mask(16, 16, _5220) >> 16:
                                        mem[_5217 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5217 + 228] = ext_call.return_data[0]
                                        mem[_5217 + 260] = 131072
                                        mem[_5217 + 292] = 8
                                        mem[_5217 + 324] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 131072, 8, block.timestamp
                                    else:
                                        if Mask(16, 16, _5220) >> 14 / Mask(16, 16, _5220) >> 16 != 4:
                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5217 + 325 len 31]
                                        mem[_5217 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5217 + 228] = ext_call.return_data[0]
                                        mem[_5217 + 260] = (Mask(16, 16, _5220) >> 14) + 131072
                                        mem[_5217 + 292] = 8
                                        mem[_5217 + 324] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], (Mask(16, 16, _5220) >> 14) + 131072, 8, block.timestamp
                                else:
                                    if uint16(_5220) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 9177:
                                        mem[_5217 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5217 + 228] = ext_call.return_data[0]
                                        mem[_5217 + 260] = (Mask(16, 16, _5220) >> 16) + 16384
                                        mem[_5217 + 292] = 4
                                        mem[_5217 + 324] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], (Mask(16, 16, _5220) >> 16) + 16384, 4, block.timestamp
                                    else:
                                        mem[64] = _5217 + 288
                                        mem[_5217 + 224] = 26
                                        mem[_5217 + 256] = 'SafeMath: division by zero'
                                        mem[_5217 + 288] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5217 + 292] = ext_call.return_data[0]
                                        if uint16(_5220) / -(uint64(ext_call.return_data[0]) >> 192) + 30 >= 25561:
                                            mem[_5217 + 324] = (Mask(8, 24, _5220) >> 24) + 1
                                            mem[_5217 + 356] = 1
                                            mem[_5217 + 388] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(8, 24, _5220) >> 24) + 1, 1, block.timestamp
                                        else:
                                            mem[_5217 + 324] = (Mask(13, 19, _5220) >> 19) + 512
                                            mem[_5217 + 356] = 2
                                            mem[_5217 + 388] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(13, 19, _5220) >> 19) + 512, 2, block.timestamp
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
            else:
                if ext_call.return_data[32] + block.timestamp < block.timestamp:
                    revert with 0, 'SafeMath: addition overflow'
                if not arg5:
                    emit 0x29ed85fa: arg5, ext_call.return_data[32] + block.timestamp, arg2, ext_call.return_data[0]
                    mem[mem[64]] = 0x9a43573c00000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = arg1
                    mem[mem[64] + 36] = ext_call.return_data[0]
                    mem[mem[64] + 68] = ext_call.return_data[32] + block.timestamp
                    require ext_code.size(erc721ContractAddress)
                    call erc721ContractAddress.transferNewToken(bytes32 arg1, uint256 arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args arg1, ext_call.return_data[0], ext_call.return_data[32] + block.timestamp
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    if not arg2:
                        mem[0] = cd[((32 * idx) + arg4 + 36)]
                        mem[32] = sha3(arg3, 17)
                        if not stor17[arg3][cd[((32 * idx) + arg4 + 36)]]:
                            revert with 0, 'collectible must be on sale'
                        if ext_call.return_data[64]:
                            mem[mem[64]] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = ext_call.return_data[0]
                            mem[mem[64] + 36] = ext_call.return_data[64]
                            mem[mem[64] + 68] = 0
                            mem[mem[64] + 100] = block.timestamp
                            require ext_code.size(erc721ContractAddress)
                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], ext_call.return_data[64], 0, block.timestamp
                        else:
                            _5549 = mem[64]
                            mem[mem[64] + 32] = ext_call.return_data[0]
                            mem[mem[64] + 64] = block.timestamp
                            _5550 = mem[64]
                            mem[mem[64]] = 64
                            mem[64] = mem[64] + 96
                            _5552 = sha3(mem[_5550 + 32 len mem[_5550]])
                            if uint64(ext_call.return_data[0]) >> 192 >= 30:
                                if uint16(sha3(mem[_5550 + 32 len mem[_5550]])) < 656:
                                    if not Mask(16, 16, sha3(mem[_5550 + 32 len mem[_5550]])) >> 16:
                                        mem[_5549 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5549 + 100] = ext_call.return_data[0]
                                        mem[_5549 + 132] = 524288
                                        mem[_5549 + 164] = 16
                                        mem[_5549 + 196] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 524288, 16, block.timestamp
                                    else:
                                        if Mask(16, 16, sha3(mem[_5550 + 32 len mem[_5550]])) >> 13 / Mask(16, 16, sha3(mem[_5550 + 32 len mem[_5550]])) >> 16 != 8:
                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5549 + 197 len 31]
                                        mem[_5549 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5549 + 100] = ext_call.return_data[0]
                                        mem[_5549 + 132] = (Mask(16, 16, _5552) >> 13) + 524288
                                        mem[_5549 + 164] = 16
                                        mem[_5549 + 196] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], (Mask(16, 16, _5552) >> 13) + 524288, 16, block.timestamp
                                else:
                                    if uint16(sha3(mem[_5550 + 32 len mem[_5550]])) < 2623:
                                        if not Mask(16, 16, sha3(mem[_5550 + 32 len mem[_5550]])) >> 16:
                                            mem[_5549 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5549 + 100] = ext_call.return_data[0]
                                            mem[_5549 + 132] = 131072
                                            mem[_5549 + 164] = 8
                                            mem[_5549 + 196] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 131072, 8, block.timestamp
                                        else:
                                            if Mask(16, 16, sha3(mem[_5550 + 32 len mem[_5550]])) >> 14 / Mask(16, 16, sha3(mem[_5550 + 32 len mem[_5550]])) >> 16 != 4:
                                                revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5549 + 197 len 31]
                                            mem[_5549 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5549 + 100] = ext_call.return_data[0]
                                            mem[_5549 + 132] = (Mask(16, 16, _5552) >> 14) + 131072
                                            mem[_5549 + 164] = 8
                                            mem[_5549 + 196] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(16, 16, _5552) >> 14) + 131072, 8, block.timestamp
                                    else:
                                        if uint16(sha3(mem[_5550 + 32 len mem[_5550]])) < 9177:
                                            mem[_5549 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5549 + 100] = ext_call.return_data[0]
                                            mem[_5549 + 132] = (Mask(16, 16, _5552) >> 16) + 16384
                                            mem[_5549 + 164] = 4
                                            mem[_5549 + 196] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(16, 16, _5552) >> 16) + 16384, 4, block.timestamp
                                        else:
                                            mem[64] = _5549 + 160
                                            mem[_5549 + 96] = 26
                                            mem[_5549 + 128] = 'SafeMath: division by zero'
                                            mem[_5549 + 160] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5549 + 164] = ext_call.return_data[0]
                                            if uint16(sha3(mem[_5550 + 32 len mem[_5550]])) >= 25561:
                                                mem[_5549 + 196] = (Mask(8, 24, _5552) >> 24) + 1
                                                mem[_5549 + 228] = 1
                                                mem[_5549 + 260] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(8, 24, _5552) >> 24) + 1, 1, block.timestamp
                                            else:
                                                mem[_5549 + 196] = (Mask(13, 19, _5552) >> 19) + 512
                                                mem[_5549 + 228] = 2
                                                mem[_5549 + 260] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(13, 19, _5552) >> 19) + 512, 2, block.timestamp
                            else:
                                mem[_5549 + 96] = 30
                                mem[_5549 + 128] = 'SafeMath: subtraction overflow'
                                if uint64(ext_call.return_data[0]) >> 192 > 30:
                                    mem[_5549 + 160] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_5549 + 164] = 32
                                    idx = 32
                                    while idx < 30:
                                        mem[idx + _5549 + 228] = mem[idx + _5549 + 128]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 'SafeMath: subtraction overflow'
                                mem[64] = _5549 + 224
                                mem[_5549 + 160] = 26
                                mem[_5549 + 192] = 'SafeMath: division by zero'
                                if not -(uint64(ext_call.return_data[0]) >> 192) + 30:
                                    mem[_5549 + 224] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_5549 + 228] = 32
                                    idx = 0
                                    while idx < 26:
                                        mem[idx + _5549 + 292] = mem[idx + _5549 + 192]
                                        idx = idx + 32
                                        continue 
                                    mem[_5549 + 292] = mem[_5549 + 298 len 26]
                                    revert with 0, 32, 26, mem[_5549 + 292]
                                if uint16(_5552) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 656:
                                    if not Mask(16, 16, _5552) >> 16:
                                        mem[_5549 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5549 + 228] = ext_call.return_data[0]
                                        mem[_5549 + 260] = 524288
                                        mem[_5549 + 292] = 16
                                        mem[_5549 + 324] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 524288, 16, block.timestamp
                                    else:
                                        if Mask(16, 16, _5552) >> 13 / Mask(16, 16, _5552) >> 16 != 8:
                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5549 + 325 len 31]
                                        mem[_5549 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5549 + 228] = ext_call.return_data[0]
                                        mem[_5549 + 260] = (Mask(16, 16, _5552) >> 13) + 524288
                                        mem[_5549 + 292] = 16
                                        mem[_5549 + 324] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], (Mask(16, 16, _5552) >> 13) + 524288, 16, block.timestamp
                                else:
                                    if uint16(_5552) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 2623:
                                        if not Mask(16, 16, _5552) >> 16:
                                            mem[_5549 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5549 + 228] = ext_call.return_data[0]
                                            mem[_5549 + 260] = 131072
                                            mem[_5549 + 292] = 8
                                            mem[_5549 + 324] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 131072, 8, block.timestamp
                                        else:
                                            if Mask(16, 16, _5552) >> 14 / Mask(16, 16, _5552) >> 16 != 4:
                                                revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5549 + 325 len 31]
                                            mem[_5549 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5549 + 228] = ext_call.return_data[0]
                                            mem[_5549 + 260] = (Mask(16, 16, _5552) >> 14) + 131072
                                            mem[_5549 + 292] = 8
                                            mem[_5549 + 324] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(16, 16, _5552) >> 14) + 131072, 8, block.timestamp
                                    else:
                                        if uint16(_5552) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 9177:
                                            mem[_5549 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5549 + 228] = ext_call.return_data[0]
                                            mem[_5549 + 260] = (Mask(16, 16, _5552) >> 16) + 16384
                                            mem[_5549 + 292] = 4
                                            mem[_5549 + 324] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(16, 16, _5552) >> 16) + 16384, 4, block.timestamp
                                        else:
                                            mem[64] = _5549 + 288
                                            mem[_5549 + 224] = 26
                                            mem[_5549 + 256] = 'SafeMath: division by zero'
                                            mem[_5549 + 288] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5549 + 292] = ext_call.return_data[0]
                                            if uint16(_5552) / -(uint64(ext_call.return_data[0]) >> 192) + 30 >= 25561:
                                                mem[_5549 + 324] = (Mask(8, 24, _5552) >> 24) + 1
                                                mem[_5549 + 356] = 1
                                                mem[_5549 + 388] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(8, 24, _5552) >> 24) + 1, 1, block.timestamp
                                            else:
                                                mem[_5549 + 324] = (Mask(13, 19, _5552) >> 19) + 512
                                                mem[_5549 + 356] = 2
                                                mem[_5549 + 388] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(13, 19, _5552) >> 19) + 512, 2, block.timestamp
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                else:
                    mem[32] = sha3(arg2, 19)
                    purchaseIdtoTokenIds[arg2][arg5].field_0++
                    mem[0] = sha3(arg5, sha3(arg2, 19))
                    purchaseIdtoTokenIds[arg2][arg5][purchaseIdtoTokenIds[arg2][arg5].field_0].field_0 = ext_call.return_data[0]
                    emit 0x29ed85fa: arg5, ext_call.return_data[32] + block.timestamp, arg2, ext_call.return_data[0]
                    mem[mem[64]] = 0x9a43573c00000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = arg1
                    mem[mem[64] + 36] = ext_call.return_data[0]
                    mem[mem[64] + 68] = ext_call.return_data[32] + block.timestamp
                    require ext_code.size(erc721ContractAddress)
                    call erc721ContractAddress.transferNewToken(bytes32 arg1, uint256 arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args arg1, ext_call.return_data[0], ext_call.return_data[32] + block.timestamp
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    if not arg2:
                        mem[0] = cd[((32 * idx) + arg4 + 36)]
                        mem[32] = sha3(arg3, 17)
                        if not stor17[arg3][cd[((32 * idx) + arg4 + 36)]]:
                            revert with 0, 'collectible must be on sale'
                        if ext_call.return_data[64]:
                            mem[mem[64]] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = ext_call.return_data[0]
                            mem[mem[64] + 36] = ext_call.return_data[64]
                            mem[mem[64] + 68] = 0
                            mem[mem[64] + 100] = block.timestamp
                            require ext_code.size(erc721ContractAddress)
                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], ext_call.return_data[64], 0, block.timestamp
                        else:
                            _5677 = mem[64]
                            mem[mem[64] + 32] = ext_call.return_data[0]
                            mem[mem[64] + 64] = block.timestamp
                            _5678 = mem[64]
                            mem[mem[64]] = 64
                            mem[64] = mem[64] + 96
                            _5680 = sha3(mem[_5678 + 32 len mem[_5678]])
                            if uint64(ext_call.return_data[0]) >> 192 >= 30:
                                if uint16(sha3(mem[_5678 + 32 len mem[_5678]])) < 656:
                                    if not Mask(16, 16, sha3(mem[_5678 + 32 len mem[_5678]])) >> 16:
                                        mem[_5677 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5677 + 100] = ext_call.return_data[0]
                                        mem[_5677 + 132] = 524288
                                        mem[_5677 + 164] = 16
                                        mem[_5677 + 196] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 524288, 16, block.timestamp
                                    else:
                                        if Mask(16, 16, sha3(mem[_5678 + 32 len mem[_5678]])) >> 13 / Mask(16, 16, sha3(mem[_5678 + 32 len mem[_5678]])) >> 16 != 8:
                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5677 + 197 len 31]
                                        mem[_5677 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5677 + 100] = ext_call.return_data[0]
                                        mem[_5677 + 132] = (Mask(16, 16, _5680) >> 13) + 524288
                                        mem[_5677 + 164] = 16
                                        mem[_5677 + 196] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], (Mask(16, 16, _5680) >> 13) + 524288, 16, block.timestamp
                                else:
                                    if uint16(sha3(mem[_5678 + 32 len mem[_5678]])) < 2623:
                                        if not Mask(16, 16, sha3(mem[_5678 + 32 len mem[_5678]])) >> 16:
                                            mem[_5677 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5677 + 100] = ext_call.return_data[0]
                                            mem[_5677 + 132] = 131072
                                            mem[_5677 + 164] = 8
                                            mem[_5677 + 196] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 131072, 8, block.timestamp
                                        else:
                                            if Mask(16, 16, sha3(mem[_5678 + 32 len mem[_5678]])) >> 14 / Mask(16, 16, sha3(mem[_5678 + 32 len mem[_5678]])) >> 16 != 4:
                                                revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5677 + 197 len 31]
                                            mem[_5677 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5677 + 100] = ext_call.return_data[0]
                                            mem[_5677 + 132] = (Mask(16, 16, _5680) >> 14) + 131072
                                            mem[_5677 + 164] = 8
                                            mem[_5677 + 196] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(16, 16, _5680) >> 14) + 131072, 8, block.timestamp
                                    else:
                                        if uint16(sha3(mem[_5678 + 32 len mem[_5678]])) < 9177:
                                            mem[_5677 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5677 + 100] = ext_call.return_data[0]
                                            mem[_5677 + 132] = (Mask(16, 16, _5680) >> 16) + 16384
                                            mem[_5677 + 164] = 4
                                            mem[_5677 + 196] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(16, 16, _5680) >> 16) + 16384, 4, block.timestamp
                                        else:
                                            mem[64] = _5677 + 160
                                            mem[_5677 + 96] = 26
                                            mem[_5677 + 128] = 'SafeMath: division by zero'
                                            mem[_5677 + 160] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5677 + 164] = ext_call.return_data[0]
                                            if uint16(sha3(mem[_5678 + 32 len mem[_5678]])) >= 25561:
                                                mem[_5677 + 196] = (Mask(8, 24, _5680) >> 24) + 1
                                                mem[_5677 + 228] = 1
                                                mem[_5677 + 260] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(8, 24, _5680) >> 24) + 1, 1, block.timestamp
                                            else:
                                                mem[_5677 + 196] = (Mask(13, 19, _5680) >> 19) + 512
                                                mem[_5677 + 228] = 2
                                                mem[_5677 + 260] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(13, 19, _5680) >> 19) + 512, 2, block.timestamp
                            else:
                                mem[_5677 + 96] = 30
                                mem[_5677 + 128] = 'SafeMath: subtraction overflow'
                                if uint64(ext_call.return_data[0]) >> 192 > 30:
                                    mem[_5677 + 160] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_5677 + 164] = 32
                                    idx = 32
                                    while idx < 30:
                                        mem[idx + _5677 + 228] = mem[idx + _5677 + 128]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 'SafeMath: subtraction overflow'
                                mem[64] = _5677 + 224
                                mem[_5677 + 160] = 26
                                mem[_5677 + 192] = 'SafeMath: division by zero'
                                if not -(uint64(ext_call.return_data[0]) >> 192) + 30:
                                    mem[_5677 + 224] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_5677 + 228] = 32
                                    idx = 0
                                    while idx < 26:
                                        mem[idx + _5677 + 292] = mem[idx + _5677 + 192]
                                        idx = idx + 32
                                        continue 
                                    mem[_5677 + 292] = mem[_5677 + 298 len 26]
                                    revert with 0, 32, 26, mem[_5677 + 292]
                                if uint16(_5680) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 656:
                                    if not Mask(16, 16, _5680) >> 16:
                                        mem[_5677 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5677 + 228] = ext_call.return_data[0]
                                        mem[_5677 + 260] = 524288
                                        mem[_5677 + 292] = 16
                                        mem[_5677 + 324] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 524288, 16, block.timestamp
                                    else:
                                        if Mask(16, 16, _5680) >> 13 / Mask(16, 16, _5680) >> 16 != 8:
                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5677 + 325 len 31]
                                        mem[_5677 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5677 + 228] = ext_call.return_data[0]
                                        mem[_5677 + 260] = (Mask(16, 16, _5680) >> 13) + 524288
                                        mem[_5677 + 292] = 16
                                        mem[_5677 + 324] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], (Mask(16, 16, _5680) >> 13) + 524288, 16, block.timestamp
                                else:
                                    if uint16(_5680) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 2623:
                                        if not Mask(16, 16, _5680) >> 16:
                                            mem[_5677 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5677 + 228] = ext_call.return_data[0]
                                            mem[_5677 + 260] = 131072
                                            mem[_5677 + 292] = 8
                                            mem[_5677 + 324] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 131072, 8, block.timestamp
                                        else:
                                            if Mask(16, 16, _5680) >> 14 / Mask(16, 16, _5680) >> 16 != 4:
                                                revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5677 + 325 len 31]
                                            mem[_5677 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5677 + 228] = ext_call.return_data[0]
                                            mem[_5677 + 260] = (Mask(16, 16, _5680) >> 14) + 131072
                                            mem[_5677 + 292] = 8
                                            mem[_5677 + 324] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(16, 16, _5680) >> 14) + 131072, 8, block.timestamp
                                    else:
                                        if uint16(_5680) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 9177:
                                            mem[_5677 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5677 + 228] = ext_call.return_data[0]
                                            mem[_5677 + 260] = (Mask(16, 16, _5680) >> 16) + 16384
                                            mem[_5677 + 292] = 4
                                            mem[_5677 + 324] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(16, 16, _5680) >> 16) + 16384, 4, block.timestamp
                                        else:
                                            mem[64] = _5677 + 288
                                            mem[_5677 + 224] = 26
                                            mem[_5677 + 256] = 'SafeMath: division by zero'
                                            mem[_5677 + 288] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5677 + 292] = ext_call.return_data[0]
                                            if uint16(_5680) / -(uint64(ext_call.return_data[0]) >> 192) + 30 >= 25561:
                                                mem[_5677 + 324] = (Mask(8, 24, _5680) >> 24) + 1
                                                mem[_5677 + 356] = 1
                                                mem[_5677 + 388] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(8, 24, _5680) >> 24) + 1, 1, block.timestamp
                                            else:
                                                mem[_5677 + 324] = (Mask(13, 19, _5680) >> 19) + 512
                                                mem[_5677 + 356] = 2
                                                mem[_5677 + 388] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(13, 19, _5680) >> 19) + 512, 2, block.timestamp
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
            require idx < mem[ceil32(calldata.size) + 128]
            mem[(32 * idx) + ceil32(calldata.size) + 160] = ext_call.return_data[0]
            idx = idx + 1
            continue 
        mem[mem[64]] = 32
        mem[mem[64] + 32] = mem[ceil32(calldata.size) + 128]
        _4680 = mem[ceil32(calldata.size) + 128]
        mem[mem[64] + 64 len floor32(mem[ceil32(calldata.size) + 128])] = mem[ceil32(calldata.size) + 160 len floor32(mem[ceil32(calldata.size) + 128])]
        return 32, mem[mem[64] + 32 len (32 * _4680) + 32]
    if eth.balance(mem[calldata.size + 96]) >= gasRefillLevel:
        mem[ceil32(calldata.size) + 132] = mem[calldata.size + 108 len 20]
        mem[ceil32(calldata.size) + 164] = bool(ext_call.return_data[0])
        mem[ceil32(calldata.size) + 196] = arg2
        require ext_code.size(gameContractAddress)
        staticcall gameContractAddress.isValidCaller(address arg1, bool arg2, uint256 arg3) with:
                gas gas_remaining wei
               args mem[calldata.size + 108 len 20], bool(ext_call.return_data[0]), arg2
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            revert with 0, 'admin, operator, or worker'
        require arg4.length <= test266151307()
        mem[ceil32(calldata.size) + 128] = arg4.length
        mem[64] = ceil32(calldata.size) + (32 * arg4.length) + 160
        if not arg4.length:
            idx = 0
            while idx < arg4.length:
                require ext_code.size(gameContractAddress)
                call gameContractAddress.createTokenFromCard(uint256 arg1, uint256 arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args arg2, arg3, cd[((32 * idx) + arg4 + 36)]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 96
                if arg5 == -1:
                    emit 0x29ed85fa: arg5, 0, arg2, ext_call.return_data[0]
                    mem[mem[64]] = 0x9a43573c00000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = arg1
                    mem[mem[64] + 36] = ext_call.return_data[0]
                    mem[mem[64] + 68] = 0
                    require ext_code.size(erc721ContractAddress)
                    call erc721ContractAddress.transferNewToken(bytes32 arg1, uint256 arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args arg1, ext_call.return_data[0], 0
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    if not arg2:
                        mem[0] = cd[((32 * idx) + arg4 + 36)]
                        mem[32] = sha3(arg3, 17)
                        if not stor17[arg3][cd[((32 * idx) + arg4 + 36)]]:
                            revert with 0, 'collectible must be on sale'
                        if ext_call.return_data[64]:
                            mem[mem[64]] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = ext_call.return_data[0]
                            mem[mem[64] + 36] = ext_call.return_data[64]
                            mem[mem[64] + 68] = 0
                            mem[mem[64] + 100] = block.timestamp
                            require ext_code.size(erc721ContractAddress)
                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], ext_call.return_data[64], 0, block.timestamp
                        else:
                            _5221 = mem[64]
                            mem[mem[64] + 32] = ext_call.return_data[0]
                            mem[mem[64] + 64] = block.timestamp
                            _5222 = mem[64]
                            mem[mem[64]] = 64
                            mem[64] = mem[64] + 96
                            _5224 = sha3(mem[_5222 + 32 len mem[_5222]])
                            if uint64(ext_call.return_data[0]) >> 192 >= 30:
                                if uint16(sha3(mem[_5222 + 32 len mem[_5222]])) < 656:
                                    if not Mask(16, 16, sha3(mem[_5222 + 32 len mem[_5222]])) >> 16:
                                        mem[_5221 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5221 + 100] = ext_call.return_data[0]
                                        mem[_5221 + 132] = 524288
                                        mem[_5221 + 164] = 16
                                        mem[_5221 + 196] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 524288, 16, block.timestamp
                                    else:
                                        if Mask(16, 16, sha3(mem[_5222 + 32 len mem[_5222]])) >> 13 / Mask(16, 16, sha3(mem[_5222 + 32 len mem[_5222]])) >> 16 != 8:
                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5221 + 197 len 31]
                                        mem[_5221 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5221 + 100] = ext_call.return_data[0]
                                        mem[_5221 + 132] = (Mask(16, 16, _5224) >> 13) + 524288
                                        mem[_5221 + 164] = 16
                                        mem[_5221 + 196] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], (Mask(16, 16, _5224) >> 13) + 524288, 16, block.timestamp
                                else:
                                    if uint16(sha3(mem[_5222 + 32 len mem[_5222]])) < 2623:
                                        if not Mask(16, 16, sha3(mem[_5222 + 32 len mem[_5222]])) >> 16:
                                            mem[_5221 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5221 + 100] = ext_call.return_data[0]
                                            mem[_5221 + 132] = 131072
                                            mem[_5221 + 164] = 8
                                            mem[_5221 + 196] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 131072, 8, block.timestamp
                                        else:
                                            if Mask(16, 16, sha3(mem[_5222 + 32 len mem[_5222]])) >> 14 / Mask(16, 16, sha3(mem[_5222 + 32 len mem[_5222]])) >> 16 != 4:
                                                revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5221 + 197 len 31]
                                            mem[_5221 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5221 + 100] = ext_call.return_data[0]
                                            mem[_5221 + 132] = (Mask(16, 16, _5224) >> 14) + 131072
                                            mem[_5221 + 164] = 8
                                            mem[_5221 + 196] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(16, 16, _5224) >> 14) + 131072, 8, block.timestamp
                                    else:
                                        if uint16(sha3(mem[_5222 + 32 len mem[_5222]])) < 9177:
                                            mem[_5221 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5221 + 100] = ext_call.return_data[0]
                                            mem[_5221 + 132] = (Mask(16, 16, _5224) >> 16) + 16384
                                            mem[_5221 + 164] = 4
                                            mem[_5221 + 196] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(16, 16, _5224) >> 16) + 16384, 4, block.timestamp
                                        else:
                                            mem[64] = _5221 + 160
                                            mem[_5221 + 96] = 26
                                            mem[_5221 + 128] = 'SafeMath: division by zero'
                                            mem[_5221 + 160] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5221 + 164] = ext_call.return_data[0]
                                            if uint16(sha3(mem[_5222 + 32 len mem[_5222]])) >= 25561:
                                                mem[_5221 + 196] = (Mask(8, 24, _5224) >> 24) + 1
                                                mem[_5221 + 228] = 1
                                                mem[_5221 + 260] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(8, 24, _5224) >> 24) + 1, 1, block.timestamp
                                            else:
                                                mem[_5221 + 196] = (Mask(13, 19, _5224) >> 19) + 512
                                                mem[_5221 + 228] = 2
                                                mem[_5221 + 260] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(13, 19, _5224) >> 19) + 512, 2, block.timestamp
                            else:
                                mem[_5221 + 96] = 30
                                mem[_5221 + 128] = 'SafeMath: subtraction overflow'
                                if uint64(ext_call.return_data[0]) >> 192 > 30:
                                    mem[_5221 + 160] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_5221 + 164] = 32
                                    idx = 32
                                    while idx < 30:
                                        mem[idx + _5221 + 228] = mem[idx + _5221 + 128]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 'SafeMath: subtraction overflow'
                                mem[64] = _5221 + 224
                                mem[_5221 + 160] = 26
                                mem[_5221 + 192] = 'SafeMath: division by zero'
                                if not -(uint64(ext_call.return_data[0]) >> 192) + 30:
                                    mem[_5221 + 224] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_5221 + 228] = 32
                                    idx = 0
                                    while idx < 26:
                                        mem[idx + _5221 + 292] = mem[idx + _5221 + 192]
                                        idx = idx + 32
                                        continue 
                                    mem[_5221 + 292] = mem[_5221 + 298 len 26]
                                    revert with 0, 32, 26, mem[_5221 + 292]
                                if uint16(_5224) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 656:
                                    if not Mask(16, 16, _5224) >> 16:
                                        mem[_5221 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5221 + 228] = ext_call.return_data[0]
                                        mem[_5221 + 260] = 524288
                                        mem[_5221 + 292] = 16
                                        mem[_5221 + 324] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 524288, 16, block.timestamp
                                    else:
                                        if Mask(16, 16, _5224) >> 13 / Mask(16, 16, _5224) >> 16 != 8:
                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5221 + 325 len 31]
                                        mem[_5221 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5221 + 228] = ext_call.return_data[0]
                                        mem[_5221 + 260] = (Mask(16, 16, _5224) >> 13) + 524288
                                        mem[_5221 + 292] = 16
                                        mem[_5221 + 324] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], (Mask(16, 16, _5224) >> 13) + 524288, 16, block.timestamp
                                else:
                                    if uint16(_5224) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 2623:
                                        if not Mask(16, 16, _5224) >> 16:
                                            mem[_5221 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5221 + 228] = ext_call.return_data[0]
                                            mem[_5221 + 260] = 131072
                                            mem[_5221 + 292] = 8
                                            mem[_5221 + 324] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 131072, 8, block.timestamp
                                        else:
                                            if Mask(16, 16, _5224) >> 14 / Mask(16, 16, _5224) >> 16 != 4:
                                                revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5221 + 325 len 31]
                                            mem[_5221 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5221 + 228] = ext_call.return_data[0]
                                            mem[_5221 + 260] = (Mask(16, 16, _5224) >> 14) + 131072
                                            mem[_5221 + 292] = 8
                                            mem[_5221 + 324] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(16, 16, _5224) >> 14) + 131072, 8, block.timestamp
                                    else:
                                        if uint16(_5224) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 9177:
                                            mem[_5221 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5221 + 228] = ext_call.return_data[0]
                                            mem[_5221 + 260] = (Mask(16, 16, _5224) >> 16) + 16384
                                            mem[_5221 + 292] = 4
                                            mem[_5221 + 324] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(16, 16, _5224) >> 16) + 16384, 4, block.timestamp
                                        else:
                                            mem[64] = _5221 + 288
                                            mem[_5221 + 224] = 26
                                            mem[_5221 + 256] = 'SafeMath: division by zero'
                                            mem[_5221 + 288] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5221 + 292] = ext_call.return_data[0]
                                            if uint16(_5224) / -(uint64(ext_call.return_data[0]) >> 192) + 30 >= 25561:
                                                mem[_5221 + 324] = (Mask(8, 24, _5224) >> 24) + 1
                                                mem[_5221 + 356] = 1
                                                mem[_5221 + 388] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(8, 24, _5224) >> 24) + 1, 1, block.timestamp
                                            else:
                                                mem[_5221 + 324] = (Mask(13, 19, _5224) >> 19) + 512
                                                mem[_5221 + 356] = 2
                                                mem[_5221 + 388] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(13, 19, _5224) >> 19) + 512, 2, block.timestamp
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                else:
                    if ext_call.return_data[32] + block.timestamp < block.timestamp:
                        revert with 0, 'SafeMath: addition overflow'
                    if not arg5:
                        emit 0x29ed85fa: arg5, ext_call.return_data[32] + block.timestamp, arg2, ext_call.return_data[0]
                        mem[mem[64]] = 0x9a43573c00000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = arg1
                        mem[mem[64] + 36] = ext_call.return_data[0]
                        mem[mem[64] + 68] = ext_call.return_data[32] + block.timestamp
                        require ext_code.size(erc721ContractAddress)
                        call erc721ContractAddress.transferNewToken(bytes32 arg1, uint256 arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args arg1, ext_call.return_data[0], ext_call.return_data[32] + block.timestamp
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if not arg2:
                            mem[0] = cd[((32 * idx) + arg4 + 36)]
                            mem[32] = sha3(arg3, 17)
                            if not stor17[arg3][cd[((32 * idx) + arg4 + 36)]]:
                                revert with 0, 'collectible must be on sale'
                            if ext_call.return_data[64]:
                                mem[mem[64]] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = ext_call.return_data[0]
                                mem[mem[64] + 36] = ext_call.return_data[64]
                                mem[mem[64] + 68] = 0
                                mem[mem[64] + 100] = block.timestamp
                                require ext_code.size(erc721ContractAddress)
                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], ext_call.return_data[64], 0, block.timestamp
                            else:
                                _5554 = mem[64]
                                mem[mem[64] + 32] = ext_call.return_data[0]
                                mem[mem[64] + 64] = block.timestamp
                                _5555 = mem[64]
                                mem[mem[64]] = 64
                                mem[64] = mem[64] + 96
                                _5557 = sha3(mem[_5555 + 32 len mem[_5555]])
                                if uint64(ext_call.return_data[0]) >> 192 >= 30:
                                    if uint16(sha3(mem[_5555 + 32 len mem[_5555]])) < 656:
                                        if not Mask(16, 16, sha3(mem[_5555 + 32 len mem[_5555]])) >> 16:
                                            mem[_5554 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5554 + 100] = ext_call.return_data[0]
                                            mem[_5554 + 132] = 524288
                                            mem[_5554 + 164] = 16
                                            mem[_5554 + 196] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 524288, 16, block.timestamp
                                        else:
                                            if Mask(16, 16, sha3(mem[_5555 + 32 len mem[_5555]])) >> 13 / Mask(16, 16, sha3(mem[_5555 + 32 len mem[_5555]])) >> 16 != 8:
                                                revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5554 + 197 len 31]
                                            mem[_5554 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5554 + 100] = ext_call.return_data[0]
                                            mem[_5554 + 132] = (Mask(16, 16, _5557) >> 13) + 524288
                                            mem[_5554 + 164] = 16
                                            mem[_5554 + 196] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(16, 16, _5557) >> 13) + 524288, 16, block.timestamp
                                    else:
                                        if uint16(sha3(mem[_5555 + 32 len mem[_5555]])) < 2623:
                                            if not Mask(16, 16, sha3(mem[_5555 + 32 len mem[_5555]])) >> 16:
                                                mem[_5554 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5554 + 100] = ext_call.return_data[0]
                                                mem[_5554 + 132] = 131072
                                                mem[_5554 + 164] = 8
                                                mem[_5554 + 196] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 131072, 8, block.timestamp
                                            else:
                                                if Mask(16, 16, sha3(mem[_5555 + 32 len mem[_5555]])) >> 14 / Mask(16, 16, sha3(mem[_5555 + 32 len mem[_5555]])) >> 16 != 4:
                                                    revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5554 + 197 len 31]
                                                mem[_5554 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5554 + 100] = ext_call.return_data[0]
                                                mem[_5554 + 132] = (Mask(16, 16, _5557) >> 14) + 131072
                                                mem[_5554 + 164] = 8
                                                mem[_5554 + 196] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(16, 16, _5557) >> 14) + 131072, 8, block.timestamp
                                        else:
                                            if uint16(sha3(mem[_5555 + 32 len mem[_5555]])) < 9177:
                                                mem[_5554 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5554 + 100] = ext_call.return_data[0]
                                                mem[_5554 + 132] = (Mask(16, 16, _5557) >> 16) + 16384
                                                mem[_5554 + 164] = 4
                                                mem[_5554 + 196] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(16, 16, _5557) >> 16) + 16384, 4, block.timestamp
                                            else:
                                                mem[64] = _5554 + 160
                                                mem[_5554 + 96] = 26
                                                mem[_5554 + 128] = 'SafeMath: division by zero'
                                                mem[_5554 + 160] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5554 + 164] = ext_call.return_data[0]
                                                if uint16(sha3(mem[_5555 + 32 len mem[_5555]])) >= 25561:
                                                    mem[_5554 + 196] = (Mask(8, 24, _5557) >> 24) + 1
                                                    mem[_5554 + 228] = 1
                                                    mem[_5554 + 260] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(8, 24, _5557) >> 24) + 1, 1, block.timestamp
                                                else:
                                                    mem[_5554 + 196] = (Mask(13, 19, _5557) >> 19) + 512
                                                    mem[_5554 + 228] = 2
                                                    mem[_5554 + 260] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(13, 19, _5557) >> 19) + 512, 2, block.timestamp
                                else:
                                    mem[_5554 + 96] = 30
                                    mem[_5554 + 128] = 'SafeMath: subtraction overflow'
                                    if uint64(ext_call.return_data[0]) >> 192 > 30:
                                        mem[_5554 + 160] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[_5554 + 164] = 32
                                        idx = 32
                                        while idx < 30:
                                            mem[idx + _5554 + 228] = mem[idx + _5554 + 128]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    mem[64] = _5554 + 224
                                    mem[_5554 + 160] = 26
                                    mem[_5554 + 192] = 'SafeMath: division by zero'
                                    if not -(uint64(ext_call.return_data[0]) >> 192) + 30:
                                        mem[_5554 + 224] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[_5554 + 228] = 32
                                        idx = 0
                                        while idx < 26:
                                            mem[idx + _5554 + 292] = mem[idx + _5554 + 192]
                                            idx = idx + 32
                                            continue 
                                        mem[_5554 + 292] = mem[_5554 + 298 len 26]
                                        revert with 0, 32, 26, mem[_5554 + 292]
                                    if uint16(_5557) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 656:
                                        if not Mask(16, 16, _5557) >> 16:
                                            mem[_5554 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5554 + 228] = ext_call.return_data[0]
                                            mem[_5554 + 260] = 524288
                                            mem[_5554 + 292] = 16
                                            mem[_5554 + 324] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 524288, 16, block.timestamp
                                        else:
                                            if Mask(16, 16, _5557) >> 13 / Mask(16, 16, _5557) >> 16 != 8:
                                                revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5554 + 325 len 31]
                                            mem[_5554 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5554 + 228] = ext_call.return_data[0]
                                            mem[_5554 + 260] = (Mask(16, 16, _5557) >> 13) + 524288
                                            mem[_5554 + 292] = 16
                                            mem[_5554 + 324] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(16, 16, _5557) >> 13) + 524288, 16, block.timestamp
                                    else:
                                        if uint16(_5557) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 2623:
                                            if not Mask(16, 16, _5557) >> 16:
                                                mem[_5554 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5554 + 228] = ext_call.return_data[0]
                                                mem[_5554 + 260] = 131072
                                                mem[_5554 + 292] = 8
                                                mem[_5554 + 324] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 131072, 8, block.timestamp
                                            else:
                                                if Mask(16, 16, _5557) >> 14 / Mask(16, 16, _5557) >> 16 != 4:
                                                    revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5554 + 325 len 31]
                                                mem[_5554 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5554 + 228] = ext_call.return_data[0]
                                                mem[_5554 + 260] = (Mask(16, 16, _5557) >> 14) + 131072
                                                mem[_5554 + 292] = 8
                                                mem[_5554 + 324] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(16, 16, _5557) >> 14) + 131072, 8, block.timestamp
                                        else:
                                            if uint16(_5557) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 9177:
                                                mem[_5554 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5554 + 228] = ext_call.return_data[0]
                                                mem[_5554 + 260] = (Mask(16, 16, _5557) >> 16) + 16384
                                                mem[_5554 + 292] = 4
                                                mem[_5554 + 324] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(16, 16, _5557) >> 16) + 16384, 4, block.timestamp
                                            else:
                                                mem[64] = _5554 + 288
                                                mem[_5554 + 224] = 26
                                                mem[_5554 + 256] = 'SafeMath: division by zero'
                                                mem[_5554 + 288] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5554 + 292] = ext_call.return_data[0]
                                                if uint16(_5557) / -(uint64(ext_call.return_data[0]) >> 192) + 30 >= 25561:
                                                    mem[_5554 + 324] = (Mask(8, 24, _5557) >> 24) + 1
                                                    mem[_5554 + 356] = 1
                                                    mem[_5554 + 388] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(8, 24, _5557) >> 24) + 1, 1, block.timestamp
                                                else:
                                                    mem[_5554 + 324] = (Mask(13, 19, _5557) >> 19) + 512
                                                    mem[_5554 + 356] = 2
                                                    mem[_5554 + 388] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(13, 19, _5557) >> 19) + 512, 2, block.timestamp
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                    else:
                        mem[32] = sha3(arg2, 19)
                        purchaseIdtoTokenIds[arg2][arg5].field_0++
                        mem[0] = sha3(arg5, sha3(arg2, 19))
                        purchaseIdtoTokenIds[arg2][arg5][purchaseIdtoTokenIds[arg2][arg5].field_0].field_0 = ext_call.return_data[0]
                        emit 0x29ed85fa: arg5, ext_call.return_data[32] + block.timestamp, arg2, ext_call.return_data[0]
                        mem[mem[64]] = 0x9a43573c00000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = arg1
                        mem[mem[64] + 36] = ext_call.return_data[0]
                        mem[mem[64] + 68] = ext_call.return_data[32] + block.timestamp
                        require ext_code.size(erc721ContractAddress)
                        call erc721ContractAddress.transferNewToken(bytes32 arg1, uint256 arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args arg1, ext_call.return_data[0], ext_call.return_data[32] + block.timestamp
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if not arg2:
                            mem[0] = cd[((32 * idx) + arg4 + 36)]
                            mem[32] = sha3(arg3, 17)
                            if not stor17[arg3][cd[((32 * idx) + arg4 + 36)]]:
                                revert with 0, 'collectible must be on sale'
                            if ext_call.return_data[64]:
                                mem[mem[64]] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = ext_call.return_data[0]
                                mem[mem[64] + 36] = ext_call.return_data[64]
                                mem[mem[64] + 68] = 0
                                mem[mem[64] + 100] = block.timestamp
                                require ext_code.size(erc721ContractAddress)
                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], ext_call.return_data[64], 0, block.timestamp
                            else:
                                _5686 = mem[64]
                                mem[mem[64] + 32] = ext_call.return_data[0]
                                mem[mem[64] + 64] = block.timestamp
                                _5687 = mem[64]
                                mem[mem[64]] = 64
                                mem[64] = mem[64] + 96
                                _5689 = sha3(mem[_5687 + 32 len mem[_5687]])
                                if uint64(ext_call.return_data[0]) >> 192 >= 30:
                                    if uint16(sha3(mem[_5687 + 32 len mem[_5687]])) < 656:
                                        if not Mask(16, 16, sha3(mem[_5687 + 32 len mem[_5687]])) >> 16:
                                            mem[_5686 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5686 + 100] = ext_call.return_data[0]
                                            mem[_5686 + 132] = 524288
                                            mem[_5686 + 164] = 16
                                            mem[_5686 + 196] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 524288, 16, block.timestamp
                                        else:
                                            if Mask(16, 16, sha3(mem[_5687 + 32 len mem[_5687]])) >> 13 / Mask(16, 16, sha3(mem[_5687 + 32 len mem[_5687]])) >> 16 != 8:
                                                revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5686 + 197 len 31]
                                            mem[_5686 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5686 + 100] = ext_call.return_data[0]
                                            mem[_5686 + 132] = (Mask(16, 16, _5689) >> 13) + 524288
                                            mem[_5686 + 164] = 16
                                            mem[_5686 + 196] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(16, 16, _5689) >> 13) + 524288, 16, block.timestamp
                                    else:
                                        if uint16(sha3(mem[_5687 + 32 len mem[_5687]])) < 2623:
                                            if not Mask(16, 16, sha3(mem[_5687 + 32 len mem[_5687]])) >> 16:
                                                mem[_5686 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5686 + 100] = ext_call.return_data[0]
                                                mem[_5686 + 132] = 131072
                                                mem[_5686 + 164] = 8
                                                mem[_5686 + 196] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 131072, 8, block.timestamp
                                            else:
                                                if Mask(16, 16, sha3(mem[_5687 + 32 len mem[_5687]])) >> 14 / Mask(16, 16, sha3(mem[_5687 + 32 len mem[_5687]])) >> 16 != 4:
                                                    revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5686 + 197 len 31]
                                                mem[_5686 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5686 + 100] = ext_call.return_data[0]
                                                mem[_5686 + 132] = (Mask(16, 16, _5689) >> 14) + 131072
                                                mem[_5686 + 164] = 8
                                                mem[_5686 + 196] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(16, 16, _5689) >> 14) + 131072, 8, block.timestamp
                                        else:
                                            if uint16(sha3(mem[_5687 + 32 len mem[_5687]])) < 9177:
                                                mem[_5686 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5686 + 100] = ext_call.return_data[0]
                                                mem[_5686 + 132] = (Mask(16, 16, _5689) >> 16) + 16384
                                                mem[_5686 + 164] = 4
                                                mem[_5686 + 196] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(16, 16, _5689) >> 16) + 16384, 4, block.timestamp
                                            else:
                                                mem[64] = _5686 + 160
                                                mem[_5686 + 96] = 26
                                                mem[_5686 + 128] = 'SafeMath: division by zero'
                                                mem[_5686 + 160] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5686 + 164] = ext_call.return_data[0]
                                                if uint16(sha3(mem[_5687 + 32 len mem[_5687]])) >= 25561:
                                                    mem[_5686 + 196] = (Mask(8, 24, _5689) >> 24) + 1
                                                    mem[_5686 + 228] = 1
                                                    mem[_5686 + 260] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(8, 24, _5689) >> 24) + 1, 1, block.timestamp
                                                else:
                                                    mem[_5686 + 196] = (Mask(13, 19, _5689) >> 19) + 512
                                                    mem[_5686 + 228] = 2
                                                    mem[_5686 + 260] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(13, 19, _5689) >> 19) + 512, 2, block.timestamp
                                else:
                                    mem[_5686 + 96] = 30
                                    mem[_5686 + 128] = 'SafeMath: subtraction overflow'
                                    if uint64(ext_call.return_data[0]) >> 192 > 30:
                                        mem[_5686 + 160] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[_5686 + 164] = 32
                                        idx = 32
                                        while idx < 30:
                                            mem[idx + _5686 + 228] = mem[idx + _5686 + 128]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    mem[64] = _5686 + 224
                                    mem[_5686 + 160] = 26
                                    mem[_5686 + 192] = 'SafeMath: division by zero'
                                    if not -(uint64(ext_call.return_data[0]) >> 192) + 30:
                                        mem[_5686 + 224] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[_5686 + 228] = 32
                                        idx = 0
                                        while idx < 26:
                                            mem[idx + _5686 + 292] = mem[idx + _5686 + 192]
                                            idx = idx + 32
                                            continue 
                                        mem[_5686 + 292] = mem[_5686 + 298 len 26]
                                        revert with 0, 32, 26, mem[_5686 + 292]
                                    if uint16(_5689) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 656:
                                        if not Mask(16, 16, _5689) >> 16:
                                            mem[_5686 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5686 + 228] = ext_call.return_data[0]
                                            mem[_5686 + 260] = 524288
                                            mem[_5686 + 292] = 16
                                            mem[_5686 + 324] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 524288, 16, block.timestamp
                                        else:
                                            if Mask(16, 16, _5689) >> 13 / Mask(16, 16, _5689) >> 16 != 8:
                                                revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5686 + 325 len 31]
                                            mem[_5686 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5686 + 228] = ext_call.return_data[0]
                                            mem[_5686 + 260] = (Mask(16, 16, _5689) >> 13) + 524288
                                            mem[_5686 + 292] = 16
                                            mem[_5686 + 324] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(16, 16, _5689) >> 13) + 524288, 16, block.timestamp
                                    else:
                                        if uint16(_5689) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 2623:
                                            if not Mask(16, 16, _5689) >> 16:
                                                mem[_5686 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5686 + 228] = ext_call.return_data[0]
                                                mem[_5686 + 260] = 131072
                                                mem[_5686 + 292] = 8
                                                mem[_5686 + 324] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 131072, 8, block.timestamp
                                            else:
                                                if Mask(16, 16, _5689) >> 14 / Mask(16, 16, _5689) >> 16 != 4:
                                                    revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5686 + 325 len 31]
                                                mem[_5686 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5686 + 228] = ext_call.return_data[0]
                                                mem[_5686 + 260] = (Mask(16, 16, _5689) >> 14) + 131072
                                                mem[_5686 + 292] = 8
                                                mem[_5686 + 324] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(16, 16, _5689) >> 14) + 131072, 8, block.timestamp
                                        else:
                                            if uint16(_5689) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 9177:
                                                mem[_5686 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5686 + 228] = ext_call.return_data[0]
                                                mem[_5686 + 260] = (Mask(16, 16, _5689) >> 16) + 16384
                                                mem[_5686 + 292] = 4
                                                mem[_5686 + 324] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(16, 16, _5689) >> 16) + 16384, 4, block.timestamp
                                            else:
                                                mem[64] = _5686 + 288
                                                mem[_5686 + 224] = 26
                                                mem[_5686 + 256] = 'SafeMath: division by zero'
                                                mem[_5686 + 288] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                                mem[_5686 + 292] = ext_call.return_data[0]
                                                if uint16(_5689) / -(uint64(ext_call.return_data[0]) >> 192) + 30 >= 25561:
                                                    mem[_5686 + 324] = (Mask(8, 24, _5689) >> 24) + 1
                                                    mem[_5686 + 356] = 1
                                                    mem[_5686 + 388] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(8, 24, _5689) >> 24) + 1, 1, block.timestamp
                                                else:
                                                    mem[_5686 + 324] = (Mask(13, 19, _5689) >> 19) + 512
                                                    mem[_5686 + 356] = 2
                                                    mem[_5686 + 388] = block.timestamp
                                                    require ext_code.size(erc721ContractAddress)
                                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0], (Mask(13, 19, _5689) >> 19) + 512, 2, block.timestamp
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                require idx < mem[ceil32(calldata.size) + 128]
                mem[(32 * idx) + ceil32(calldata.size) + 160] = ext_call.return_data[0]
                idx = idx + 1
                continue 
            mem[mem[64]] = 32
            mem[mem[64] + 32] = mem[ceil32(calldata.size) + 128]
            _4683 = mem[ceil32(calldata.size) + 128]
            mem[mem[64] + 64 len floor32(mem[ceil32(calldata.size) + 128])] = mem[ceil32(calldata.size) + 160 len floor32(mem[ceil32(calldata.size) + 128])]
            return 32, mem[mem[64] + 32 len (32 * _4683) + 32]
        mem[ceil32(calldata.size) + 160 len 32 * arg4.length] = call.data[calldata.size len 32 * arg4.length]
        idx = 0
        while idx < arg4.length:
            require ext_code.size(gameContractAddress)
            call gameContractAddress.createTokenFromCard(uint256 arg1, uint256 arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args arg2, arg3, cd[((32 * idx) + arg4 + 36)]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 96
            if arg5 == -1:
                emit 0x29ed85fa: arg5, 0, arg2, ext_call.return_data[0]
                mem[mem[64]] = 0x9a43573c00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = arg1
                mem[mem[64] + 36] = ext_call.return_data[0]
                mem[mem[64] + 68] = 0
                require ext_code.size(erc721ContractAddress)
                call erc721ContractAddress.transferNewToken(bytes32 arg1, uint256 arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args arg1, ext_call.return_data[0], 0
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                if not arg2:
                    mem[0] = cd[((32 * idx) + arg4 + 36)]
                    mem[32] = sha3(arg3, 17)
                    if not stor17[arg3][cd[((32 * idx) + arg4 + 36)]]:
                        revert with 0, 'collectible must be on sale'
                    if ext_call.return_data[64]:
                        mem[mem[64]] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = ext_call.return_data[0]
                        mem[mem[64] + 36] = ext_call.return_data[64]
                        mem[mem[64] + 68] = 0
                        mem[mem[64] + 100] = block.timestamp
                        require ext_code.size(erc721ContractAddress)
                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0], ext_call.return_data[64], 0, block.timestamp
                    else:
                        _5225 = mem[64]
                        mem[mem[64] + 32] = ext_call.return_data[0]
                        mem[mem[64] + 64] = block.timestamp
                        _5226 = mem[64]
                        mem[mem[64]] = 64
                        mem[64] = mem[64] + 96
                        _5228 = sha3(mem[_5226 + 32 len mem[_5226]])
                        if uint64(ext_call.return_data[0]) >> 192 >= 30:
                            if uint16(sha3(mem[_5226 + 32 len mem[_5226]])) < 656:
                                if not Mask(16, 16, sha3(mem[_5226 + 32 len mem[_5226]])) >> 16:
                                    mem[_5225 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                    mem[_5225 + 100] = ext_call.return_data[0]
                                    mem[_5225 + 132] = 524288
                                    mem[_5225 + 164] = 16
                                    mem[_5225 + 196] = block.timestamp
                                    require ext_code.size(erc721ContractAddress)
                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 524288, 16, block.timestamp
                                else:
                                    if Mask(16, 16, sha3(mem[_5226 + 32 len mem[_5226]])) >> 13 / Mask(16, 16, sha3(mem[_5226 + 32 len mem[_5226]])) >> 16 != 8:
                                        revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5225 + 197 len 31]
                                    mem[_5225 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                    mem[_5225 + 100] = ext_call.return_data[0]
                                    mem[_5225 + 132] = (Mask(16, 16, _5228) >> 13) + 524288
                                    mem[_5225 + 164] = 16
                                    mem[_5225 + 196] = block.timestamp
                                    require ext_code.size(erc721ContractAddress)
                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], (Mask(16, 16, _5228) >> 13) + 524288, 16, block.timestamp
                            else:
                                if uint16(sha3(mem[_5226 + 32 len mem[_5226]])) < 2623:
                                    if not Mask(16, 16, sha3(mem[_5226 + 32 len mem[_5226]])) >> 16:
                                        mem[_5225 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5225 + 100] = ext_call.return_data[0]
                                        mem[_5225 + 132] = 131072
                                        mem[_5225 + 164] = 8
                                        mem[_5225 + 196] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 131072, 8, block.timestamp
                                    else:
                                        if Mask(16, 16, sha3(mem[_5226 + 32 len mem[_5226]])) >> 14 / Mask(16, 16, sha3(mem[_5226 + 32 len mem[_5226]])) >> 16 != 4:
                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5225 + 197 len 31]
                                        mem[_5225 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5225 + 100] = ext_call.return_data[0]
                                        mem[_5225 + 132] = (Mask(16, 16, _5228) >> 14) + 131072
                                        mem[_5225 + 164] = 8
                                        mem[_5225 + 196] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], (Mask(16, 16, _5228) >> 14) + 131072, 8, block.timestamp
                                else:
                                    if uint16(sha3(mem[_5226 + 32 len mem[_5226]])) < 9177:
                                        mem[_5225 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5225 + 100] = ext_call.return_data[0]
                                        mem[_5225 + 132] = (Mask(16, 16, _5228) >> 16) + 16384
                                        mem[_5225 + 164] = 4
                                        mem[_5225 + 196] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], (Mask(16, 16, _5228) >> 16) + 16384, 4, block.timestamp
                                    else:
                                        mem[64] = _5225 + 160
                                        mem[_5225 + 96] = 26
                                        mem[_5225 + 128] = 'SafeMath: division by zero'
                                        mem[_5225 + 160] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5225 + 164] = ext_call.return_data[0]
                                        if uint16(sha3(mem[_5226 + 32 len mem[_5226]])) >= 25561:
                                            mem[_5225 + 196] = (Mask(8, 24, _5228) >> 24) + 1
                                            mem[_5225 + 228] = 1
                                            mem[_5225 + 260] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(8, 24, _5228) >> 24) + 1, 1, block.timestamp
                                        else:
                                            mem[_5225 + 196] = (Mask(13, 19, _5228) >> 19) + 512
                                            mem[_5225 + 228] = 2
                                            mem[_5225 + 260] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(13, 19, _5228) >> 19) + 512, 2, block.timestamp
                        else:
                            mem[_5225 + 96] = 30
                            mem[_5225 + 128] = 'SafeMath: subtraction overflow'
                            if uint64(ext_call.return_data[0]) >> 192 > 30:
                                mem[_5225 + 160] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_5225 + 164] = 32
                                idx = 32
                                while idx < 30:
                                    mem[idx + _5225 + 228] = mem[idx + _5225 + 128]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 'SafeMath: subtraction overflow'
                            mem[64] = _5225 + 224
                            mem[_5225 + 160] = 26
                            mem[_5225 + 192] = 'SafeMath: division by zero'
                            if not -(uint64(ext_call.return_data[0]) >> 192) + 30:
                                mem[_5225 + 224] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_5225 + 228] = 32
                                idx = 0
                                while idx < 26:
                                    mem[idx + _5225 + 292] = mem[idx + _5225 + 192]
                                    idx = idx + 32
                                    continue 
                                mem[_5225 + 292] = mem[_5225 + 298 len 26]
                                revert with 0, 32, 26, mem[_5225 + 292]
                            if uint16(_5228) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 656:
                                if not Mask(16, 16, _5228) >> 16:
                                    mem[_5225 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                    mem[_5225 + 228] = ext_call.return_data[0]
                                    mem[_5225 + 260] = 524288
                                    mem[_5225 + 292] = 16
                                    mem[_5225 + 324] = block.timestamp
                                    require ext_code.size(erc721ContractAddress)
                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 524288, 16, block.timestamp
                                else:
                                    if Mask(16, 16, _5228) >> 13 / Mask(16, 16, _5228) >> 16 != 8:
                                        revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5225 + 325 len 31]
                                    mem[_5225 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                    mem[_5225 + 228] = ext_call.return_data[0]
                                    mem[_5225 + 260] = (Mask(16, 16, _5228) >> 13) + 524288
                                    mem[_5225 + 292] = 16
                                    mem[_5225 + 324] = block.timestamp
                                    require ext_code.size(erc721ContractAddress)
                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], (Mask(16, 16, _5228) >> 13) + 524288, 16, block.timestamp
                            else:
                                if uint16(_5228) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 2623:
                                    if not Mask(16, 16, _5228) >> 16:
                                        mem[_5225 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5225 + 228] = ext_call.return_data[0]
                                        mem[_5225 + 260] = 131072
                                        mem[_5225 + 292] = 8
                                        mem[_5225 + 324] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 131072, 8, block.timestamp
                                    else:
                                        if Mask(16, 16, _5228) >> 14 / Mask(16, 16, _5228) >> 16 != 4:
                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5225 + 325 len 31]
                                        mem[_5225 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5225 + 228] = ext_call.return_data[0]
                                        mem[_5225 + 260] = (Mask(16, 16, _5228) >> 14) + 131072
                                        mem[_5225 + 292] = 8
                                        mem[_5225 + 324] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], (Mask(16, 16, _5228) >> 14) + 131072, 8, block.timestamp
                                else:
                                    if uint16(_5228) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 9177:
                                        mem[_5225 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5225 + 228] = ext_call.return_data[0]
                                        mem[_5225 + 260] = (Mask(16, 16, _5228) >> 16) + 16384
                                        mem[_5225 + 292] = 4
                                        mem[_5225 + 324] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], (Mask(16, 16, _5228) >> 16) + 16384, 4, block.timestamp
                                    else:
                                        mem[64] = _5225 + 288
                                        mem[_5225 + 224] = 26
                                        mem[_5225 + 256] = 'SafeMath: division by zero'
                                        mem[_5225 + 288] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5225 + 292] = ext_call.return_data[0]
                                        if uint16(_5228) / -(uint64(ext_call.return_data[0]) >> 192) + 30 >= 25561:
                                            mem[_5225 + 324] = (Mask(8, 24, _5228) >> 24) + 1
                                            mem[_5225 + 356] = 1
                                            mem[_5225 + 388] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(8, 24, _5228) >> 24) + 1, 1, block.timestamp
                                        else:
                                            mem[_5225 + 324] = (Mask(13, 19, _5228) >> 19) + 512
                                            mem[_5225 + 356] = 2
                                            mem[_5225 + 388] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(13, 19, _5228) >> 19) + 512, 2, block.timestamp
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
            else:
                if ext_call.return_data[32] + block.timestamp < block.timestamp:
                    revert with 0, 'SafeMath: addition overflow'
                if not arg5:
                    emit 0x29ed85fa: arg5, ext_call.return_data[32] + block.timestamp, arg2, ext_call.return_data[0]
                    mem[mem[64]] = 0x9a43573c00000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = arg1
                    mem[mem[64] + 36] = ext_call.return_data[0]
                    mem[mem[64] + 68] = ext_call.return_data[32] + block.timestamp
                    require ext_code.size(erc721ContractAddress)
                    call erc721ContractAddress.transferNewToken(bytes32 arg1, uint256 arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args arg1, ext_call.return_data[0], ext_call.return_data[32] + block.timestamp
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    if not arg2:
                        mem[0] = cd[((32 * idx) + arg4 + 36)]
                        mem[32] = sha3(arg3, 17)
                        if not stor17[arg3][cd[((32 * idx) + arg4 + 36)]]:
                            revert with 0, 'collectible must be on sale'
                        if ext_call.return_data[64]:
                            mem[mem[64]] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = ext_call.return_data[0]
                            mem[mem[64] + 36] = ext_call.return_data[64]
                            mem[mem[64] + 68] = 0
                            mem[mem[64] + 100] = block.timestamp
                            require ext_code.size(erc721ContractAddress)
                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], ext_call.return_data[64], 0, block.timestamp
                        else:
                            _5559 = mem[64]
                            mem[mem[64] + 32] = ext_call.return_data[0]
                            mem[mem[64] + 64] = block.timestamp
                            _5560 = mem[64]
                            mem[mem[64]] = 64
                            mem[64] = mem[64] + 96
                            _5562 = sha3(mem[_5560 + 32 len mem[_5560]])
                            if uint64(ext_call.return_data[0]) >> 192 >= 30:
                                if uint16(sha3(mem[_5560 + 32 len mem[_5560]])) < 656:
                                    if not Mask(16, 16, sha3(mem[_5560 + 32 len mem[_5560]])) >> 16:
                                        mem[_5559 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5559 + 100] = ext_call.return_data[0]
                                        mem[_5559 + 132] = 524288
                                        mem[_5559 + 164] = 16
                                        mem[_5559 + 196] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 524288, 16, block.timestamp
                                    else:
                                        if Mask(16, 16, sha3(mem[_5560 + 32 len mem[_5560]])) >> 13 / Mask(16, 16, sha3(mem[_5560 + 32 len mem[_5560]])) >> 16 != 8:
                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5559 + 197 len 31]
                                        mem[_5559 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5559 + 100] = ext_call.return_data[0]
                                        mem[_5559 + 132] = (Mask(16, 16, _5562) >> 13) + 524288
                                        mem[_5559 + 164] = 16
                                        mem[_5559 + 196] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], (Mask(16, 16, _5562) >> 13) + 524288, 16, block.timestamp
                                else:
                                    if uint16(sha3(mem[_5560 + 32 len mem[_5560]])) < 2623:
                                        if not Mask(16, 16, sha3(mem[_5560 + 32 len mem[_5560]])) >> 16:
                                            mem[_5559 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5559 + 100] = ext_call.return_data[0]
                                            mem[_5559 + 132] = 131072
                                            mem[_5559 + 164] = 8
                                            mem[_5559 + 196] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 131072, 8, block.timestamp
                                        else:
                                            if Mask(16, 16, sha3(mem[_5560 + 32 len mem[_5560]])) >> 14 / Mask(16, 16, sha3(mem[_5560 + 32 len mem[_5560]])) >> 16 != 4:
                                                revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5559 + 197 len 31]
                                            mem[_5559 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5559 + 100] = ext_call.return_data[0]
                                            mem[_5559 + 132] = (Mask(16, 16, _5562) >> 14) + 131072
                                            mem[_5559 + 164] = 8
                                            mem[_5559 + 196] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(16, 16, _5562) >> 14) + 131072, 8, block.timestamp
                                    else:
                                        if uint16(sha3(mem[_5560 + 32 len mem[_5560]])) < 9177:
                                            mem[_5559 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5559 + 100] = ext_call.return_data[0]
                                            mem[_5559 + 132] = (Mask(16, 16, _5562) >> 16) + 16384
                                            mem[_5559 + 164] = 4
                                            mem[_5559 + 196] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(16, 16, _5562) >> 16) + 16384, 4, block.timestamp
                                        else:
                                            mem[64] = _5559 + 160
                                            mem[_5559 + 96] = 26
                                            mem[_5559 + 128] = 'SafeMath: division by zero'
                                            mem[_5559 + 160] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5559 + 164] = ext_call.return_data[0]
                                            if uint16(sha3(mem[_5560 + 32 len mem[_5560]])) >= 25561:
                                                mem[_5559 + 196] = (Mask(8, 24, _5562) >> 24) + 1
                                                mem[_5559 + 228] = 1
                                                mem[_5559 + 260] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(8, 24, _5562) >> 24) + 1, 1, block.timestamp
                                            else:
                                                mem[_5559 + 196] = (Mask(13, 19, _5562) >> 19) + 512
                                                mem[_5559 + 228] = 2
                                                mem[_5559 + 260] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(13, 19, _5562) >> 19) + 512, 2, block.timestamp
                            else:
                                mem[_5559 + 96] = 30
                                mem[_5559 + 128] = 'SafeMath: subtraction overflow'
                                if uint64(ext_call.return_data[0]) >> 192 > 30:
                                    mem[_5559 + 160] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_5559 + 164] = 32
                                    idx = 32
                                    while idx < 30:
                                        mem[idx + _5559 + 228] = mem[idx + _5559 + 128]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 'SafeMath: subtraction overflow'
                                mem[64] = _5559 + 224
                                mem[_5559 + 160] = 26
                                mem[_5559 + 192] = 'SafeMath: division by zero'
                                if not -(uint64(ext_call.return_data[0]) >> 192) + 30:
                                    mem[_5559 + 224] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_5559 + 228] = 32
                                    idx = 0
                                    while idx < 26:
                                        mem[idx + _5559 + 292] = mem[idx + _5559 + 192]
                                        idx = idx + 32
                                        continue 
                                    mem[_5559 + 292] = mem[_5559 + 298 len 26]
                                    revert with 0, 32, 26, mem[_5559 + 292]
                                if uint16(_5562) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 656:
                                    if not Mask(16, 16, _5562) >> 16:
                                        mem[_5559 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5559 + 228] = ext_call.return_data[0]
                                        mem[_5559 + 260] = 524288
                                        mem[_5559 + 292] = 16
                                        mem[_5559 + 324] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 524288, 16, block.timestamp
                                    else:
                                        if Mask(16, 16, _5562) >> 13 / Mask(16, 16, _5562) >> 16 != 8:
                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5559 + 325 len 31]
                                        mem[_5559 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5559 + 228] = ext_call.return_data[0]
                                        mem[_5559 + 260] = (Mask(16, 16, _5562) >> 13) + 524288
                                        mem[_5559 + 292] = 16
                                        mem[_5559 + 324] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], (Mask(16, 16, _5562) >> 13) + 524288, 16, block.timestamp
                                else:
                                    if uint16(_5562) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 2623:
                                        if not Mask(16, 16, _5562) >> 16:
                                            mem[_5559 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5559 + 228] = ext_call.return_data[0]
                                            mem[_5559 + 260] = 131072
                                            mem[_5559 + 292] = 8
                                            mem[_5559 + 324] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 131072, 8, block.timestamp
                                        else:
                                            if Mask(16, 16, _5562) >> 14 / Mask(16, 16, _5562) >> 16 != 4:
                                                revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5559 + 325 len 31]
                                            mem[_5559 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5559 + 228] = ext_call.return_data[0]
                                            mem[_5559 + 260] = (Mask(16, 16, _5562) >> 14) + 131072
                                            mem[_5559 + 292] = 8
                                            mem[_5559 + 324] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(16, 16, _5562) >> 14) + 131072, 8, block.timestamp
                                    else:
                                        if uint16(_5562) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 9177:
                                            mem[_5559 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5559 + 228] = ext_call.return_data[0]
                                            mem[_5559 + 260] = (Mask(16, 16, _5562) >> 16) + 16384
                                            mem[_5559 + 292] = 4
                                            mem[_5559 + 324] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(16, 16, _5562) >> 16) + 16384, 4, block.timestamp
                                        else:
                                            mem[64] = _5559 + 288
                                            mem[_5559 + 224] = 26
                                            mem[_5559 + 256] = 'SafeMath: division by zero'
                                            mem[_5559 + 288] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5559 + 292] = ext_call.return_data[0]
                                            if uint16(_5562) / -(uint64(ext_call.return_data[0]) >> 192) + 30 >= 25561:
                                                mem[_5559 + 324] = (Mask(8, 24, _5562) >> 24) + 1
                                                mem[_5559 + 356] = 1
                                                mem[_5559 + 388] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(8, 24, _5562) >> 24) + 1, 1, block.timestamp
                                            else:
                                                mem[_5559 + 324] = (Mask(13, 19, _5562) >> 19) + 512
                                                mem[_5559 + 356] = 2
                                                mem[_5559 + 388] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(13, 19, _5562) >> 19) + 512, 2, block.timestamp
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                else:
                    mem[32] = sha3(arg2, 19)
                    purchaseIdtoTokenIds[arg2][arg5].field_0++
                    mem[0] = sha3(arg5, sha3(arg2, 19))
                    purchaseIdtoTokenIds[arg2][arg5][purchaseIdtoTokenIds[arg2][arg5].field_0].field_0 = ext_call.return_data[0]
                    emit 0x29ed85fa: arg5, ext_call.return_data[32] + block.timestamp, arg2, ext_call.return_data[0]
                    mem[mem[64]] = 0x9a43573c00000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = arg1
                    mem[mem[64] + 36] = ext_call.return_data[0]
                    mem[mem[64] + 68] = ext_call.return_data[32] + block.timestamp
                    require ext_code.size(erc721ContractAddress)
                    call erc721ContractAddress.transferNewToken(bytes32 arg1, uint256 arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args arg1, ext_call.return_data[0], ext_call.return_data[32] + block.timestamp
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    if not arg2:
                        mem[0] = cd[((32 * idx) + arg4 + 36)]
                        mem[32] = sha3(arg3, 17)
                        if not stor17[arg3][cd[((32 * idx) + arg4 + 36)]]:
                            revert with 0, 'collectible must be on sale'
                        if ext_call.return_data[64]:
                            mem[mem[64]] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = ext_call.return_data[0]
                            mem[mem[64] + 36] = ext_call.return_data[64]
                            mem[mem[64] + 68] = 0
                            mem[mem[64] + 100] = block.timestamp
                            require ext_code.size(erc721ContractAddress)
                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], ext_call.return_data[64], 0, block.timestamp
                        else:
                            _5695 = mem[64]
                            mem[mem[64] + 32] = ext_call.return_data[0]
                            mem[mem[64] + 64] = block.timestamp
                            _5696 = mem[64]
                            mem[mem[64]] = 64
                            mem[64] = mem[64] + 96
                            _5698 = sha3(mem[_5696 + 32 len mem[_5696]])
                            if uint64(ext_call.return_data[0]) >> 192 >= 30:
                                if uint16(sha3(mem[_5696 + 32 len mem[_5696]])) < 656:
                                    if not Mask(16, 16, sha3(mem[_5696 + 32 len mem[_5696]])) >> 16:
                                        mem[_5695 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5695 + 100] = ext_call.return_data[0]
                                        mem[_5695 + 132] = 524288
                                        mem[_5695 + 164] = 16
                                        mem[_5695 + 196] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 524288, 16, block.timestamp
                                    else:
                                        if Mask(16, 16, sha3(mem[_5696 + 32 len mem[_5696]])) >> 13 / Mask(16, 16, sha3(mem[_5696 + 32 len mem[_5696]])) >> 16 != 8:
                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5695 + 197 len 31]
                                        mem[_5695 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5695 + 100] = ext_call.return_data[0]
                                        mem[_5695 + 132] = (Mask(16, 16, _5698) >> 13) + 524288
                                        mem[_5695 + 164] = 16
                                        mem[_5695 + 196] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], (Mask(16, 16, _5698) >> 13) + 524288, 16, block.timestamp
                                else:
                                    if uint16(sha3(mem[_5696 + 32 len mem[_5696]])) < 2623:
                                        if not Mask(16, 16, sha3(mem[_5696 + 32 len mem[_5696]])) >> 16:
                                            mem[_5695 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5695 + 100] = ext_call.return_data[0]
                                            mem[_5695 + 132] = 131072
                                            mem[_5695 + 164] = 8
                                            mem[_5695 + 196] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 131072, 8, block.timestamp
                                        else:
                                            if Mask(16, 16, sha3(mem[_5696 + 32 len mem[_5696]])) >> 14 / Mask(16, 16, sha3(mem[_5696 + 32 len mem[_5696]])) >> 16 != 4:
                                                revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5695 + 197 len 31]
                                            mem[_5695 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5695 + 100] = ext_call.return_data[0]
                                            mem[_5695 + 132] = (Mask(16, 16, _5698) >> 14) + 131072
                                            mem[_5695 + 164] = 8
                                            mem[_5695 + 196] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(16, 16, _5698) >> 14) + 131072, 8, block.timestamp
                                    else:
                                        if uint16(sha3(mem[_5696 + 32 len mem[_5696]])) < 9177:
                                            mem[_5695 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5695 + 100] = ext_call.return_data[0]
                                            mem[_5695 + 132] = (Mask(16, 16, _5698) >> 16) + 16384
                                            mem[_5695 + 164] = 4
                                            mem[_5695 + 196] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(16, 16, _5698) >> 16) + 16384, 4, block.timestamp
                                        else:
                                            mem[64] = _5695 + 160
                                            mem[_5695 + 96] = 26
                                            mem[_5695 + 128] = 'SafeMath: division by zero'
                                            mem[_5695 + 160] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5695 + 164] = ext_call.return_data[0]
                                            if uint16(sha3(mem[_5696 + 32 len mem[_5696]])) >= 25561:
                                                mem[_5695 + 196] = (Mask(8, 24, _5698) >> 24) + 1
                                                mem[_5695 + 228] = 1
                                                mem[_5695 + 260] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(8, 24, _5698) >> 24) + 1, 1, block.timestamp
                                            else:
                                                mem[_5695 + 196] = (Mask(13, 19, _5698) >> 19) + 512
                                                mem[_5695 + 228] = 2
                                                mem[_5695 + 260] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(13, 19, _5698) >> 19) + 512, 2, block.timestamp
                            else:
                                mem[_5695 + 96] = 30
                                mem[_5695 + 128] = 'SafeMath: subtraction overflow'
                                if uint64(ext_call.return_data[0]) >> 192 > 30:
                                    mem[_5695 + 160] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_5695 + 164] = 32
                                    idx = 32
                                    while idx < 30:
                                        mem[idx + _5695 + 228] = mem[idx + _5695 + 128]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 'SafeMath: subtraction overflow'
                                mem[64] = _5695 + 224
                                mem[_5695 + 160] = 26
                                mem[_5695 + 192] = 'SafeMath: division by zero'
                                if not -(uint64(ext_call.return_data[0]) >> 192) + 30:
                                    mem[_5695 + 224] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_5695 + 228] = 32
                                    idx = 0
                                    while idx < 26:
                                        mem[idx + _5695 + 292] = mem[idx + _5695 + 192]
                                        idx = idx + 32
                                        continue 
                                    mem[_5695 + 292] = mem[_5695 + 298 len 26]
                                    revert with 0, 32, 26, mem[_5695 + 292]
                                if uint16(_5698) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 656:
                                    if not Mask(16, 16, _5698) >> 16:
                                        mem[_5695 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5695 + 228] = ext_call.return_data[0]
                                        mem[_5695 + 260] = 524288
                                        mem[_5695 + 292] = 16
                                        mem[_5695 + 324] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 524288, 16, block.timestamp
                                    else:
                                        if Mask(16, 16, _5698) >> 13 / Mask(16, 16, _5698) >> 16 != 8:
                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5695 + 325 len 31]
                                        mem[_5695 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5695 + 228] = ext_call.return_data[0]
                                        mem[_5695 + 260] = (Mask(16, 16, _5698) >> 13) + 524288
                                        mem[_5695 + 292] = 16
                                        mem[_5695 + 324] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], (Mask(16, 16, _5698) >> 13) + 524288, 16, block.timestamp
                                else:
                                    if uint16(_5698) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 2623:
                                        if not Mask(16, 16, _5698) >> 16:
                                            mem[_5695 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5695 + 228] = ext_call.return_data[0]
                                            mem[_5695 + 260] = 131072
                                            mem[_5695 + 292] = 8
                                            mem[_5695 + 324] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 131072, 8, block.timestamp
                                        else:
                                            if Mask(16, 16, _5698) >> 14 / Mask(16, 16, _5698) >> 16 != 4:
                                                revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5695 + 325 len 31]
                                            mem[_5695 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5695 + 228] = ext_call.return_data[0]
                                            mem[_5695 + 260] = (Mask(16, 16, _5698) >> 14) + 131072
                                            mem[_5695 + 292] = 8
                                            mem[_5695 + 324] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(16, 16, _5698) >> 14) + 131072, 8, block.timestamp
                                    else:
                                        if uint16(_5698) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 9177:
                                            mem[_5695 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5695 + 228] = ext_call.return_data[0]
                                            mem[_5695 + 260] = (Mask(16, 16, _5698) >> 16) + 16384
                                            mem[_5695 + 292] = 4
                                            mem[_5695 + 324] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(16, 16, _5698) >> 16) + 16384, 4, block.timestamp
                                        else:
                                            mem[64] = _5695 + 288
                                            mem[_5695 + 224] = 26
                                            mem[_5695 + 256] = 'SafeMath: division by zero'
                                            mem[_5695 + 288] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5695 + 292] = ext_call.return_data[0]
                                            if uint16(_5698) / -(uint64(ext_call.return_data[0]) >> 192) + 30 >= 25561:
                                                mem[_5695 + 324] = (Mask(8, 24, _5698) >> 24) + 1
                                                mem[_5695 + 356] = 1
                                                mem[_5695 + 388] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(8, 24, _5698) >> 24) + 1, 1, block.timestamp
                                            else:
                                                mem[_5695 + 324] = (Mask(13, 19, _5698) >> 19) + 512
                                                mem[_5695 + 356] = 2
                                                mem[_5695 + 388] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(13, 19, _5698) >> 19) + 512, 2, block.timestamp
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
            require idx < mem[ceil32(calldata.size) + 128]
            mem[(32 * idx) + ceil32(calldata.size) + 160] = ext_call.return_data[0]
            idx = idx + 1
            continue 
        mem[mem[64]] = 32
        mem[mem[64] + 32] = mem[ceil32(calldata.size) + 128]
        _4686 = mem[ceil32(calldata.size) + 128]
        mem[mem[64] + 64 len floor32(mem[ceil32(calldata.size) + 128])] = mem[ceil32(calldata.size) + 160 len floor32(mem[ceil32(calldata.size) + 128])]
        return 32, mem[mem[64] + 32 len (32 * _4686) + 32]
    call mem[calldata.size + 108 len 20] with:
       value gasGrantAmount wei
         gas 2300 * is_zero(value) wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    mem[ceil32(calldata.size) + 132] = mem[calldata.size + 108 len 20]
    mem[ceil32(calldata.size) + 164] = bool(ext_call.return_data[0])
    mem[ceil32(calldata.size) + 196] = arg2
    require ext_code.size(gameContractAddress)
    staticcall gameContractAddress.isValidCaller(address arg1, bool arg2, uint256 arg3) with:
            gas gas_remaining wei
           args mem[calldata.size + 108 len 20], bool(ext_call.return_data[0]), arg2
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        revert with 0, 'admin, operator, or worker'
    require arg4.length <= test266151307()
    mem[ceil32(calldata.size) + 128] = arg4.length
    mem[64] = ceil32(calldata.size) + (32 * arg4.length) + 160
    if not arg4.length:
        idx = 0
        while idx < arg4.length:
            require ext_code.size(gameContractAddress)
            call gameContractAddress.createTokenFromCard(uint256 arg1, uint256 arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args arg2, arg3, cd[((32 * idx) + arg4 + 36)]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 96
            if arg5 == -1:
                emit 0x29ed85fa: arg5, 0, arg2, ext_call.return_data[0]
                mem[mem[64]] = 0x9a43573c00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = arg1
                mem[mem[64] + 36] = ext_call.return_data[0]
                mem[mem[64] + 68] = 0
                require ext_code.size(erc721ContractAddress)
                call erc721ContractAddress.transferNewToken(bytes32 arg1, uint256 arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args arg1, ext_call.return_data[0], 0
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                if not arg2:
                    mem[0] = cd[((32 * idx) + arg4 + 36)]
                    mem[32] = sha3(arg3, 17)
                    if not stor17[arg3][cd[((32 * idx) + arg4 + 36)]]:
                        revert with 0, 'collectible must be on sale'
                    if ext_call.return_data[64]:
                        mem[mem[64]] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = ext_call.return_data[0]
                        mem[mem[64] + 36] = ext_call.return_data[64]
                        mem[mem[64] + 68] = 0
                        mem[mem[64] + 100] = block.timestamp
                        require ext_code.size(erc721ContractAddress)
                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0], ext_call.return_data[64], 0, block.timestamp
                    else:
                        _5229 = mem[64]
                        mem[mem[64] + 32] = ext_call.return_data[0]
                        mem[mem[64] + 64] = block.timestamp
                        _5230 = mem[64]
                        mem[mem[64]] = 64
                        mem[64] = mem[64] + 96
                        _5232 = sha3(mem[_5230 + 32 len mem[_5230]])
                        if uint64(ext_call.return_data[0]) >> 192 >= 30:
                            if uint16(sha3(mem[_5230 + 32 len mem[_5230]])) < 656:
                                if not Mask(16, 16, sha3(mem[_5230 + 32 len mem[_5230]])) >> 16:
                                    mem[_5229 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                    mem[_5229 + 100] = ext_call.return_data[0]
                                    mem[_5229 + 132] = 524288
                                    mem[_5229 + 164] = 16
                                    mem[_5229 + 196] = block.timestamp
                                    require ext_code.size(erc721ContractAddress)
                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 524288, 16, block.timestamp
                                else:
                                    if Mask(16, 16, sha3(mem[_5230 + 32 len mem[_5230]])) >> 13 / Mask(16, 16, sha3(mem[_5230 + 32 len mem[_5230]])) >> 16 != 8:
                                        revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5229 + 197 len 31]
                                    mem[_5229 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                    mem[_5229 + 100] = ext_call.return_data[0]
                                    mem[_5229 + 132] = (Mask(16, 16, _5232) >> 13) + 524288
                                    mem[_5229 + 164] = 16
                                    mem[_5229 + 196] = block.timestamp
                                    require ext_code.size(erc721ContractAddress)
                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], (Mask(16, 16, _5232) >> 13) + 524288, 16, block.timestamp
                            else:
                                if uint16(sha3(mem[_5230 + 32 len mem[_5230]])) < 2623:
                                    if not Mask(16, 16, sha3(mem[_5230 + 32 len mem[_5230]])) >> 16:
                                        mem[_5229 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5229 + 100] = ext_call.return_data[0]
                                        mem[_5229 + 132] = 131072
                                        mem[_5229 + 164] = 8
                                        mem[_5229 + 196] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 131072, 8, block.timestamp
                                    else:
                                        if Mask(16, 16, sha3(mem[_5230 + 32 len mem[_5230]])) >> 14 / Mask(16, 16, sha3(mem[_5230 + 32 len mem[_5230]])) >> 16 != 4:
                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5229 + 197 len 31]
                                        mem[_5229 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5229 + 100] = ext_call.return_data[0]
                                        mem[_5229 + 132] = (Mask(16, 16, _5232) >> 14) + 131072
                                        mem[_5229 + 164] = 8
                                        mem[_5229 + 196] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], (Mask(16, 16, _5232) >> 14) + 131072, 8, block.timestamp
                                else:
                                    if uint16(sha3(mem[_5230 + 32 len mem[_5230]])) < 9177:
                                        mem[_5229 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5229 + 100] = ext_call.return_data[0]
                                        mem[_5229 + 132] = (Mask(16, 16, _5232) >> 16) + 16384
                                        mem[_5229 + 164] = 4
                                        mem[_5229 + 196] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], (Mask(16, 16, _5232) >> 16) + 16384, 4, block.timestamp
                                    else:
                                        mem[64] = _5229 + 160
                                        mem[_5229 + 96] = 26
                                        mem[_5229 + 128] = 'SafeMath: division by zero'
                                        mem[_5229 + 160] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5229 + 164] = ext_call.return_data[0]
                                        if uint16(sha3(mem[_5230 + 32 len mem[_5230]])) >= 25561:
                                            mem[_5229 + 196] = (Mask(8, 24, _5232) >> 24) + 1
                                            mem[_5229 + 228] = 1
                                            mem[_5229 + 260] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(8, 24, _5232) >> 24) + 1, 1, block.timestamp
                                        else:
                                            mem[_5229 + 196] = (Mask(13, 19, _5232) >> 19) + 512
                                            mem[_5229 + 228] = 2
                                            mem[_5229 + 260] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(13, 19, _5232) >> 19) + 512, 2, block.timestamp
                        else:
                            mem[_5229 + 96] = 30
                            mem[_5229 + 128] = 'SafeMath: subtraction overflow'
                            if uint64(ext_call.return_data[0]) >> 192 > 30:
                                mem[_5229 + 160] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_5229 + 164] = 32
                                idx = 32
                                while idx < 30:
                                    mem[idx + _5229 + 228] = mem[idx + _5229 + 128]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 'SafeMath: subtraction overflow'
                            mem[64] = _5229 + 224
                            mem[_5229 + 160] = 26
                            mem[_5229 + 192] = 'SafeMath: division by zero'
                            if not -(uint64(ext_call.return_data[0]) >> 192) + 30:
                                mem[_5229 + 224] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_5229 + 228] = 32
                                idx = 0
                                while idx < 26:
                                    mem[idx + _5229 + 292] = mem[idx + _5229 + 192]
                                    idx = idx + 32
                                    continue 
                                mem[_5229 + 292] = mem[_5229 + 298 len 26]
                                revert with 0, 32, 26, mem[_5229 + 292]
                            if uint16(_5232) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 656:
                                if not Mask(16, 16, _5232) >> 16:
                                    mem[_5229 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                    mem[_5229 + 228] = ext_call.return_data[0]
                                    mem[_5229 + 260] = 524288
                                    mem[_5229 + 292] = 16
                                    mem[_5229 + 324] = block.timestamp
                                    require ext_code.size(erc721ContractAddress)
                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 524288, 16, block.timestamp
                                else:
                                    if Mask(16, 16, _5232) >> 13 / Mask(16, 16, _5232) >> 16 != 8:
                                        revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5229 + 325 len 31]
                                    mem[_5229 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                    mem[_5229 + 228] = ext_call.return_data[0]
                                    mem[_5229 + 260] = (Mask(16, 16, _5232) >> 13) + 524288
                                    mem[_5229 + 292] = 16
                                    mem[_5229 + 324] = block.timestamp
                                    require ext_code.size(erc721ContractAddress)
                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], (Mask(16, 16, _5232) >> 13) + 524288, 16, block.timestamp
                            else:
                                if uint16(_5232) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 2623:
                                    if not Mask(16, 16, _5232) >> 16:
                                        mem[_5229 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5229 + 228] = ext_call.return_data[0]
                                        mem[_5229 + 260] = 131072
                                        mem[_5229 + 292] = 8
                                        mem[_5229 + 324] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 131072, 8, block.timestamp
                                    else:
                                        if Mask(16, 16, _5232) >> 14 / Mask(16, 16, _5232) >> 16 != 4:
                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5229 + 325 len 31]
                                        mem[_5229 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5229 + 228] = ext_call.return_data[0]
                                        mem[_5229 + 260] = (Mask(16, 16, _5232) >> 14) + 131072
                                        mem[_5229 + 292] = 8
                                        mem[_5229 + 324] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], (Mask(16, 16, _5232) >> 14) + 131072, 8, block.timestamp
                                else:
                                    if uint16(_5232) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 9177:
                                        mem[_5229 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5229 + 228] = ext_call.return_data[0]
                                        mem[_5229 + 260] = (Mask(16, 16, _5232) >> 16) + 16384
                                        mem[_5229 + 292] = 4
                                        mem[_5229 + 324] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], (Mask(16, 16, _5232) >> 16) + 16384, 4, block.timestamp
                                    else:
                                        mem[64] = _5229 + 288
                                        mem[_5229 + 224] = 26
                                        mem[_5229 + 256] = 'SafeMath: division by zero'
                                        mem[_5229 + 288] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5229 + 292] = ext_call.return_data[0]
                                        if uint16(_5232) / -(uint64(ext_call.return_data[0]) >> 192) + 30 >= 25561:
                                            mem[_5229 + 324] = (Mask(8, 24, _5232) >> 24) + 1
                                            mem[_5229 + 356] = 1
                                            mem[_5229 + 388] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(8, 24, _5232) >> 24) + 1, 1, block.timestamp
                                        else:
                                            mem[_5229 + 324] = (Mask(13, 19, _5232) >> 19) + 512
                                            mem[_5229 + 356] = 2
                                            mem[_5229 + 388] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(13, 19, _5232) >> 19) + 512, 2, block.timestamp
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
            else:
                if ext_call.return_data[32] + block.timestamp < block.timestamp:
                    revert with 0, 'SafeMath: addition overflow'
                if not arg5:
                    emit 0x29ed85fa: arg5, ext_call.return_data[32] + block.timestamp, arg2, ext_call.return_data[0]
                    mem[mem[64]] = 0x9a43573c00000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = arg1
                    mem[mem[64] + 36] = ext_call.return_data[0]
                    mem[mem[64] + 68] = ext_call.return_data[32] + block.timestamp
                    require ext_code.size(erc721ContractAddress)
                    call erc721ContractAddress.transferNewToken(bytes32 arg1, uint256 arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args arg1, ext_call.return_data[0], ext_call.return_data[32] + block.timestamp
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    if not arg2:
                        mem[0] = cd[((32 * idx) + arg4 + 36)]
                        mem[32] = sha3(arg3, 17)
                        if not stor17[arg3][cd[((32 * idx) + arg4 + 36)]]:
                            revert with 0, 'collectible must be on sale'
                        if ext_call.return_data[64]:
                            mem[mem[64]] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = ext_call.return_data[0]
                            mem[mem[64] + 36] = ext_call.return_data[64]
                            mem[mem[64] + 68] = 0
                            mem[mem[64] + 100] = block.timestamp
                            require ext_code.size(erc721ContractAddress)
                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], ext_call.return_data[64], 0, block.timestamp
                        else:
                            _5564 = mem[64]
                            mem[mem[64] + 32] = ext_call.return_data[0]
                            mem[mem[64] + 64] = block.timestamp
                            _5565 = mem[64]
                            mem[mem[64]] = 64
                            mem[64] = mem[64] + 96
                            _5567 = sha3(mem[_5565 + 32 len mem[_5565]])
                            if uint64(ext_call.return_data[0]) >> 192 >= 30:
                                if uint16(sha3(mem[_5565 + 32 len mem[_5565]])) < 656:
                                    if not Mask(16, 16, sha3(mem[_5565 + 32 len mem[_5565]])) >> 16:
                                        mem[_5564 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5564 + 100] = ext_call.return_data[0]
                                        mem[_5564 + 132] = 524288
                                        mem[_5564 + 164] = 16
                                        mem[_5564 + 196] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 524288, 16, block.timestamp
                                    else:
                                        if Mask(16, 16, sha3(mem[_5565 + 32 len mem[_5565]])) >> 13 / Mask(16, 16, sha3(mem[_5565 + 32 len mem[_5565]])) >> 16 != 8:
                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5564 + 197 len 31]
                                        mem[_5564 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5564 + 100] = ext_call.return_data[0]
                                        mem[_5564 + 132] = (Mask(16, 16, _5567) >> 13) + 524288
                                        mem[_5564 + 164] = 16
                                        mem[_5564 + 196] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], (Mask(16, 16, _5567) >> 13) + 524288, 16, block.timestamp
                                else:
                                    if uint16(sha3(mem[_5565 + 32 len mem[_5565]])) < 2623:
                                        if not Mask(16, 16, sha3(mem[_5565 + 32 len mem[_5565]])) >> 16:
                                            mem[_5564 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5564 + 100] = ext_call.return_data[0]
                                            mem[_5564 + 132] = 131072
                                            mem[_5564 + 164] = 8
                                            mem[_5564 + 196] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 131072, 8, block.timestamp
                                        else:
                                            if Mask(16, 16, sha3(mem[_5565 + 32 len mem[_5565]])) >> 14 / Mask(16, 16, sha3(mem[_5565 + 32 len mem[_5565]])) >> 16 != 4:
                                                revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5564 + 197 len 31]
                                            mem[_5564 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5564 + 100] = ext_call.return_data[0]
                                            mem[_5564 + 132] = (Mask(16, 16, _5567) >> 14) + 131072
                                            mem[_5564 + 164] = 8
                                            mem[_5564 + 196] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(16, 16, _5567) >> 14) + 131072, 8, block.timestamp
                                    else:
                                        if uint16(sha3(mem[_5565 + 32 len mem[_5565]])) < 9177:
                                            mem[_5564 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5564 + 100] = ext_call.return_data[0]
                                            mem[_5564 + 132] = (Mask(16, 16, _5567) >> 16) + 16384
                                            mem[_5564 + 164] = 4
                                            mem[_5564 + 196] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(16, 16, _5567) >> 16) + 16384, 4, block.timestamp
                                        else:
                                            mem[64] = _5564 + 160
                                            mem[_5564 + 96] = 26
                                            mem[_5564 + 128] = 'SafeMath: division by zero'
                                            mem[_5564 + 160] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5564 + 164] = ext_call.return_data[0]
                                            if uint16(sha3(mem[_5565 + 32 len mem[_5565]])) >= 25561:
                                                mem[_5564 + 196] = (Mask(8, 24, _5567) >> 24) + 1
                                                mem[_5564 + 228] = 1
                                                mem[_5564 + 260] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(8, 24, _5567) >> 24) + 1, 1, block.timestamp
                                            else:
                                                mem[_5564 + 196] = (Mask(13, 19, _5567) >> 19) + 512
                                                mem[_5564 + 228] = 2
                                                mem[_5564 + 260] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(13, 19, _5567) >> 19) + 512, 2, block.timestamp
                            else:
                                mem[_5564 + 96] = 30
                                mem[_5564 + 128] = 'SafeMath: subtraction overflow'
                                if uint64(ext_call.return_data[0]) >> 192 > 30:
                                    mem[_5564 + 160] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_5564 + 164] = 32
                                    idx = 32
                                    while idx < 30:
                                        mem[idx + _5564 + 228] = mem[idx + _5564 + 128]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 'SafeMath: subtraction overflow'
                                mem[64] = _5564 + 224
                                mem[_5564 + 160] = 26
                                mem[_5564 + 192] = 'SafeMath: division by zero'
                                if not -(uint64(ext_call.return_data[0]) >> 192) + 30:
                                    mem[_5564 + 224] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_5564 + 228] = 32
                                    idx = 0
                                    while idx < 26:
                                        mem[idx + _5564 + 292] = mem[idx + _5564 + 192]
                                        idx = idx + 32
                                        continue 
                                    mem[_5564 + 292] = mem[_5564 + 298 len 26]
                                    revert with 0, 32, 26, mem[_5564 + 292]
                                if uint16(_5567) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 656:
                                    if not Mask(16, 16, _5567) >> 16:
                                        mem[_5564 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5564 + 228] = ext_call.return_data[0]
                                        mem[_5564 + 260] = 524288
                                        mem[_5564 + 292] = 16
                                        mem[_5564 + 324] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 524288, 16, block.timestamp
                                    else:
                                        if Mask(16, 16, _5567) >> 13 / Mask(16, 16, _5567) >> 16 != 8:
                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5564 + 325 len 31]
                                        mem[_5564 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5564 + 228] = ext_call.return_data[0]
                                        mem[_5564 + 260] = (Mask(16, 16, _5567) >> 13) + 524288
                                        mem[_5564 + 292] = 16
                                        mem[_5564 + 324] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], (Mask(16, 16, _5567) >> 13) + 524288, 16, block.timestamp
                                else:
                                    if uint16(_5567) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 2623:
                                        if not Mask(16, 16, _5567) >> 16:
                                            mem[_5564 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5564 + 228] = ext_call.return_data[0]
                                            mem[_5564 + 260] = 131072
                                            mem[_5564 + 292] = 8
                                            mem[_5564 + 324] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 131072, 8, block.timestamp
                                        else:
                                            if Mask(16, 16, _5567) >> 14 / Mask(16, 16, _5567) >> 16 != 4:
                                                revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5564 + 325 len 31]
                                            mem[_5564 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5564 + 228] = ext_call.return_data[0]
                                            mem[_5564 + 260] = (Mask(16, 16, _5567) >> 14) + 131072
                                            mem[_5564 + 292] = 8
                                            mem[_5564 + 324] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(16, 16, _5567) >> 14) + 131072, 8, block.timestamp
                                    else:
                                        if uint16(_5567) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 9177:
                                            mem[_5564 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5564 + 228] = ext_call.return_data[0]
                                            mem[_5564 + 260] = (Mask(16, 16, _5567) >> 16) + 16384
                                            mem[_5564 + 292] = 4
                                            mem[_5564 + 324] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(16, 16, _5567) >> 16) + 16384, 4, block.timestamp
                                        else:
                                            mem[64] = _5564 + 288
                                            mem[_5564 + 224] = 26
                                            mem[_5564 + 256] = 'SafeMath: division by zero'
                                            mem[_5564 + 288] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5564 + 292] = ext_call.return_data[0]
                                            if uint16(_5567) / -(uint64(ext_call.return_data[0]) >> 192) + 30 >= 25561:
                                                mem[_5564 + 324] = (Mask(8, 24, _5567) >> 24) + 1
                                                mem[_5564 + 356] = 1
                                                mem[_5564 + 388] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(8, 24, _5567) >> 24) + 1, 1, block.timestamp
                                            else:
                                                mem[_5564 + 324] = (Mask(13, 19, _5567) >> 19) + 512
                                                mem[_5564 + 356] = 2
                                                mem[_5564 + 388] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(13, 19, _5567) >> 19) + 512, 2, block.timestamp
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                else:
                    mem[32] = sha3(arg2, 19)
                    purchaseIdtoTokenIds[arg2][arg5].field_0++
                    mem[0] = sha3(arg5, sha3(arg2, 19))
                    purchaseIdtoTokenIds[arg2][arg5][purchaseIdtoTokenIds[arg2][arg5].field_0].field_0 = ext_call.return_data[0]
                    emit 0x29ed85fa: arg5, ext_call.return_data[32] + block.timestamp, arg2, ext_call.return_data[0]
                    mem[mem[64]] = 0x9a43573c00000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = arg1
                    mem[mem[64] + 36] = ext_call.return_data[0]
                    mem[mem[64] + 68] = ext_call.return_data[32] + block.timestamp
                    require ext_code.size(erc721ContractAddress)
                    call erc721ContractAddress.transferNewToken(bytes32 arg1, uint256 arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args arg1, ext_call.return_data[0], ext_call.return_data[32] + block.timestamp
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    if not arg2:
                        mem[0] = cd[((32 * idx) + arg4 + 36)]
                        mem[32] = sha3(arg3, 17)
                        if not stor17[arg3][cd[((32 * idx) + arg4 + 36)]]:
                            revert with 0, 'collectible must be on sale'
                        if ext_call.return_data[64]:
                            mem[mem[64]] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = ext_call.return_data[0]
                            mem[mem[64] + 36] = ext_call.return_data[64]
                            mem[mem[64] + 68] = 0
                            mem[mem[64] + 100] = block.timestamp
                            require ext_code.size(erc721ContractAddress)
                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], ext_call.return_data[64], 0, block.timestamp
                        else:
                            _5704 = mem[64]
                            mem[mem[64] + 32] = ext_call.return_data[0]
                            mem[mem[64] + 64] = block.timestamp
                            _5705 = mem[64]
                            mem[mem[64]] = 64
                            mem[64] = mem[64] + 96
                            _5707 = sha3(mem[_5705 + 32 len mem[_5705]])
                            if uint64(ext_call.return_data[0]) >> 192 >= 30:
                                if uint16(sha3(mem[_5705 + 32 len mem[_5705]])) < 656:
                                    if not Mask(16, 16, sha3(mem[_5705 + 32 len mem[_5705]])) >> 16:
                                        mem[_5704 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5704 + 100] = ext_call.return_data[0]
                                        mem[_5704 + 132] = 524288
                                        mem[_5704 + 164] = 16
                                        mem[_5704 + 196] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 524288, 16, block.timestamp
                                    else:
                                        if Mask(16, 16, sha3(mem[_5705 + 32 len mem[_5705]])) >> 13 / Mask(16, 16, sha3(mem[_5705 + 32 len mem[_5705]])) >> 16 != 8:
                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5704 + 197 len 31]
                                        mem[_5704 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5704 + 100] = ext_call.return_data[0]
                                        mem[_5704 + 132] = (Mask(16, 16, _5707) >> 13) + 524288
                                        mem[_5704 + 164] = 16
                                        mem[_5704 + 196] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], (Mask(16, 16, _5707) >> 13) + 524288, 16, block.timestamp
                                else:
                                    if uint16(sha3(mem[_5705 + 32 len mem[_5705]])) < 2623:
                                        if not Mask(16, 16, sha3(mem[_5705 + 32 len mem[_5705]])) >> 16:
                                            mem[_5704 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5704 + 100] = ext_call.return_data[0]
                                            mem[_5704 + 132] = 131072
                                            mem[_5704 + 164] = 8
                                            mem[_5704 + 196] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 131072, 8, block.timestamp
                                        else:
                                            if Mask(16, 16, sha3(mem[_5705 + 32 len mem[_5705]])) >> 14 / Mask(16, 16, sha3(mem[_5705 + 32 len mem[_5705]])) >> 16 != 4:
                                                revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5704 + 197 len 31]
                                            mem[_5704 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5704 + 100] = ext_call.return_data[0]
                                            mem[_5704 + 132] = (Mask(16, 16, _5707) >> 14) + 131072
                                            mem[_5704 + 164] = 8
                                            mem[_5704 + 196] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(16, 16, _5707) >> 14) + 131072, 8, block.timestamp
                                    else:
                                        if uint16(sha3(mem[_5705 + 32 len mem[_5705]])) < 9177:
                                            mem[_5704 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5704 + 100] = ext_call.return_data[0]
                                            mem[_5704 + 132] = (Mask(16, 16, _5707) >> 16) + 16384
                                            mem[_5704 + 164] = 4
                                            mem[_5704 + 196] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(16, 16, _5707) >> 16) + 16384, 4, block.timestamp
                                        else:
                                            mem[64] = _5704 + 160
                                            mem[_5704 + 96] = 26
                                            mem[_5704 + 128] = 'SafeMath: division by zero'
                                            mem[_5704 + 160] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5704 + 164] = ext_call.return_data[0]
                                            if uint16(sha3(mem[_5705 + 32 len mem[_5705]])) >= 25561:
                                                mem[_5704 + 196] = (Mask(8, 24, _5707) >> 24) + 1
                                                mem[_5704 + 228] = 1
                                                mem[_5704 + 260] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(8, 24, _5707) >> 24) + 1, 1, block.timestamp
                                            else:
                                                mem[_5704 + 196] = (Mask(13, 19, _5707) >> 19) + 512
                                                mem[_5704 + 228] = 2
                                                mem[_5704 + 260] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(13, 19, _5707) >> 19) + 512, 2, block.timestamp
                            else:
                                mem[_5704 + 96] = 30
                                mem[_5704 + 128] = 'SafeMath: subtraction overflow'
                                if uint64(ext_call.return_data[0]) >> 192 > 30:
                                    mem[_5704 + 160] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_5704 + 164] = 32
                                    idx = 32
                                    while idx < 30:
                                        mem[idx + _5704 + 228] = mem[idx + _5704 + 128]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 'SafeMath: subtraction overflow'
                                mem[64] = _5704 + 224
                                mem[_5704 + 160] = 26
                                mem[_5704 + 192] = 'SafeMath: division by zero'
                                if not -(uint64(ext_call.return_data[0]) >> 192) + 30:
                                    mem[_5704 + 224] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_5704 + 228] = 32
                                    idx = 0
                                    while idx < 26:
                                        mem[idx + _5704 + 292] = mem[idx + _5704 + 192]
                                        idx = idx + 32
                                        continue 
                                    mem[_5704 + 292] = mem[_5704 + 298 len 26]
                                    revert with 0, 32, 26, mem[_5704 + 292]
                                if uint16(_5707) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 656:
                                    if not Mask(16, 16, _5707) >> 16:
                                        mem[_5704 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5704 + 228] = ext_call.return_data[0]
                                        mem[_5704 + 260] = 524288
                                        mem[_5704 + 292] = 16
                                        mem[_5704 + 324] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 524288, 16, block.timestamp
                                    else:
                                        if Mask(16, 16, _5707) >> 13 / Mask(16, 16, _5707) >> 16 != 8:
                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5704 + 325 len 31]
                                        mem[_5704 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5704 + 228] = ext_call.return_data[0]
                                        mem[_5704 + 260] = (Mask(16, 16, _5707) >> 13) + 524288
                                        mem[_5704 + 292] = 16
                                        mem[_5704 + 324] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], (Mask(16, 16, _5707) >> 13) + 524288, 16, block.timestamp
                                else:
                                    if uint16(_5707) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 2623:
                                        if not Mask(16, 16, _5707) >> 16:
                                            mem[_5704 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5704 + 228] = ext_call.return_data[0]
                                            mem[_5704 + 260] = 131072
                                            mem[_5704 + 292] = 8
                                            mem[_5704 + 324] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 131072, 8, block.timestamp
                                        else:
                                            if Mask(16, 16, _5707) >> 14 / Mask(16, 16, _5707) >> 16 != 4:
                                                revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5704 + 325 len 31]
                                            mem[_5704 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5704 + 228] = ext_call.return_data[0]
                                            mem[_5704 + 260] = (Mask(16, 16, _5707) >> 14) + 131072
                                            mem[_5704 + 292] = 8
                                            mem[_5704 + 324] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(16, 16, _5707) >> 14) + 131072, 8, block.timestamp
                                    else:
                                        if uint16(_5707) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 9177:
                                            mem[_5704 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5704 + 228] = ext_call.return_data[0]
                                            mem[_5704 + 260] = (Mask(16, 16, _5707) >> 16) + 16384
                                            mem[_5704 + 292] = 4
                                            mem[_5704 + 324] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(16, 16, _5707) >> 16) + 16384, 4, block.timestamp
                                        else:
                                            mem[64] = _5704 + 288
                                            mem[_5704 + 224] = 26
                                            mem[_5704 + 256] = 'SafeMath: division by zero'
                                            mem[_5704 + 288] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                            mem[_5704 + 292] = ext_call.return_data[0]
                                            if uint16(_5707) / -(uint64(ext_call.return_data[0]) >> 192) + 30 >= 25561:
                                                mem[_5704 + 324] = (Mask(8, 24, _5707) >> 24) + 1
                                                mem[_5704 + 356] = 1
                                                mem[_5704 + 388] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(8, 24, _5707) >> 24) + 1, 1, block.timestamp
                                            else:
                                                mem[_5704 + 324] = (Mask(13, 19, _5707) >> 19) + 512
                                                mem[_5704 + 356] = 2
                                                mem[_5704 + 388] = block.timestamp
                                                require ext_code.size(erc721ContractAddress)
                                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], (Mask(13, 19, _5707) >> 19) + 512, 2, block.timestamp
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
            require idx < mem[ceil32(calldata.size) + 128]
            mem[(32 * idx) + ceil32(calldata.size) + 160] = ext_call.return_data[0]
            idx = idx + 1
            continue 
        mem[mem[64]] = 32
        mem[mem[64] + 32] = mem[ceil32(calldata.size) + 128]
        _4689 = mem[ceil32(calldata.size) + 128]
        mem[mem[64] + 64 len floor32(mem[ceil32(calldata.size) + 128])] = mem[ceil32(calldata.size) + 160 len floor32(mem[ceil32(calldata.size) + 128])]
        return 32, mem[mem[64] + 32 len (32 * _4689) + 32]
    mem[ceil32(calldata.size) + 160 len 32 * arg4.length] = call.data[calldata.size len 32 * arg4.length]
    idx = 0
    while idx < arg4.length:
        require ext_code.size(gameContractAddress)
        call gameContractAddress.createTokenFromCard(uint256 arg1, uint256 arg2, uint256 arg3) with:
             gas gas_remaining wei
            args arg2, arg3, cd[((32 * idx) + arg4 + 36)]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 96
        if arg5 == -1:
            emit 0x29ed85fa: arg5, 0, arg2, ext_call.return_data[0]
            mem[mem[64]] = 0x9a43573c00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = arg1
            mem[mem[64] + 36] = ext_call.return_data[0]
            mem[mem[64] + 68] = 0
            require ext_code.size(erc721ContractAddress)
            call erc721ContractAddress.transferNewToken(bytes32 arg1, uint256 arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args arg1, ext_call.return_data[0], 0
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            if not arg2:
                mem[0] = cd[((32 * idx) + arg4 + 36)]
                mem[32] = sha3(arg3, 17)
                if not stor17[arg3][cd[((32 * idx) + arg4 + 36)]]:
                    revert with 0, 'collectible must be on sale'
                if ext_call.return_data[64]:
                    mem[mem[64]] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = ext_call.return_data[0]
                    mem[mem[64] + 36] = ext_call.return_data[64]
                    mem[mem[64] + 68] = 0
                    mem[mem[64] + 100] = block.timestamp
                    require ext_code.size(erc721ContractAddress)
                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0], ext_call.return_data[64], 0, block.timestamp
                else:
                    _5233 = mem[64]
                    mem[mem[64] + 32] = ext_call.return_data[0]
                    mem[mem[64] + 64] = block.timestamp
                    _5234 = mem[64]
                    mem[mem[64]] = 64
                    mem[64] = mem[64] + 96
                    _5236 = sha3(mem[_5234 + 32 len mem[_5234]])
                    if uint64(ext_call.return_data[0]) >> 192 >= 30:
                        if uint16(sha3(mem[_5234 + 32 len mem[_5234]])) < 656:
                            if not Mask(16, 16, sha3(mem[_5234 + 32 len mem[_5234]])) >> 16:
                                mem[_5233 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                mem[_5233 + 100] = ext_call.return_data[0]
                                mem[_5233 + 132] = 524288
                                mem[_5233 + 164] = 16
                                mem[_5233 + 196] = block.timestamp
                                require ext_code.size(erc721ContractAddress)
                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 524288, 16, block.timestamp
                            else:
                                if Mask(16, 16, sha3(mem[_5234 + 32 len mem[_5234]])) >> 13 / Mask(16, 16, sha3(mem[_5234 + 32 len mem[_5234]])) >> 16 != 8:
                                    revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5233 + 197 len 31]
                                mem[_5233 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                mem[_5233 + 100] = ext_call.return_data[0]
                                mem[_5233 + 132] = (Mask(16, 16, _5236) >> 13) + 524288
                                mem[_5233 + 164] = 16
                                mem[_5233 + 196] = block.timestamp
                                require ext_code.size(erc721ContractAddress)
                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], (Mask(16, 16, _5236) >> 13) + 524288, 16, block.timestamp
                        else:
                            if uint16(sha3(mem[_5234 + 32 len mem[_5234]])) < 2623:
                                if not Mask(16, 16, sha3(mem[_5234 + 32 len mem[_5234]])) >> 16:
                                    mem[_5233 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                    mem[_5233 + 100] = ext_call.return_data[0]
                                    mem[_5233 + 132] = 131072
                                    mem[_5233 + 164] = 8
                                    mem[_5233 + 196] = block.timestamp
                                    require ext_code.size(erc721ContractAddress)
                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 131072, 8, block.timestamp
                                else:
                                    if Mask(16, 16, sha3(mem[_5234 + 32 len mem[_5234]])) >> 14 / Mask(16, 16, sha3(mem[_5234 + 32 len mem[_5234]])) >> 16 != 4:
                                        revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5233 + 197 len 31]
                                    mem[_5233 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                    mem[_5233 + 100] = ext_call.return_data[0]
                                    mem[_5233 + 132] = (Mask(16, 16, _5236) >> 14) + 131072
                                    mem[_5233 + 164] = 8
                                    mem[_5233 + 196] = block.timestamp
                                    require ext_code.size(erc721ContractAddress)
                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], (Mask(16, 16, _5236) >> 14) + 131072, 8, block.timestamp
                            else:
                                if uint16(sha3(mem[_5234 + 32 len mem[_5234]])) < 9177:
                                    mem[_5233 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                    mem[_5233 + 100] = ext_call.return_data[0]
                                    mem[_5233 + 132] = (Mask(16, 16, _5236) >> 16) + 16384
                                    mem[_5233 + 164] = 4
                                    mem[_5233 + 196] = block.timestamp
                                    require ext_code.size(erc721ContractAddress)
                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], (Mask(16, 16, _5236) >> 16) + 16384, 4, block.timestamp
                                else:
                                    mem[64] = _5233 + 160
                                    mem[_5233 + 96] = 26
                                    mem[_5233 + 128] = 'SafeMath: division by zero'
                                    mem[_5233 + 160] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                    mem[_5233 + 164] = ext_call.return_data[0]
                                    if uint16(sha3(mem[_5234 + 32 len mem[_5234]])) >= 25561:
                                        mem[_5233 + 196] = (Mask(8, 24, _5236) >> 24) + 1
                                        mem[_5233 + 228] = 1
                                        mem[_5233 + 260] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], (Mask(8, 24, _5236) >> 24) + 1, 1, block.timestamp
                                    else:
                                        mem[_5233 + 196] = (Mask(13, 19, _5236) >> 19) + 512
                                        mem[_5233 + 228] = 2
                                        mem[_5233 + 260] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], (Mask(13, 19, _5236) >> 19) + 512, 2, block.timestamp
                    else:
                        mem[_5233 + 96] = 30
                        mem[_5233 + 128] = 'SafeMath: subtraction overflow'
                        if uint64(ext_call.return_data[0]) >> 192 > 30:
                            mem[_5233 + 160] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_5233 + 164] = 32
                            idx = 32
                            while idx < 30:
                                mem[idx + _5233 + 228] = mem[idx + _5233 + 128]
                                idx = idx + 32
                                continue 
                            revert with 0, 'SafeMath: subtraction overflow'
                        mem[64] = _5233 + 224
                        mem[_5233 + 160] = 26
                        mem[_5233 + 192] = 'SafeMath: division by zero'
                        if not -(uint64(ext_call.return_data[0]) >> 192) + 30:
                            mem[_5233 + 224] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_5233 + 228] = 32
                            idx = 0
                            while idx < 26:
                                mem[idx + _5233 + 292] = mem[idx + _5233 + 192]
                                idx = idx + 32
                                continue 
                            mem[_5233 + 292] = mem[_5233 + 298 len 26]
                            revert with 0, 32, 26, mem[_5233 + 292]
                        if uint16(_5236) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 656:
                            if not Mask(16, 16, _5236) >> 16:
                                mem[_5233 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                mem[_5233 + 228] = ext_call.return_data[0]
                                mem[_5233 + 260] = 524288
                                mem[_5233 + 292] = 16
                                mem[_5233 + 324] = block.timestamp
                                require ext_code.size(erc721ContractAddress)
                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 524288, 16, block.timestamp
                            else:
                                if Mask(16, 16, _5236) >> 13 / Mask(16, 16, _5236) >> 16 != 8:
                                    revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5233 + 325 len 31]
                                mem[_5233 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                mem[_5233 + 228] = ext_call.return_data[0]
                                mem[_5233 + 260] = (Mask(16, 16, _5236) >> 13) + 524288
                                mem[_5233 + 292] = 16
                                mem[_5233 + 324] = block.timestamp
                                require ext_code.size(erc721ContractAddress)
                                call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], (Mask(16, 16, _5236) >> 13) + 524288, 16, block.timestamp
                        else:
                            if uint16(_5236) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 2623:
                                if not Mask(16, 16, _5236) >> 16:
                                    mem[_5233 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                    mem[_5233 + 228] = ext_call.return_data[0]
                                    mem[_5233 + 260] = 131072
                                    mem[_5233 + 292] = 8
                                    mem[_5233 + 324] = block.timestamp
                                    require ext_code.size(erc721ContractAddress)
                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 131072, 8, block.timestamp
                                else:
                                    if Mask(16, 16, _5236) >> 14 / Mask(16, 16, _5236) >> 16 != 4:
                                        revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5233 + 325 len 31]
                                    mem[_5233 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                    mem[_5233 + 228] = ext_call.return_data[0]
                                    mem[_5233 + 260] = (Mask(16, 16, _5236) >> 14) + 131072
                                    mem[_5233 + 292] = 8
                                    mem[_5233 + 324] = block.timestamp
                                    require ext_code.size(erc721ContractAddress)
                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], (Mask(16, 16, _5236) >> 14) + 131072, 8, block.timestamp
                            else:
                                if uint16(_5236) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 9177:
                                    mem[_5233 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                    mem[_5233 + 228] = ext_call.return_data[0]
                                    mem[_5233 + 260] = (Mask(16, 16, _5236) >> 16) + 16384
                                    mem[_5233 + 292] = 4
                                    mem[_5233 + 324] = block.timestamp
                                    require ext_code.size(erc721ContractAddress)
                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], (Mask(16, 16, _5236) >> 16) + 16384, 4, block.timestamp
                                else:
                                    mem[64] = _5233 + 288
                                    mem[_5233 + 224] = 26
                                    mem[_5233 + 256] = 'SafeMath: division by zero'
                                    mem[_5233 + 288] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                    mem[_5233 + 292] = ext_call.return_data[0]
                                    if uint16(_5236) / -(uint64(ext_call.return_data[0]) >> 192) + 30 >= 25561:
                                        mem[_5233 + 324] = (Mask(8, 24, _5236) >> 24) + 1
                                        mem[_5233 + 356] = 1
                                        mem[_5233 + 388] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], (Mask(8, 24, _5236) >> 24) + 1, 1, block.timestamp
                                    else:
                                        mem[_5233 + 324] = (Mask(13, 19, _5236) >> 19) + 512
                                        mem[_5233 + 356] = 2
                                        mem[_5233 + 388] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], (Mask(13, 19, _5236) >> 19) + 512, 2, block.timestamp
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
        else:
            if ext_call.return_data[32] + block.timestamp < block.timestamp:
                revert with 0, 'SafeMath: addition overflow'
            if not arg5:
                emit 0x29ed85fa: arg5, ext_call.return_data[32] + block.timestamp, arg2, ext_call.return_data[0]
                mem[mem[64]] = 0x9a43573c00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = arg1
                mem[mem[64] + 36] = ext_call.return_data[0]
                mem[mem[64] + 68] = ext_call.return_data[32] + block.timestamp
                require ext_code.size(erc721ContractAddress)
                call erc721ContractAddress.transferNewToken(bytes32 arg1, uint256 arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args arg1, ext_call.return_data[0], ext_call.return_data[32] + block.timestamp
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                if not arg2:
                    mem[0] = cd[((32 * idx) + arg4 + 36)]
                    mem[32] = sha3(arg3, 17)
                    if not stor17[arg3][cd[((32 * idx) + arg4 + 36)]]:
                        revert with 0, 'collectible must be on sale'
                    if ext_call.return_data[64]:
                        mem[mem[64]] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = ext_call.return_data[0]
                        mem[mem[64] + 36] = ext_call.return_data[64]
                        mem[mem[64] + 68] = 0
                        mem[mem[64] + 100] = block.timestamp
                        require ext_code.size(erc721ContractAddress)
                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0], ext_call.return_data[64], 0, block.timestamp
                    else:
                        _5569 = mem[64]
                        mem[mem[64] + 32] = ext_call.return_data[0]
                        mem[mem[64] + 64] = block.timestamp
                        _5570 = mem[64]
                        mem[mem[64]] = 64
                        mem[64] = mem[64] + 96
                        _5572 = sha3(mem[_5570 + 32 len mem[_5570]])
                        if uint64(ext_call.return_data[0]) >> 192 >= 30:
                            if uint16(sha3(mem[_5570 + 32 len mem[_5570]])) < 656:
                                if not Mask(16, 16, sha3(mem[_5570 + 32 len mem[_5570]])) >> 16:
                                    mem[_5569 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                    mem[_5569 + 100] = ext_call.return_data[0]
                                    mem[_5569 + 132] = 524288
                                    mem[_5569 + 164] = 16
                                    mem[_5569 + 196] = block.timestamp
                                    require ext_code.size(erc721ContractAddress)
                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 524288, 16, block.timestamp
                                else:
                                    if Mask(16, 16, sha3(mem[_5570 + 32 len mem[_5570]])) >> 13 / Mask(16, 16, sha3(mem[_5570 + 32 len mem[_5570]])) >> 16 != 8:
                                        revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5569 + 197 len 31]
                                    mem[_5569 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                    mem[_5569 + 100] = ext_call.return_data[0]
                                    mem[_5569 + 132] = (Mask(16, 16, _5572) >> 13) + 524288
                                    mem[_5569 + 164] = 16
                                    mem[_5569 + 196] = block.timestamp
                                    require ext_code.size(erc721ContractAddress)
                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], (Mask(16, 16, _5572) >> 13) + 524288, 16, block.timestamp
                            else:
                                if uint16(sha3(mem[_5570 + 32 len mem[_5570]])) < 2623:
                                    if not Mask(16, 16, sha3(mem[_5570 + 32 len mem[_5570]])) >> 16:
                                        mem[_5569 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5569 + 100] = ext_call.return_data[0]
                                        mem[_5569 + 132] = 131072
                                        mem[_5569 + 164] = 8
                                        mem[_5569 + 196] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 131072, 8, block.timestamp
                                    else:
                                        if Mask(16, 16, sha3(mem[_5570 + 32 len mem[_5570]])) >> 14 / Mask(16, 16, sha3(mem[_5570 + 32 len mem[_5570]])) >> 16 != 4:
                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5569 + 197 len 31]
                                        mem[_5569 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5569 + 100] = ext_call.return_data[0]
                                        mem[_5569 + 132] = (Mask(16, 16, _5572) >> 14) + 131072
                                        mem[_5569 + 164] = 8
                                        mem[_5569 + 196] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], (Mask(16, 16, _5572) >> 14) + 131072, 8, block.timestamp
                                else:
                                    if uint16(sha3(mem[_5570 + 32 len mem[_5570]])) < 9177:
                                        mem[_5569 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5569 + 100] = ext_call.return_data[0]
                                        mem[_5569 + 132] = (Mask(16, 16, _5572) >> 16) + 16384
                                        mem[_5569 + 164] = 4
                                        mem[_5569 + 196] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], (Mask(16, 16, _5572) >> 16) + 16384, 4, block.timestamp
                                    else:
                                        mem[64] = _5569 + 160
                                        mem[_5569 + 96] = 26
                                        mem[_5569 + 128] = 'SafeMath: division by zero'
                                        mem[_5569 + 160] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5569 + 164] = ext_call.return_data[0]
                                        if uint16(sha3(mem[_5570 + 32 len mem[_5570]])) >= 25561:
                                            mem[_5569 + 196] = (Mask(8, 24, _5572) >> 24) + 1
                                            mem[_5569 + 228] = 1
                                            mem[_5569 + 260] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(8, 24, _5572) >> 24) + 1, 1, block.timestamp
                                        else:
                                            mem[_5569 + 196] = (Mask(13, 19, _5572) >> 19) + 512
                                            mem[_5569 + 228] = 2
                                            mem[_5569 + 260] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(13, 19, _5572) >> 19) + 512, 2, block.timestamp
                        else:
                            mem[_5569 + 96] = 30
                            mem[_5569 + 128] = 'SafeMath: subtraction overflow'
                            if uint64(ext_call.return_data[0]) >> 192 > 30:
                                mem[_5569 + 160] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_5569 + 164] = 32
                                idx = 32
                                while idx < 30:
                                    mem[idx + _5569 + 228] = mem[idx + _5569 + 128]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 'SafeMath: subtraction overflow'
                            mem[64] = _5569 + 224
                            mem[_5569 + 160] = 26
                            mem[_5569 + 192] = 'SafeMath: division by zero'
                            if not -(uint64(ext_call.return_data[0]) >> 192) + 30:
                                mem[_5569 + 224] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_5569 + 228] = 32
                                idx = 0
                                while idx < 26:
                                    mem[idx + _5569 + 292] = mem[idx + _5569 + 192]
                                    idx = idx + 32
                                    continue 
                                mem[_5569 + 292] = mem[_5569 + 298 len 26]
                                revert with 0, 32, 26, mem[_5569 + 292]
                            if uint16(_5572) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 656:
                                if not Mask(16, 16, _5572) >> 16:
                                    mem[_5569 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                    mem[_5569 + 228] = ext_call.return_data[0]
                                    mem[_5569 + 260] = 524288
                                    mem[_5569 + 292] = 16
                                    mem[_5569 + 324] = block.timestamp
                                    require ext_code.size(erc721ContractAddress)
                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 524288, 16, block.timestamp
                                else:
                                    if Mask(16, 16, _5572) >> 13 / Mask(16, 16, _5572) >> 16 != 8:
                                        revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5569 + 325 len 31]
                                    mem[_5569 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                    mem[_5569 + 228] = ext_call.return_data[0]
                                    mem[_5569 + 260] = (Mask(16, 16, _5572) >> 13) + 524288
                                    mem[_5569 + 292] = 16
                                    mem[_5569 + 324] = block.timestamp
                                    require ext_code.size(erc721ContractAddress)
                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], (Mask(16, 16, _5572) >> 13) + 524288, 16, block.timestamp
                            else:
                                if uint16(_5572) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 2623:
                                    if not Mask(16, 16, _5572) >> 16:
                                        mem[_5569 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5569 + 228] = ext_call.return_data[0]
                                        mem[_5569 + 260] = 131072
                                        mem[_5569 + 292] = 8
                                        mem[_5569 + 324] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 131072, 8, block.timestamp
                                    else:
                                        if Mask(16, 16, _5572) >> 14 / Mask(16, 16, _5572) >> 16 != 4:
                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5569 + 325 len 31]
                                        mem[_5569 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5569 + 228] = ext_call.return_data[0]
                                        mem[_5569 + 260] = (Mask(16, 16, _5572) >> 14) + 131072
                                        mem[_5569 + 292] = 8
                                        mem[_5569 + 324] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], (Mask(16, 16, _5572) >> 14) + 131072, 8, block.timestamp
                                else:
                                    if uint16(_5572) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 9177:
                                        mem[_5569 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5569 + 228] = ext_call.return_data[0]
                                        mem[_5569 + 260] = (Mask(16, 16, _5572) >> 16) + 16384
                                        mem[_5569 + 292] = 4
                                        mem[_5569 + 324] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], (Mask(16, 16, _5572) >> 16) + 16384, 4, block.timestamp
                                    else:
                                        mem[64] = _5569 + 288
                                        mem[_5569 + 224] = 26
                                        mem[_5569 + 256] = 'SafeMath: division by zero'
                                        mem[_5569 + 288] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5569 + 292] = ext_call.return_data[0]
                                        if uint16(_5572) / -(uint64(ext_call.return_data[0]) >> 192) + 30 >= 25561:
                                            mem[_5569 + 324] = (Mask(8, 24, _5572) >> 24) + 1
                                            mem[_5569 + 356] = 1
                                            mem[_5569 + 388] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(8, 24, _5572) >> 24) + 1, 1, block.timestamp
                                        else:
                                            mem[_5569 + 324] = (Mask(13, 19, _5572) >> 19) + 512
                                            mem[_5569 + 356] = 2
                                            mem[_5569 + 388] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(13, 19, _5572) >> 19) + 512, 2, block.timestamp
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
            else:
                mem[32] = sha3(arg2, 19)
                purchaseIdtoTokenIds[arg2][arg5].field_0++
                mem[0] = sha3(arg5, sha3(arg2, 19))
                purchaseIdtoTokenIds[arg2][arg5][purchaseIdtoTokenIds[arg2][arg5].field_0].field_0 = ext_call.return_data[0]
                emit 0x29ed85fa: arg5, ext_call.return_data[32] + block.timestamp, arg2, ext_call.return_data[0]
                mem[mem[64]] = 0x9a43573c00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = arg1
                mem[mem[64] + 36] = ext_call.return_data[0]
                mem[mem[64] + 68] = ext_call.return_data[32] + block.timestamp
                require ext_code.size(erc721ContractAddress)
                call erc721ContractAddress.transferNewToken(bytes32 arg1, uint256 arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args arg1, ext_call.return_data[0], ext_call.return_data[32] + block.timestamp
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                if not arg2:
                    mem[0] = cd[((32 * idx) + arg4 + 36)]
                    mem[32] = sha3(arg3, 17)
                    if not stor17[arg3][cd[((32 * idx) + arg4 + 36)]]:
                        revert with 0, 'collectible must be on sale'
                    if ext_call.return_data[64]:
                        mem[mem[64]] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = ext_call.return_data[0]
                        mem[mem[64] + 36] = ext_call.return_data[64]
                        mem[mem[64] + 68] = 0
                        mem[mem[64] + 100] = block.timestamp
                        require ext_code.size(erc721ContractAddress)
                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0], ext_call.return_data[64], 0, block.timestamp
                    else:
                        _5713 = mem[64]
                        mem[mem[64] + 32] = ext_call.return_data[0]
                        mem[mem[64] + 64] = block.timestamp
                        _5714 = mem[64]
                        mem[mem[64]] = 64
                        mem[64] = mem[64] + 96
                        _5716 = sha3(mem[_5714 + 32 len mem[_5714]])
                        if uint64(ext_call.return_data[0]) >> 192 >= 30:
                            if uint16(sha3(mem[_5714 + 32 len mem[_5714]])) < 656:
                                if not Mask(16, 16, sha3(mem[_5714 + 32 len mem[_5714]])) >> 16:
                                    mem[_5713 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                    mem[_5713 + 100] = ext_call.return_data[0]
                                    mem[_5713 + 132] = 524288
                                    mem[_5713 + 164] = 16
                                    mem[_5713 + 196] = block.timestamp
                                    require ext_code.size(erc721ContractAddress)
                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 524288, 16, block.timestamp
                                else:
                                    if Mask(16, 16, sha3(mem[_5714 + 32 len mem[_5714]])) >> 13 / Mask(16, 16, sha3(mem[_5714 + 32 len mem[_5714]])) >> 16 != 8:
                                        revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5713 + 197 len 31]
                                    mem[_5713 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                    mem[_5713 + 100] = ext_call.return_data[0]
                                    mem[_5713 + 132] = (Mask(16, 16, _5716) >> 13) + 524288
                                    mem[_5713 + 164] = 16
                                    mem[_5713 + 196] = block.timestamp
                                    require ext_code.size(erc721ContractAddress)
                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], (Mask(16, 16, _5716) >> 13) + 524288, 16, block.timestamp
                            else:
                                if uint16(sha3(mem[_5714 + 32 len mem[_5714]])) < 2623:
                                    if not Mask(16, 16, sha3(mem[_5714 + 32 len mem[_5714]])) >> 16:
                                        mem[_5713 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5713 + 100] = ext_call.return_data[0]
                                        mem[_5713 + 132] = 131072
                                        mem[_5713 + 164] = 8
                                        mem[_5713 + 196] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 131072, 8, block.timestamp
                                    else:
                                        if Mask(16, 16, sha3(mem[_5714 + 32 len mem[_5714]])) >> 14 / Mask(16, 16, sha3(mem[_5714 + 32 len mem[_5714]])) >> 16 != 4:
                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5713 + 197 len 31]
                                        mem[_5713 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5713 + 100] = ext_call.return_data[0]
                                        mem[_5713 + 132] = (Mask(16, 16, _5716) >> 14) + 131072
                                        mem[_5713 + 164] = 8
                                        mem[_5713 + 196] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], (Mask(16, 16, _5716) >> 14) + 131072, 8, block.timestamp
                                else:
                                    if uint16(sha3(mem[_5714 + 32 len mem[_5714]])) < 9177:
                                        mem[_5713 + 96] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5713 + 100] = ext_call.return_data[0]
                                        mem[_5713 + 132] = (Mask(16, 16, _5716) >> 16) + 16384
                                        mem[_5713 + 164] = 4
                                        mem[_5713 + 196] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], (Mask(16, 16, _5716) >> 16) + 16384, 4, block.timestamp
                                    else:
                                        mem[64] = _5713 + 160
                                        mem[_5713 + 96] = 26
                                        mem[_5713 + 128] = 'SafeMath: division by zero'
                                        mem[_5713 + 160] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5713 + 164] = ext_call.return_data[0]
                                        if uint16(sha3(mem[_5714 + 32 len mem[_5714]])) >= 25561:
                                            mem[_5713 + 196] = (Mask(8, 24, _5716) >> 24) + 1
                                            mem[_5713 + 228] = 1
                                            mem[_5713 + 260] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(8, 24, _5716) >> 24) + 1, 1, block.timestamp
                                        else:
                                            mem[_5713 + 196] = (Mask(13, 19, _5716) >> 19) + 512
                                            mem[_5713 + 228] = 2
                                            mem[_5713 + 260] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(13, 19, _5716) >> 19) + 512, 2, block.timestamp
                        else:
                            mem[_5713 + 96] = 30
                            mem[_5713 + 128] = 'SafeMath: subtraction overflow'
                            if uint64(ext_call.return_data[0]) >> 192 > 30:
                                mem[_5713 + 160] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_5713 + 164] = 32
                                idx = 32
                                while idx < 30:
                                    mem[idx + _5713 + 228] = mem[idx + _5713 + 128]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 'SafeMath: subtraction overflow'
                            mem[64] = _5713 + 224
                            mem[_5713 + 160] = 26
                            mem[_5713 + 192] = 'SafeMath: division by zero'
                            if not -(uint64(ext_call.return_data[0]) >> 192) + 30:
                                mem[_5713 + 224] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_5713 + 228] = 32
                                idx = 0
                                while idx < 26:
                                    mem[idx + _5713 + 292] = mem[idx + _5713 + 192]
                                    idx = idx + 32
                                    continue 
                                mem[_5713 + 292] = mem[_5713 + 298 len 26]
                                revert with 0, 32, 26, mem[_5713 + 292]
                            if uint16(_5716) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 656:
                                if not Mask(16, 16, _5716) >> 16:
                                    mem[_5713 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                    mem[_5713 + 228] = ext_call.return_data[0]
                                    mem[_5713 + 260] = 524288
                                    mem[_5713 + 292] = 16
                                    mem[_5713 + 324] = block.timestamp
                                    require ext_code.size(erc721ContractAddress)
                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 524288, 16, block.timestamp
                                else:
                                    if Mask(16, 16, _5716) >> 13 / Mask(16, 16, _5716) >> 16 != 8:
                                        revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5713 + 325 len 31]
                                    mem[_5713 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                    mem[_5713 + 228] = ext_call.return_data[0]
                                    mem[_5713 + 260] = (Mask(16, 16, _5716) >> 13) + 524288
                                    mem[_5713 + 292] = 16
                                    mem[_5713 + 324] = block.timestamp
                                    require ext_code.size(erc721ContractAddress)
                                    call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], (Mask(16, 16, _5716) >> 13) + 524288, 16, block.timestamp
                            else:
                                if uint16(_5716) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 2623:
                                    if not Mask(16, 16, _5716) >> 16:
                                        mem[_5713 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5713 + 228] = ext_call.return_data[0]
                                        mem[_5713 + 260] = 131072
                                        mem[_5713 + 292] = 8
                                        mem[_5713 + 324] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 131072, 8, block.timestamp
                                    else:
                                        if Mask(16, 16, _5716) >> 14 / Mask(16, 16, _5716) >> 16 != 4:
                                            revert with 0, 32, 33, 0x29536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[_5713 + 325 len 31]
                                        mem[_5713 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5713 + 228] = ext_call.return_data[0]
                                        mem[_5713 + 260] = (Mask(16, 16, _5716) >> 14) + 131072
                                        mem[_5713 + 292] = 8
                                        mem[_5713 + 324] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], (Mask(16, 16, _5716) >> 14) + 131072, 8, block.timestamp
                                else:
                                    if uint16(_5716) / -(uint64(ext_call.return_data[0]) >> 192) + 30 < 9177:
                                        mem[_5713 + 224] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5713 + 228] = ext_call.return_data[0]
                                        mem[_5713 + 260] = (Mask(16, 16, _5716) >> 16) + 16384
                                        mem[_5713 + 292] = 4
                                        mem[_5713 + 324] = block.timestamp
                                        require ext_code.size(erc721ContractAddress)
                                        call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], (Mask(16, 16, _5716) >> 16) + 16384, 4, block.timestamp
                                    else:
                                        mem[64] = _5713 + 288
                                        mem[_5713 + 224] = 26
                                        mem[_5713 + 256] = 'SafeMath: division by zero'
                                        mem[_5713 + 288] = 0xc3ac806000000000000000000000000000000000000000000000000000000000
                                        mem[_5713 + 292] = ext_call.return_data[0]
                                        if uint16(_5716) / -(uint64(ext_call.return_data[0]) >> 192) + 30 >= 25561:
                                            mem[_5713 + 324] = (Mask(8, 24, _5716) >> 24) + 1
                                            mem[_5713 + 356] = 1
                                            mem[_5713 + 388] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(8, 24, _5716) >> 24) + 1, 1, block.timestamp
                                        else:
                                            mem[_5713 + 324] = (Mask(13, 19, _5716) >> 19) + 512
                                            mem[_5713 + 356] = 2
                                            mem[_5713 + 388] = block.timestamp
                                            require ext_code.size(erc721ContractAddress)
                                            call erc721ContractAddress.generateCollectible(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], (Mask(13, 19, _5716) >> 19) + 512, 2, block.timestamp
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
        require idx < mem[ceil32(calldata.size) + 128]
        mem[(32 * idx) + ceil32(calldata.size) + 160] = ext_call.return_data[0]
        idx = idx + 1
        continue 
    mem[mem[64]] = 32
    mem[mem[64] + 32] = mem[ceil32(calldata.size) + 128]
    _4692 = mem[ceil32(calldata.size) + 128]
    mem[mem[64] + 64 len floor32(mem[ceil32(calldata.size) + 128])] = mem[ceil32(calldata.size) + 160 len floor32(mem[ceil32(calldata.size) + 128])]
    return 32, mem[mem[64] + 32 len (32 * _4692) + 32]
}



}
